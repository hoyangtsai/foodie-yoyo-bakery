/*! For license information please see bundle.js.LICENSE.txt */
!function(){var e={679:function(e,t,n){"use strict";var r=n(296),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=c(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),y=0;y<a.length;++y){var v=a[y];if(!(i[v]||r&&r[v]||m&&m[v]||l&&l[v])){var g=d(n,v);try{s(t,v,g)}catch(e){}}}}return t}},103:function(e,t){"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,a=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,y=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case i:case l:case a:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case y:case m:case u:return e;default:return t}}case o:return t}}}function S(e){return k(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=i,t.Lazy=y,t.Memo=m,t.Portal=o,t.Profiler=l,t.StrictMode=a,t.Suspense=p,t.isAsyncMode=function(e){return S(e)||k(e)===c},t.isConcurrentMode=S,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===i},t.isLazy=function(e){return k(e)===y},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===o},t.isProfiler=function(e){return k(e)===l},t.isStrictMode=function(e){return k(e)===a},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===f||e===l||e===a||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===v)},t.typeOf=k},296:function(e,t,n){"use strict";e.exports=n(103)},418:function(e){"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,l,u=o(e),s=1;s<arguments.length;s++){for(var c in a=Object(arguments[s]))n.call(a,c)&&(u[c]=a[c]);if(t){l=t(a);for(var f=0;f<l.length;f++)r.call(a,l[f])&&(u[l[f]]=a[l[f]])}}return u}},703:function(e,t,n){"use strict";var r=n(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},697:function(e,t,n){e.exports=n(703)()},414:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:function(e,t,n){"use strict";var r=n(294),o=n(418),i=n(840);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function y(e,t,n,r,o,i,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=a}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new y(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=v.hasOwnProperty(t)?v[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,x=60106,E=60107,C=60108,_=60114,P=60109,N=60110,R=60112,O=60113,T=60120,z=60115,M=60116,L=60121,I=60128,j=60129,A=60130,F=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;S=D("react.element"),x=D("react.portal"),E=D("react.fragment"),C=D("react.strict_mode"),_=D("react.profiler"),P=D("react.provider"),N=D("react.context"),R=D("react.forward_ref"),O=D("react.suspense"),T=D("react.suspense_list"),z=D("react.memo"),M=D("react.lazy"),L=D("react.block"),D("react.scope"),I=D("react.opaque.id"),j=D("react.debug_trace_mode"),A=D("react.offscreen"),F=D("react.legacy_hidden")}var U,$="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function W(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var B=!1;function H(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),i=r.stack.split("\n"),a=o.length-1,l=i.length-1;1<=a&&0<=l&&o[a]!==i[l];)l--;for(;1<=a&&0<=l;a--,l--)if(o[a]!==i[l]){if(1!==a||1!==l)do{if(a--,0>--l||o[a]!==i[l])return"\n"+o[a].replace(" at new "," at ")}while(1<=a&&0<=l);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?W(e):""}function Q(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case x:return"Portal";case _:return"Profiler";case C:return"StrictMode";case O:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case N:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case R:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case z:return q(e.type);case L:return q(e._render);case M:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ie(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ae(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ye=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Se=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function Ee(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Pe=null,Ne=null;function Re(e){if(e=Zr(e)){if("function"!=typeof _e)throw Error(a(280));var t=e.stateNode;t&&(t=to(t),_e(e.stateNode,e.type,t))}}function Oe(e){Pe?Ne?Ne.push(e):Ne=[e]:Pe=e}function Te(){if(Pe){var e=Pe,t=Ne;if(Ne=Pe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function ze(e,t){return e(t)}function Me(e,t,n,r,o){return e(t,n,r,o)}function Le(){}var Ie=ze,je=!1,Ae=!1;function Fe(){null===Pe&&null===Ne||(Le(),Te())}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=to(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Ue=!1;if(f)try{var $e={};Object.defineProperty($e,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(me){Ue=!1}function Ve(e,t,n,r,o,i,a,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var We=!1,Be=null,He=!1,Qe=null,qe={onError:function(e){We=!0,Be=e}};function Ke(e,t,n,r,o,i,a,l,u){We=!1,Be=null,Ve.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ye(e)!==e)throw Error(a(188))}function Je(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return Ge(o),e;if(i===r)return Ge(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,it=[],at=null,lt=null,ut=null,st=new Map,ct=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":at=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=pt(t,n,r,o,i),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function yt(e){var t=Jr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){vt(e)&&n.delete(t)}function bt(){for(ot=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&it.shift()}null!==at&&vt(at)&&(at=null),null!==lt&&vt(lt)&&(lt=null),null!==ut&&vt(ut)&&(ut=null),st.forEach(gt),ct.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<it.length){wt(it[0],e);for(var n=1;n<it.length;n++){var r=it[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==at&&wt(at,e),null!==lt&&wt(lt,e),null!==ut&&wt(ut,e),st.forEach(t),ct.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)yt(n),null===n.blockedOn&&ft.shift()}function St(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xt={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},Et={},Ct={};function _t(e){if(Et[e])return Et[e];if(!xt[e])return e;var t,n=xt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ct)return Et[e]=n[t];return e}f&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var Pt=_t("animationend"),Nt=_t("animationiteration"),Rt=_t("animationstart"),Ot=_t("transitionend"),Tt=new Map,zt=new Map,Mt=["abort","abort",Pt,"animationEnd",Nt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ot,"transitionEnd","waiting","waiting"];function Lt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),zt.set(r,t),Tt.set(r,o),s(o,[r])}}(0,i.unstable_now)();var It=8;function jt(e){if(0!=(1&e))return It=15,1;if(0!=(2&e))return It=14,2;if(0!=(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!=(32&e)?(It=11,32):0!=(t=192&e)?(It=10,t):0!=(256&e)?(It=9,256):0!=(t=3584&e)?(It=8,t):0!=(4096&e)?(It=7,4096):0!=(t=4186112&e)?(It=6,t):0!=(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!=(134217728&e)?(It=3,134217728):0!=(t=805306368&e)?(It=2,t):0!=(1073741824&e)?(It=1,1073741824):(It=8,e)}function At(e,t){var n=e.pendingLanes;if(0===n)return It=0;var r=0,o=0,i=e.expiredLanes,a=e.suspendedLanes,l=e.pingedLanes;if(0!==i)r=i,o=It=15;else if(0!=(i=134217727&n)){var u=i&~a;0!==u?(r=jt(u),o=It):0!=(l&=i)&&(r=jt(l),o=It)}else 0!=(i=n&~a)?(r=jt(i),o=It):0!==l&&(r=jt(l),o=It);if(0===r)return 0;if(r=n&((0>(r=31-Wt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&a)){if(jt(t),o<=It)return t;It=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Wt(t)),r|=e[n],t&=~o;return r}function Ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Dt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Dt(10,t):e;case 10:return 0===(e=Ut(192&~t))?Dt(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(a(358,e))}function Ut(e){return e&-e}function $t(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Wt(t)]=n}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Bt(e)/Ht|0)|0},Bt=Math.log,Ht=Math.LN2,Qt=i.unstable_UserBlockingPriority,qt=i.unstable_runWithPriority,Kt=!0;function Yt(e,t,n,r){je||Le();var o=Gt,i=je;je=!0;try{Me(o,e,t,n,r)}finally{(je=i)||Fe()}}function Xt(e,t,n,r){qt(Qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<it.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),it.push(e);else{var i=Jt(e,t,n,r);if(null===i)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(i,e,t,n,r),void it.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return at=mt(at,e,t,n,r,o),!0;case"dragenter":return lt=mt(lt,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return st.set(i,mt(st.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,ct.set(i,mt(ct.get(i)||null,e,t,n,r,o)),!0}return!1}(i,e,t,n,r))return;ht(e,r)}Tr(e,t,r,null,n)}}}function Jt(e,t,n,r){var o=Ce(r);if(null!==(o=Jr(o))){var i=Ye(o);if(null===i)o=null;else{var a=i.tag;if(13===a){if(null!==(o=Xe(i)))return o;o=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;o=null}else i!==o&&(o=null)}}return Tr(e,t,r,o,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Zt?Zt.value:Zt.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,i){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(o):o[a]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,sn,cn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),yn=ln(mn),vn=ln(o({},mn,{dataTransfer:0})),gn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(o({},fn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},En={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=En[e])&&!!t[e]}function _n(){return Cn}var Pn=ln(o({},pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Nn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),On=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=ln(o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),zn=[9,13,27,32],Mn=f&&"CompositionEvent"in window,Ln=null;f&&"documentMode"in document&&(Ln=document.documentMode);var In=f&&"TextEvent"in window&&!Ln,jn=f&&(!Mn||Ln&&8<Ln&&11>=Ln),An=String.fromCharCode(32),Fn=!1;function Dn(e,t){switch(e){case"keyup":return-1!==zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $n=!1,Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function Bn(e,t,n,r){Oe(r),0<(t=Mr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,Qn=null;function qn(e){Cr(e,0)}function Kn(e){if(G(eo(e)))return e}function Yn(e,t){if("change"===e)return t}var Xn=!1;if(f){var Gn;if(f){var Jn="oninput"in document;if(!Jn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Jn="function"==typeof Zn.oninput}Gn=Jn}else Gn=!1;Xn=Gn&&(!document.documentMode||9<document.documentMode)}function er(){Hn&&(Hn.detachEvent("onpropertychange",tr),Qn=Hn=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Bn(t,Qn,e,Ce(e)),e=qn,je)e(t);else{je=!0;try{ze(e,t)}finally{je=!1,Fe()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,(Hn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function or(e,t){if("click"===e)return Kn(t)}function ir(e,t){if("input"===e||"change"===e)return Kn(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!ar(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,yr=null,vr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==J(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ur(vr,r)||(vr=r,0<(r=Mr(yr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Lt(Mt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)zt.set(wr[kr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sr));function Er(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,i,l,u,s){if(Ke.apply(this,arguments),We){if(!We)throw Error(a(198));var c=Be;We=!1,Be=null,He||(He=!0,Qe=c)}}(r,t,void 0,e),e.currentTarget=null}function Cr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var a=r.length-1;0<=a;a--){var l=r[a],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==i&&o.isPropagationStopped())break e;Er(o,l,s),i=u}else for(a=0;a<r.length;a++){if(u=(l=r[a]).instance,s=l.currentTarget,l=l.listener,u!==i&&o.isPropagationStopped())break e;Er(o,l,s),i=u}}}if(He)throw e=Qe,He=!1,Qe=null,e}function _r(e,t){var n=no(t),r=e+"__bubble";n.has(r)||(Or(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Nr(e){e[Pr]||(e[Pr]=!0,l.forEach((function(t){xr.has(t)||Rr(t,!1,e,null),Rr(t,!0,e,null)})))}function Rr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=n;if("selectionchange"===e&&9!==n.nodeType&&(i=n.ownerDocument),null!==r&&!t&&xr.has(e)){if("scroll"!==e)return;o|=2,i=r}var a=no(i),l=e+"__"+(t?"capture":"bubble");a.has(l)||(t&&(o|=4),Or(i,e,o,t),a.add(l))}function Or(e,t,n,r){var o=zt.get(t);switch(void 0===o?2:o){case 0:o=Yt;break;case 1:o=Xt;break;default:o=Gt}n=o.bind(null,t,n,e),o=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,o){var i=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===a)for(a=r.return;null!==a;){var u=a.tag;if((3===u||4===u)&&((u=a.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;a=a.return}for(;null!==l;){if(null===(a=Jr(l)))return;if(5===(u=a.tag)||6===u){r=i=a;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ae)return e();Ae=!0;try{Ie(e,t,n)}finally{Ae=!1,Fe()}}((function(){var r=i,o=Ce(n),a=[];e:{var l=Tt.get(e);if(void 0!==l){var u=dn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Rn;break;case Pt:case Nt:case Rt:u=bn;break;case Ot:u=On;break;case"scroll":u=hn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Nn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=De(h,d))&&c.push(zr(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,o),a.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Jr(s)&&!s[Xr])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Jr(s):null)&&(s!==(f=Ye(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=yn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Nn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:eo(u),p=null==s?l:eo(s),(l=new c(m,h+"leave",u,n,o)).target=f,l.relatedTarget=p,m=null,Jr(o)===r&&((c=new c(d,h+"enter",s,n,o)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Lr(p))h++;for(p=0,m=d;m;m=Lr(m))p++;for(;0<h-p;)c=Lr(c),h--;for(;0<p-h;)d=Lr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Lr(c),d=Lr(d)}c=null}else c=null;null!==u&&Ir(a,l,u,c,!1),null!==s&&null!==f&&Ir(a,f,s,c,!0)}if("select"===(u=(l=r?eo(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var y=Yn;else if(Wn(l))if(Xn)y=ir;else{y=rr;var v=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(y=or);switch(y&&(y=y(e,r))?Bn(a,y,n,o):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&oe(l,"number",l.value)),v=r?eo(r):window,e){case"focusin":(Wn(v)||"true"===v.contentEditable)&&(mr=v,yr=r,vr=null);break;case"focusout":vr=yr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(a,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(a,n,o)}var g;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $n?Dn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(jn&&"ko"!==n.locale&&($n||"onCompositionStart"!==b?"onCompositionEnd"===b&&$n&&(g=nn()):(en="value"in(Zt=o)?Zt.value:Zt.textContent,$n=!0)),0<(v=Mr(r,b)).length&&(b=new kn(b,e,null,n,o),a.push({event:b,listeners:v}),(g||null!==(g=Un(n)))&&(b.data=g))),(g=In?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Fn=!0,An);case"textInput":return(e=t.data)===An&&Fn?null:e;default:return null}}(e,n):function(e,t){if($n)return"compositionend"===e||!Mn&&Dn(e,t)?(e=nn(),tn=en=Zt=null,$n=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return jn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Mr(r,"onBeforeInput")).length&&(o=new kn("onBeforeInput","beforeinput",null,n,o),a.push({event:o,listeners:r}),o.data=g)}Cr(a,t)}))}function zr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,i=o.stateNode;5===o.tag&&null!==i&&(o=i,null!=(i=De(e,n))&&r.unshift(zr(e,i,o)),null!=(i=De(e,t))&&r.push(zr(e,i,o))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t,n,r,o){for(var i=t._reactName,a=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=De(n,i))&&a.unshift(zr(n,u,l)):o||null!=(u=De(n,i))&&a.push(zr(n,u,l))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}function jr(){}var Ar=null,Fr=null;function Dr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Vr="function"==typeof clearTimeout?clearTimeout:void 0;function Wr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Br(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Hr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Yr="__reactProps$"+qr,Xr="__reactContainer$"+qr,Gr="__reactEvents$"+qr;function Jr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Xr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Hr(e);null!==e;){if(n=e[Kr])return n;e=Hr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Kr]||e[Xr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function eo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function to(e){return e[Yr]||null}function no(e){var t=e[Gr];return void 0===t&&(t=e[Gr]=new Set),t}var ro=[],oo=-1;function io(e){return{current:e}}function ao(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function lo(e,t){oo++,ro[oo]=e.current,e.current=t}var uo={},so=io(uo),co=io(!1),fo=uo;function po(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ho(e){return null!=e.childContextTypes}function mo(){ao(co),ao(so)}function yo(e,t,n){if(so.current!==uo)throw Error(a(168));lo(so,t),lo(co,n)}function vo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,q(t)||"Unknown",i));return o({},n,r)}function go(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,fo=so.current,lo(so,e),lo(co,co.current),!0}function bo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=vo(e,t,fo),r.__reactInternalMemoizedMergedChildContext=e,ao(co),ao(so),lo(so,e)):ao(co),lo(co,n)}var wo=null,ko=null,So=i.unstable_runWithPriority,xo=i.unstable_scheduleCallback,Eo=i.unstable_cancelCallback,Co=i.unstable_shouldYield,_o=i.unstable_requestPaint,Po=i.unstable_now,No=i.unstable_getCurrentPriorityLevel,Ro=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,To=i.unstable_NormalPriority,zo=i.unstable_LowPriority,Mo=i.unstable_IdlePriority,Lo={},Io=void 0!==_o?_o:function(){},jo=null,Ao=null,Fo=!1,Do=Po(),Uo=1e4>Do?Po:function(){return Po()-Do};function $o(){switch(No()){case Ro:return 99;case Oo:return 98;case To:return 97;case zo:return 96;case Mo:return 95;default:throw Error(a(332))}}function Vo(e){switch(e){case 99:return Ro;case 98:return Oo;case 97:return To;case 96:return zo;case 95:return Mo;default:throw Error(a(332))}}function Wo(e,t){return e=Vo(e),So(e,t)}function Bo(e,t,n){return e=Vo(e),xo(e,t,n)}function Ho(){if(null!==Ao){var e=Ao;Ao=null,Eo(e)}Qo()}function Qo(){if(!Fo&&null!==jo){Fo=!0;var e=0;try{var t=jo;Wo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),jo=null}catch(t){throw null!==jo&&(jo=jo.slice(e+1)),xo(Ro,Ho),t}finally{Fo=!1}}}var qo=k.ReactCurrentBatchConfig;function Ko(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Yo=io(null),Xo=null,Go=null,Jo=null;function Zo(){Jo=Go=Xo=null}function ei(e){var t=Yo.current;ao(Yo),e.type._context._currentValue=t}function ti(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ni(e,t){Xo=e,Jo=Go=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ma=!0),e.firstContext=null)}function ri(e,t){if(Jo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Jo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Go){if(null===Xo)throw Error(a(308));Go=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Go=Go.next=t;return e._currentValue}var oi=!1;function ii(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function li(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ui(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?o=i=a:i=i.next=a,n=n.next}while(null!==n);null===i?o=i=t:i=i.next=t}else o=i=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ci(e,t,n,r){var i=e.updateQueue;oi=!1;var a=i.firstBaseUpdate,l=i.lastBaseUpdate,u=i.shared.pending;if(null!==u){i.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?a=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==a){for(d=i.baseState,l=0,f=c=s=null;;){u=a.lane;var p=a.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var h=e,m=a;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:oi=!0}}null!==a.callback&&(e.flags|=32,null===(u=i.effects)?i.effects=[a]:u.push(a))}else p={eventTime:p,lane:u,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(a=a.next)){if(null===(u=i.shared.pending))break;a=u.next,u.next=null,i.lastBaseUpdate=u,i.shared.pending=null}}null===f&&(s=d),i.baseState=s,i.firstBaseUpdate=c,i.lastBaseUpdate=f,Il|=l,e.lanes=l,e.memoizedState=d}}function fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var di=(new r.Component).refs;function pi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var hi={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=au(),o=lu(e),i=li(r,o);i.payload=t,null!=n&&(i.callback=n),ui(e,i),uu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=au(),o=lu(e),i=li(r,o);i.tag=1,i.payload=t,null!=n&&(i.callback=n),ui(e,i),uu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=au(),r=lu(e),o=li(n,r);o.tag=2,null!=t&&(o.callback=t),ui(e,o),uu(e,r,n)}};function mi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,i))}function yi(e,t,n){var r=!1,o=uo,i=t.contextType;return"object"==typeof i&&null!==i?i=ri(i):(o=ho(t)?fo:so.current,i=(r=null!=(r=t.contextTypes))?po(e,o):uo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=hi,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function vi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&hi.enqueueReplaceState(t,t.state,null)}function gi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=di,ii(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ri(i):(i=ho(t)?fo:so.current,o.context=po(e,i)),ci(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(pi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&hi.enqueueReplaceState(o,o.state,null),ci(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var bi=Array.isArray;function wi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===di&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ki(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Si(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Uu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Bu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=wi(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=wi(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Hu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Vu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Bu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=wi(e,null,t),n.return=e,n;case x:return(t=Hu(t,e.mode,n)).return=e,t}if(bi(t)||V(t))return(t=Vu(t,e.mode,n,null)).return=e,t;ki(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===o?n.type===E?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case x:return n.key===o?c(e,t,n,r):null}if(bi(n)||V(n))return null!==o?null:f(e,t,n,r,null);ki(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===E?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case x:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(bi(r)||V(r))return f(t,e=e.get(n)||null,r,o,null);ki(t,r)}return null}function m(o,a,l,u){for(var s=null,c=null,f=a,m=a=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=p(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===c?s=v:c.sibling=v,c=v,f=y}if(m===l.length)return n(o,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(a=i(f,a,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);m<l.length;m++)null!==(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===c?s=y:c.sibling=y,c=y);return e&&f.forEach((function(e){return t(o,e)})),s}function y(o,l,u,s){var c=V(u);if("function"!=typeof c)throw Error(a(150));if(null==(u=c.call(u)))throw Error(a(151));for(var f=c=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=p(o,m,g.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,y),null===f?c=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=d(o,g.value,s))&&(l=i(g,l,y),null===f?c=g:f.sibling=g,f=g);return c}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,s))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?c=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===E&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case S:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(i.type===E){n(e,s.sibling),(r=o(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=o(s,i.props)).ref=wi(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===E?((r=Vu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=$u(i.type,i.key,i.props,null,e.mode,u)).ref=wi(e,r,i),u.return=e,e=u)}return l(e);case x:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Hu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Bu(i,e.mode,u)).return=e,e=r),l(e);if(bi(i))return m(e,r,i,u);if(V(i))return y(e,r,i,u);if(c&&ki(e,i),void 0===i&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,q(e.type)||"Component"))}return n(e,r)}}var xi=Si(!0),Ei=Si(!1),Ci={},_i=io(Ci),Pi=io(Ci),Ni=io(Ci);function Ri(e){if(e===Ci)throw Error(a(174));return e}function Oi(e,t){switch(lo(Ni,t),lo(Pi,e),lo(_i,Ci),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ao(_i),lo(_i,t)}function Ti(){ao(_i),ao(Pi),ao(Ni)}function zi(e){Ri(Ni.current);var t=Ri(_i.current),n=pe(t,e.type);t!==n&&(lo(Pi,e),lo(_i,n))}function Mi(e){Pi.current===e&&(ao(_i),ao(Pi))}var Li=io(0);function Ii(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ji=null,Ai=null,Fi=!1;function Di(e,t){var n=Fu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ui(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function $i(e){if(Fi){var t=Ai;if(t){var n=t;if(!Ui(e,t)){if(!(t=Br(n.nextSibling))||!Ui(e,t))return e.flags=-1025&e.flags|2,Fi=!1,void(ji=e);Di(ji,n)}ji=e,Ai=Br(t.firstChild)}else e.flags=-1025&e.flags|2,Fi=!1,ji=e}}function Vi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ji=e}function Wi(e){if(e!==ji)return!1;if(!Fi)return Vi(e),Fi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Ai;t;)Di(e,t),t=Br(t.nextSibling);if(Vi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ai=Br(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ai=null}}else Ai=ji?Br(e.stateNode.nextSibling):null;return!0}function Bi(){Ai=ji=null,Fi=!1}var Hi=[];function Qi(){for(var e=0;e<Hi.length;e++)Hi[e]._workInProgressVersionPrimary=null;Hi.length=0}var qi=k.ReactCurrentDispatcher,Ki=k.ReactCurrentBatchConfig,Yi=0,Xi=null,Gi=null,Ji=null,Zi=!1,ea=!1;function ta(){throw Error(a(321))}function na(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function ra(e,t,n,r,o,i){if(Yi=i,Xi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qi.current=null===e||null===e.memoizedState?Ra:Oa,e=n(r,o),ea){i=0;do{if(ea=!1,!(25>i))throw Error(a(301));i+=1,Ji=Gi=null,t.updateQueue=null,qi.current=Ta,e=n(r,o)}while(ea)}if(qi.current=Na,t=null!==Gi&&null!==Gi.next,Yi=0,Ji=Gi=Xi=null,Zi=!1,t)throw Error(a(300));return e}function oa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ji?Xi.memoizedState=Ji=e:Ji=Ji.next=e,Ji}function ia(){if(null===Gi){var e=Xi.alternate;e=null!==e?e.memoizedState:null}else e=Gi.next;var t=null===Ji?Xi.memoizedState:Ji.next;if(null!==t)Ji=t,Gi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Gi=e).memoizedState,baseState:Gi.baseState,baseQueue:Gi.baseQueue,queue:Gi.queue,next:null},null===Ji?Xi.memoizedState=Ji=e:Ji=Ji.next=e}return Ji}function aa(e,t){return"function"==typeof t?t(e):t}function la(e){var t=ia(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Gi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=i=null,s=o;do{var c=s.lane;if((Yi&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,i=r):u=u.next=f,Xi.lanes|=c,Il|=c}s=s.next}while(null!==s&&s!==o);null===u?i=r:u.next=l,ar(r,t.memoizedState)||(Ma=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ua(e){var t=ia(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);ar(i,t.memoizedState)||(Ma=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function sa(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Yi&e)===e)&&(t._workInProgressVersionPrimary=r,Hi.push(t))),e)return n(t._source);throw Hi.push(t),Error(a(350))}function ca(e,t,n,r){var o=Pl;if(null===o)throw Error(a(349));var i=t._getVersion,l=i(t._source),u=qi.current,s=u.useState((function(){return sa(o,t,n)})),c=s[1],f=s[0];s=Ji;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var y=Xi;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=i(t._source);if(!ar(l,e)){e=n(t._source),ar(f,e)||(c(e),e=lu(y),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,a=e;0<a;){var u=31-Wt(a),s=1<<u;r[u]|=e,a&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(y);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ar(h,n)&&ar(m,t)&&ar(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:aa,lastRenderedState:f}).dispatch=c=Pa.bind(null,Xi,e),s.queue=e,s.baseQueue=null,f=sa(o,t,n),s.memoizedState=s.baseState=f),f}function fa(e,t,n){return ca(ia(),e,t,n)}function da(e){var t=oa();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:aa,lastRenderedState:e}).dispatch=Pa.bind(null,Xi,e),[t.memoizedState,e]}function pa(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Xi.updateQueue)?(t={lastEffect:null},Xi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ha(e){return e={current:e},oa().memoizedState=e}function ma(){return ia().memoizedState}function ya(e,t,n,r){var o=oa();Xi.flags|=e,o.memoizedState=pa(1|t,n,void 0,void 0===r?null:r)}function va(e,t,n,r){var o=ia();r=void 0===r?null:r;var i=void 0;if(null!==Gi){var a=Gi.memoizedState;if(i=a.destroy,null!==r&&na(r,a.deps))return void pa(t,n,i,r)}Xi.flags|=e,o.memoizedState=pa(1|t,n,i,r)}function ga(e,t){return ya(516,4,e,t)}function ba(e,t){return va(516,4,e,t)}function wa(e,t){return va(4,2,e,t)}function ka(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Sa(e,t,n){return n=null!=n?n.concat([e]):null,va(4,2,ka.bind(null,t,e),n)}function xa(){}function Ea(e,t){var n=ia();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&na(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ca(e,t){var n=ia();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&na(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function _a(e,t){var n=$o();Wo(98>n?98:n,(function(){e(!0)})),Wo(97<n?97:n,(function(){var n=Ki.transition;Ki.transition=1;try{e(!1),t()}finally{Ki.transition=n}}))}function Pa(e,t,n){var r=au(),o=lu(e),i={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},a=t.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),t.pending=i,a=e.alternate,e===Xi||null!==a&&a===Xi)ea=Zi=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=a(l,n);if(i.eagerReducer=a,i.eagerState=u,ar(u,l))return}catch(e){}uu(e,o,r)}}var Na={readContext:ri,useCallback:ta,useContext:ta,useEffect:ta,useImperativeHandle:ta,useLayoutEffect:ta,useMemo:ta,useReducer:ta,useRef:ta,useState:ta,useDebugValue:ta,useDeferredValue:ta,useTransition:ta,useMutableSource:ta,useOpaqueIdentifier:ta,unstable_isNewReconciler:!1},Ra={readContext:ri,useCallback:function(e,t){return oa().memoizedState=[e,void 0===t?null:t],e},useContext:ri,useEffect:ga,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ya(4,2,ka.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ya(4,2,e,t)},useMemo:function(e,t){var n=oa();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=oa();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pa.bind(null,Xi,e),[r.memoizedState,e]},useRef:ha,useState:da,useDebugValue:xa,useDeferredValue:function(e){var t=da(e),n=t[0],r=t[1];return ga((function(){var t=Ki.transition;Ki.transition=1;try{r(e)}finally{Ki.transition=t}}),[e]),n},useTransition:function(){var e=da(!1),t=e[0];return ha(e=_a.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=oa();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ca(r,e,t,n)},useOpaqueIdentifier:function(){if(Fi){var e=!1,t=function(e){return{$$typeof:I,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(a(355))})),n=da(t)[1];return 0==(2&Xi.mode)&&(Xi.flags|=516,pa(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return da(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Oa={readContext:ri,useCallback:Ea,useContext:ri,useEffect:ba,useImperativeHandle:Sa,useLayoutEffect:wa,useMemo:Ca,useReducer:la,useRef:ma,useState:function(){return la(aa)},useDebugValue:xa,useDeferredValue:function(e){var t=la(aa),n=t[0],r=t[1];return ba((function(){var t=Ki.transition;Ki.transition=1;try{r(e)}finally{Ki.transition=t}}),[e]),n},useTransition:function(){var e=la(aa)[0];return[ma().current,e]},useMutableSource:fa,useOpaqueIdentifier:function(){return la(aa)[0]},unstable_isNewReconciler:!1},Ta={readContext:ri,useCallback:Ea,useContext:ri,useEffect:ba,useImperativeHandle:Sa,useLayoutEffect:wa,useMemo:Ca,useReducer:ua,useRef:ma,useState:function(){return ua(aa)},useDebugValue:xa,useDeferredValue:function(e){var t=ua(aa),n=t[0],r=t[1];return ba((function(){var t=Ki.transition;Ki.transition=1;try{r(e)}finally{Ki.transition=t}}),[e]),n},useTransition:function(){var e=ua(aa)[0];return[ma().current,e]},useMutableSource:fa,useOpaqueIdentifier:function(){return ua(aa)[0]},unstable_isNewReconciler:!1},za=k.ReactCurrentOwner,Ma=!1;function La(e,t,n,r){t.child=null===e?Ei(t,null,n,r):xi(t,e.child,n,r)}function Ia(e,t,n,r,o){n=n.render;var i=t.ref;return ni(t,o),r=ra(e,t,n,r,i,o),null===e||Ma?(t.flags|=1,La(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Za(e,t,o))}function ja(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Du(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Aa(e,t,a,r,o,i))}return a=e.child,0==(o&i)&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)?Za(e,t,i):(t.flags|=1,(e=Uu(a,r)).ref=t.ref,e.return=t,t.child=e)}function Aa(e,t,n,r,o,i){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ma=!1,0==(i&o))return t.lanes=e.lanes,Za(e,t,i);0!=(16384&e.flags)&&(Ma=!0)}return Ua(e,t,n,r,i)}function Fa(e,t,n){var r=t.pendingProps,o=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},yu(0,n);else{if(0==(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},yu(0,e),null;t.memoizedState={baseLanes:0},yu(0,null!==i?i.baseLanes:n)}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,yu(0,r);return La(e,t,o,n),t.child}function Da(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ua(e,t,n,r,o){var i=ho(n)?fo:so.current;return i=po(t,i),ni(t,o),n=ra(e,t,n,r,i,o),null===e||Ma?(t.flags|=1,La(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Za(e,t,o))}function $a(e,t,n,r,o){if(ho(n)){var i=!0;go(t)}else i=!1;if(ni(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),yi(t,n,r),gi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,s=n.contextType;s="object"==typeof s&&null!==s?ri(s):po(t,s=ho(n)?fo:so.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==s)&&vi(t,a,r,s),oi=!1;var d=t.memoizedState;a.state=d,ci(t,r,a,o),u=t.memoizedState,l!==r||d!==u||co.current||oi?("function"==typeof c&&(pi(t,n,c,r),u=t.memoizedState),(l=oi||mi(t,n,l,r,d,u,s))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.flags|=4)):("function"==typeof a.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=s,r=l):("function"==typeof a.componentDidMount&&(t.flags|=4),r=!1)}else{a=t.stateNode,ai(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Ko(t.type,l),a.props=s,f=t.pendingProps,d=a.context,u="object"==typeof(u=n.contextType)&&null!==u?ri(u):po(t,u=ho(n)?fo:so.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==f||d!==u)&&vi(t,a,r,u),oi=!1,d=t.memoizedState,a.state=d,ci(t,r,a,o);var h=t.memoizedState;l!==f||d!==h||co.current||oi?("function"==typeof p&&(pi(t,n,p,r),h=t.memoizedState),(s=oi||mi(t,n,s,r,d,h,u))?(c||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,h,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof a.componentDidUpdate&&(t.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),a.props=r,a.state=h,a.context=u,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Va(e,t,n,r,i,o)}function Va(e,t,n,r,o,i){Da(e,t);var a=0!=(64&t.flags);if(!r&&!a)return o&&bo(t,n,!1),Za(e,t,i);r=t.stateNode,za.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=xi(t,e.child,null,i),t.child=xi(t,null,l,i)):La(e,t,l,i),t.memoizedState=r.state,o&&bo(t,n,!0),t.child}function Wa(e){var t=e.stateNode;t.pendingContext?yo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yo(0,t.context,!1),Oi(e,t.containerInfo)}var Ba,Ha,Qa,qa={dehydrated:null,retryLane:0};function Ka(e,t,n){var r,o=t.pendingProps,i=Li.current,a=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(a=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),lo(Li,1&i),null===e?(void 0!==o.fallback&&$i(t),e=o.children,i=o.fallback,a?(e=Ya(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qa,e):"number"==typeof o.unstable_expectedLoadTime?(e=Ya(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qa,t.lanes=33554432,e):((n=Wu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,a?(o=function(e,t,n,r,o){var i=t.mode,a=e.child;e=a.sibling;var l={mode:"hidden",children:n};return 0==(2&i)&&t.child!==a?((n=t.child).childLanes=0,n.pendingProps=l,null!==(a=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=a,a.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Uu(a,l),null!==e?r=Uu(e,r):(r=Vu(r,i,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),a=t.child,i=e.child.memoizedState,a.memoizedState=null===i?{baseLanes:n}:{baseLanes:i.baseLanes|n},a.childLanes=e.childLanes&~n,t.memoizedState=qa,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Uu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Ya(e,t,n,r){var o=e.mode,i=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==i?(i.childLanes=0,i.pendingProps=t):i=Wu(t,o,0,null),n=Vu(n,o,r,null),i.return=e,n.return=e,i.sibling=n,e.child=i,n}function Xa(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ti(e.return,t)}function Ga(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=o,a.lastEffect=i)}function Ja(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(La(e,t,r.children,n),0!=(2&(r=Li.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Xa(e,n);else if(19===e.tag)Xa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(lo(Li,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Ii(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ga(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ii(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ga(t,!0,n,null,i,t.lastEffect);break;case"together":Ga(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Za(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Il|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Uu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Uu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function el(e,t){if(!Fi)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function tl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&mo(),null;case 3:return Ti(),ao(co),ao(so),Qi(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Wi(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Mi(t);var i=Ri(Ni.current);if(n=t.type,null!==e&&null!=t.stateNode)Ha(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ri(_i.current),Wi(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Kr]=t,r[Yr]=l,n){case"dialog":_r("cancel",r),_r("close",r);break;case"iframe":case"object":case"embed":_r("load",r);break;case"video":case"audio":for(e=0;e<Sr.length;e++)_r(Sr[e],r);break;case"source":_r("error",r);break;case"img":case"image":case"link":_r("error",r),_r("load",r);break;case"details":_r("toggle",r);break;case"input":ee(r,l),_r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},_r("invalid",r);break;case"textarea":ue(r,l),_r("invalid",r)}for(var s in xe(n,l),e=null,l)l.hasOwnProperty(s)&&(i=l[s],"children"===s?"string"==typeof i?r.textContent!==i&&(e=["children",i]):"number"==typeof i&&r.textContent!==""+i&&(e=["children",""+i]):u.hasOwnProperty(s)&&null!=i&&"onScroll"===s&&_r("scroll",r));switch(n){case"input":X(r),re(r,l,!0);break;case"textarea":X(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=jr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===i.nodeType?i:i.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Kr]=t,e[Yr]=r,Ba(e,t),t.stateNode=e,s=Ee(n,r),n){case"dialog":_r("cancel",e),_r("close",e),i=r;break;case"iframe":case"object":case"embed":_r("load",e),i=r;break;case"video":case"audio":for(i=0;i<Sr.length;i++)_r(Sr[i],e);i=r;break;case"source":_r("error",e),i=r;break;case"img":case"image":case"link":_r("error",e),_r("load",e),i=r;break;case"details":_r("toggle",e),i=r;break;case"input":ee(e,r),i=Z(e,r),_r("invalid",e);break;case"option":i=ie(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=o({},r,{value:void 0}),_r("invalid",e);break;case"textarea":ue(e,r),i=le(e,r),_r("invalid",e);break;default:i=r}xe(n,i);var c=i;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ye(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&_r("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ae(e,!!r.multiple,l,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=jr)}Dr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Qa(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ri(Ni.current),Ri(_i.current),Wi(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return ao(Li),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Wi(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Li.current)?0===zl&&(zl=3):(0!==zl&&3!==zl||(zl=4),null===Pl||0==(134217727&Il)&&0==(134217727&jl)||du(Pl,Rl))),(r||n)&&(t.flags|=4),null);case 4:return Ti(),null===e&&Nr(t.stateNode.containerInfo),null;case 10:return ei(t),null;case 17:return ho(t.type)&&mo(),null;case 19:if(ao(Li),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)el(r,!1);else{if(0!==zl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Ii(e))){for(t.flags|=64,el(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return lo(Li,1&Li.current|2),t.child}e=e.sibling}null!==r.tail&&Uo()>Ul&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ii(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Fi)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>Ul&&1073741824!==n&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Li.current,lo(Li,l?1&t|2:1&t),n):null;case 23:case 24:return vu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(a(156,t.tag))}function nl(e){switch(e.tag){case 1:ho(e.type)&&mo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ti(),ao(co),ao(so),Qi(),0!=(64&(t=e.flags)))throw Error(a(285));return e.flags=-4097&t|64,e;case 5:return Mi(e),null;case 13:return ao(Li),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ao(Li),null;case 4:return Ti(),null;case 10:return ei(e),null;case 23:case 24:return vu(),null;default:return null}}function rl(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function ol(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ba=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ha=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Ri(_i.current);var a,l=null;switch(n){case"input":i=Z(e,i),r=Z(e,r),l=[];break;case"option":i=ie(e,i),r=ie(e,r),l=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":i=le(e,i),r=le(e,r),l=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=jr)}for(f in xe(n,r),n=null,i)if(!r.hasOwnProperty(f)&&i.hasOwnProperty(f)&&null!=i[f])if("style"===f){var s=i[f];for(a in s)s.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=i?i[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(a in s)!s.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&s[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&_r("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===I?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Qa=function(e,t,n,r){n!==r&&(t.flags|=4)};var il="function"==typeof WeakMap?WeakMap:Map;function al(e,t,n){(n=li(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,Hl=r),ol(0,t)},n}function ll(e,t,n){(n=li(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ol(0,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ql?Ql=new Set([this]):Ql.add(this),ol(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ul="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Lu(e,t)}else t.current=null}function cl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ko(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Wr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(a(163))}function fl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Tu(n,e),Ou(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ko(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Dr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(a(163))}function dl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(e,t){if(ko&&"function"==typeof ko.onCommitFiberUnmount)try{ko.onCommitFiberUnmount(wo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Tu(t,n);else{r=t;try{o()}catch(e){Lu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Lu(t,e)}break;case 5:sl(t);break;case 4:bl(e,t)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ml(e){return 5===e.tag||3===e.tag||4===e.tag}function yl(e){e:{for(var t=e.return;null!==t;){if(ml(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ml(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?vl(e,n,t):gl(e,n,t)}function vl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=jr));else if(4!==r&&null!==(e=e.child))for(vl(e,t,n),e=e.sibling;null!==e;)vl(e,t,n),e=e.sibling}function gl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function bl(e,t){for(var n,r,o=t,i=!1;;){if(!i){i=o.return;e:for(;;){if(null===i)throw Error(a(160));switch(n=i.stateNode,i.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}i=i.return}i=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,s=u;;)if(pl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(i=!1)}o.sibling.return=o.return,o=o.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ee(e,o),t=Ee(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ye(n,u):"children"===l?ve(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?ae(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(n,!!r.multiple,r.defaultValue,!0):ae(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Dl=Uo(),dl(t.child,!0)),void kl(t);case 19:return void kl(t);case 17:return;case 23:case 24:return void dl(t,null!==t.memoizedState)}throw Error(a(163))}function kl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ul),t.forEach((function(t){var r=ju.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Sl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var xl=Math.ceil,El=k.ReactCurrentDispatcher,Cl=k.ReactCurrentOwner,_l=0,Pl=null,Nl=null,Rl=0,Ol=0,Tl=io(0),zl=0,Ml=null,Ll=0,Il=0,jl=0,Al=0,Fl=null,Dl=0,Ul=1/0;function $l(){Ul=Uo()+500}var Vl,Wl=null,Bl=!1,Hl=null,Ql=null,ql=!1,Kl=null,Yl=90,Xl=[],Gl=[],Jl=null,Zl=0,eu=null,tu=-1,nu=0,ru=0,ou=null,iu=!1;function au(){return 0!=(48&_l)?Uo():-1!==tu?tu:tu=Uo()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===$o()?1:2;if(0===nu&&(nu=Ll),0!==qo.transition){0!==ru&&(ru=null!==Fl?Fl.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=$o(),e=Dt(0!=(4&_l)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zl)throw Zl=0,eu=null,Error(a(185));if(null===(e=su(e,t)))return null;Vt(e,t,n),e===Pl&&(jl|=t,4===zl&&du(e,Rl));var r=$o();1===t?0!=(8&_l)&&0==(48&_l)?pu(e):(cu(e,n),0===_l&&($l(),Ho())):(0==(4&_l)||98!==r&&99!==r||(null===Jl?Jl=new Set([e]):Jl.add(e)),cu(e,n)),Fl=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,i=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Wt(l),s=1<<u,c=i[u];if(-1===c){if(0==(s&r)||0!=(s&o)){c=t,jt(s);var f=It;i[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=At(e,e===Pl?Rl:0),t=It,0===r)null!==n&&(n!==Lo&&Eo(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Lo&&Eo(n)}15===t?(n=pu.bind(null,e),null===jo?(jo=[n],Ao=xo(Ro,Qo)):jo.push(n),n=Lo):n=14===t?Bo(99,pu.bind(null,e)):Bo(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&_l))throw Error(a(327));var t=e.callbackNode;if(Ru()&&e.callbackNode!==t)return null;var n=At(e,e===Pl?Rl:0);if(0===n)return null;var r=n,o=_l;_l|=16;var i=wu();for(Pl===e&&Rl===r||($l(),gu(e,r));;)try{xu();break}catch(t){bu(e,t)}if(Zo(),El.current=i,_l=o,null!==Nl?r=0:(Pl=null,Rl=0,r=zl),0!=(Ll&jl))gu(e,0);else if(0!==r){if(2===r&&(_l|=64,e.hydrate&&(e.hydrate=!1,Wr(e.containerInfo)),0!==(n=Ft(e))&&(r=ku(e,n))),1===r)throw t=Ml,gu(e,0),du(e,n),cu(e,Uo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(a(345));case 2:_u(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Dl+500-Uo())){if(0!==At(e,0))break;if(((o=e.suspendedLanes)&n)!==n){au(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=$r(_u.bind(null,e),r);break}_u(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var l=31-Wt(n);i=1<<l,(l=r[l])>o&&(o=l),n&=~i}if(n=o,10<(n=(120>(n=Uo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*xl(n/1960))-n)){e.timeoutHandle=$r(_u.bind(null,e),n);break}_u(e);break;case 5:_u(e);break;default:throw Error(a(329))}}return cu(e,Uo()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Al,t&=~jl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Wt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&_l))throw Error(a(327));if(Ru(),e===Pl&&0!=(e.expiredLanes&Rl)){var t=Rl,n=ku(e,t);0!=(Ll&jl)&&(n=ku(e,t=At(e,t)))}else n=ku(e,t=At(e,0));if(0!==e.tag&&2===n&&(_l|=64,e.hydrate&&(e.hydrate=!1,Wr(e.containerInfo)),0!==(t=Ft(e))&&(n=ku(e,t))),1===n)throw n=Ml,gu(e,0),du(e,t),cu(e,Uo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,_u(e),cu(e,Uo()),null}function hu(e,t){var n=_l;_l|=1;try{return e(t)}finally{0===(_l=n)&&($l(),Ho())}}function mu(e,t){var n=_l;_l&=-2,_l|=8;try{return e(t)}finally{0===(_l=n)&&($l(),Ho())}}function yu(e,t){lo(Tl,Ol),Ol|=t,Ll|=t}function vu(){Ol=Tl.current,ao(Tl)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Vr(n)),null!==Nl)for(n=Nl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&mo();break;case 3:Ti(),ao(co),ao(so),Qi();break;case 5:Mi(r);break;case 4:Ti();break;case 13:case 19:ao(Li);break;case 10:ei(r);break;case 23:case 24:vu()}n=n.return}Pl=e,Nl=Uu(e.current,null),Rl=Ol=Ll=t,zl=0,Ml=null,Al=jl=Il=0}function bu(e,t){for(;;){var n=Nl;try{if(Zo(),qi.current=Na,Zi){for(var r=Xi.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Zi=!1}if(Yi=0,Ji=Gi=Xi=null,ea=!1,Cl.current=null,null===n||null===n.return){zl=1,Ml=t,Nl=null;break}e:{var i=e,a=n.return,l=n,u=t;if(t=Rl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Li.current),d=a;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var y=d.updateQueue;if(null===y){var v=new Set;v.add(s),d.updateQueue=v}else y.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=li(-1,1);g.tag=2,ui(l,g)}l.lanes|=1;break e}u=void 0,l=t;var b=i.pingCache;if(null===b?(b=i.pingCache=new il,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=Iu.bind(null,i,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==zl&&(zl=2),u=rl(u,l),d=a;do{switch(d.tag){case 3:i=u,d.flags|=4096,t&=-t,d.lanes|=t,si(d,al(0,i,t));break e;case 1:i=u;var k=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Ql||!Ql.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,si(d,ll(d,i,t));break e}}d=d.return}while(null!==d)}Cu(n)}catch(e){t=e,Nl===n&&null!==n&&(Nl=n=n.return);continue}break}}function wu(){var e=El.current;return El.current=Na,null===e?Na:e}function ku(e,t){var n=_l;_l|=16;var r=wu();for(Pl===e&&Rl===t||gu(e,t);;)try{Su();break}catch(t){bu(e,t)}if(Zo(),_l=n,El.current=r,null!==Nl)throw Error(a(261));return Pl=null,Rl=0,zl}function Su(){for(;null!==Nl;)Eu(Nl)}function xu(){for(;null!==Nl&&!Co();)Eu(Nl)}function Eu(e){var t=Vl(e.alternate,e,Ol);e.memoizedProps=e.pendingProps,null===t?Cu(e):Nl=t,Cl.current=null}function Cu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=tl(n,t,Ol)))return void(Nl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ol)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=nl(t)))return n.flags&=2047,void(Nl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===zl&&(zl=5)}function _u(e){var t=$o();return Wo(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Ru()}while(null!==Kl);if(0!=(48&_l))throw Error(a(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,i=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<i;){var s=31-Wt(i),c=1<<s;o[s]=0,l[s]=-1,u[s]=-1,i&=~c}if(null!==Jl&&0==(24&r)&&Jl.has(e)&&Jl.delete(e),e===Pl&&(Nl=Pl=null,Rl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=_l,_l|=32,Cl.current=null,Ar=Kt,pr(l=dr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,i=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,y=l,v=null;t:for(;;){for(var g;y!==u||0!==i&&3!==y.nodeType||(d=f+i),y!==s||0!==c&&3!==y.nodeType||(p=f+c),3===y.nodeType&&(f+=y.nodeValue.length),null!==(g=y.firstChild);)v=y,y=g;for(;;){if(y===l)break t;if(v===u&&++h===i&&(d=f),v===s&&++m===c&&(p=f),null!==(g=y.nextSibling))break;v=(y=v).parentNode}y=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Fr={focusedElem:l,selectionRange:u},Kt=!1,ou=null,iu=!1,Wl=r;do{try{Nu()}catch(e){if(null===Wl)throw Error(a(330));Lu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);ou=null,Wl=r;do{try{for(l=e;null!==Wl;){var b=Wl.flags;if(16&b&&ve(Wl.stateNode,""),128&b){var w=Wl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:yl(Wl),Wl.flags&=-3;break;case 6:yl(Wl),Wl.flags&=-3,wl(Wl.alternate,Wl);break;case 1024:Wl.flags&=-1025;break;case 1028:Wl.flags&=-1025,wl(Wl.alternate,Wl);break;case 4:wl(Wl.alternate,Wl);break;case 8:bl(l,u=Wl);var S=u.alternate;hl(u),null!==S&&hl(S)}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(a(330));Lu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);if(k=Fr,w=dr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==l&&pr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,S=Math.min(l.start,u),l=void 0===l.end?S:Math.min(l.end,u),!k.extend&&S>l&&(u=l,l=S,S=u),u=cr(b,S),i=cr(b,l),u&&i&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==i.node||k.focusOffset!==i.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),S>l?(k.addRange(w),k.extend(i.node,i.offset)):(w.setEnd(i.node,i.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Ar,Fr=Ar=null,e.current=n,Wl=r;do{try{for(b=e;null!==Wl;){var x=Wl.flags;if(36&x&&fl(b,Wl.alternate,Wl),128&x){w=void 0;var E=Wl.ref;if(null!==E){var C=Wl.stateNode;switch(Wl.tag){case 5:w=C;break;default:w=C}"function"==typeof E?E(w):E.current=w}}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(a(330));Lu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=null,Io(),_l=o}else e.current=n;if(ql)ql=!1,Kl=e,Yl=t;else for(Wl=r;null!==Wl;)t=Wl.nextEffect,Wl.nextEffect=null,8&Wl.flags&&((x=Wl).sibling=null,x.stateNode=null),Wl=t;if(0===(r=e.pendingLanes)&&(Ql=null),1===r?e===eu?Zl++:(Zl=0,eu=e):Zl=0,n=n.stateNode,ko&&"function"==typeof ko.onCommitFiberRoot)try{ko.onCommitFiberRoot(wo,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,Uo()),Bl)throw Bl=!1,e=Hl,Hl=null,e;return 0!=(8&_l)||Ho(),null}function Nu(){for(;null!==Wl;){var e=Wl.alternate;iu||null===ou||(0!=(8&Wl.flags)?Ze(Wl,ou)&&(iu=!0):13===Wl.tag&&Sl(e,Wl)&&Ze(Wl,ou)&&(iu=!0));var t=Wl.flags;0!=(256&t)&&cl(e,Wl),0==(512&t)||ql||(ql=!0,Bo(97,(function(){return Ru(),null}))),Wl=Wl.nextEffect}}function Ru(){if(90!==Yl){var e=97<Yl?97:Yl;return Yl=90,Wo(e,zu)}return!1}function Ou(e,t){Xl.push(t,e),ql||(ql=!0,Bo(97,(function(){return Ru(),null})))}function Tu(e,t){Gl.push(t,e),ql||(ql=!0,Bo(97,(function(){return Ru(),null})))}function zu(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&_l))throw Error(a(331));var t=_l;_l|=32;var n=Gl;Gl=[];for(var r=0;r<n.length;r+=2){var o=n[r],i=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===i)throw Error(a(330));Lu(i,e)}}for(n=Xl,Xl=[],r=0;r<n.length;r+=2){o=n[r],i=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===i)throw Error(a(330));Lu(i,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return _l=t,Ho(),!0}function Mu(e,t,n){ui(e,t=al(0,t=rl(n,t),1)),t=au(),null!==(e=su(e,1))&&(Vt(e,1,t),cu(e,t))}function Lu(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ql||!Ql.has(r))){var o=ll(n,e=rl(t,e),1);if(ui(n,o),o=au(),null!==(n=su(n,1)))Vt(n,1,o),cu(n,o);else if("function"==typeof r.componentDidCatch&&(null===Ql||!Ql.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=au(),e.pingedLanes|=e.suspendedLanes&n,Pl===e&&(Rl&n)===n&&(4===zl||3===zl&&(62914560&Rl)===Rl&&500>Uo()-Dl?gu(e,0):Al|=n),cu(e,t)}function ju(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===$o()?1:2:(0===nu&&(nu=Ll),0===(t=Ut(62914560&~nu))&&(t=4194304))),n=au(),null!==(e=su(e,t))&&(Vt(e,t,n),cu(e,n))}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,n,r){return new Au(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Uu(e,t){var n=e.alternate;return null===n?((n=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Du(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case E:return Vu(n.children,o,i,t);case j:l=8,o|=16;break;case C:l=8,o|=1;break;case _:return(e=Fu(12,n,t,8|o)).elementType=_,e.type=_,e.lanes=i,e;case O:return(e=Fu(13,n,t,o)).type=O,e.elementType=O,e.lanes=i,e;case T:return(e=Fu(19,n,t,o)).elementType=T,e.lanes=i,e;case A:return Wu(n,o,i,t);case F:return(e=Fu(24,n,t,o)).elementType=F,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:l=10;break e;case N:l=9;break e;case R:l=11;break e;case z:l=14;break e;case M:l=16,r=null;break e;case L:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Fu(l,n,t,o)).elementType=e,t.type=r,t.lanes=i,t}function Vu(e,t,n,r){return(e=Fu(7,e,r,t)).lanes=n,e}function Wu(e,t,n,r){return(e=Fu(23,e,r,t)).elementType=A,e.lanes=n,e}function Bu(e,t,n){return(e=Fu(6,e,null,t)).lanes=n,e}function Hu(e,t,n){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=$t(0),this.expirationTimes=$t(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=$t(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var o=t.current,i=au(),l=lu(o);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var s=n.type;if(ho(s)){n=vo(n,s,u);break e}}n=u}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=li(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ui(o,t),uu(o,l,i),l}function Yu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Xu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Gu(e,t){Xu(e,t),(e=e.alternate)&&Xu(e,t)}function Ju(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ii(t),e[Xr]=n.current,Nr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function es(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Yu(a);l.call(e)}}Ku(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ju(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Yu(a);u.call(e)}}mu((function(){Ku(t,a,e,o)}))}return Yu(a)}function ts(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(a(200));return qu(e,t,null,n)}Vl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||co.current)Ma=!0;else{if(0==(n&r)){switch(Ma=!1,t.tag){case 3:Wa(t),Bi();break;case 5:zi(t);break;case 1:ho(t.type)&&go(t);break;case 4:Oi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;lo(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ka(e,t,n):(lo(Li,1&Li.current),null!==(t=Za(e,t,n))?t.sibling:null);lo(Li,1&Li.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Ja(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),lo(Li,Li.current),r)break;return null;case 23:case 24:return t.lanes=0,Fa(e,t,n)}return Za(e,t,n)}Ma=0!=(16384&e.flags)}else Ma=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=po(t,so.current),ni(t,n),o=ra(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var i=!0;go(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ii(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&pi(t,r,l,e),o.updater=hi,t.stateNode=o,o._reactInternals=t,gi(t,r,e,n),t=Va(null,t,r,!0,i,n)}else t.tag=0,La(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(i=o._init)(o._payload),t.type=o,i=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===R)return 11;if(e===z)return 14}return 2}(o),e=Ko(o,e),i){case 0:t=Ua(null,t,o,e,n);break e;case 1:t=$a(null,t,o,e,n);break e;case 11:t=Ia(null,t,o,e,n);break e;case 14:t=ja(null,t,o,Ko(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ua(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 1:return r=t.type,o=t.pendingProps,$a(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 3:if(Wa(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ai(e,t),ci(t,r,null,n),(r=t.memoizedState.element)===o)Bi(),t=Za(e,t,n);else{if((i=(o=t.stateNode).hydrate)&&(Ai=Br(t.stateNode.containerInfo.firstChild),ji=t,i=Fi=!0),i){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(i=e[o])._workInProgressVersionPrimary=e[o+1],Hi.push(i);for(n=Ei(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else La(e,t,r,n),Bi();t=t.child}return t;case 5:return zi(t),null===e&&$i(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,Ur(r,o)?l=null:null!==i&&Ur(r,i)&&(t.flags|=16),Da(e,t),La(e,t,l,n),t.child;case 6:return null===e&&$i(t),null;case 13:return Ka(e,t,n);case 4:return Oi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xi(t,null,r,n):La(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ia(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 7:return La(e,t,t.pendingProps,n),t.child;case 8:case 12:return La(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var u=t.type._context;if(lo(Yo,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0==(i=ar(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!co.current){t=Za(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===u.tag&&((c=li(-1,n&-n)).tag=2,ui(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),ti(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}La(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ni(t,n),r=r(o=ri(o,i.unstable_observedBits)),t.flags|=1,La(e,t,r,n),t.child;case 14:return i=Ko(o=t.type,t.pendingProps),ja(e,t,o,i=Ko(o.type,i),r,n);case 15:return Aa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Ko(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ho(r)?(e=!0,go(t)):e=!1,ni(t,n),yi(t,r,o),gi(t,r,o,n),Va(null,t,r,!0,e,n);case 19:return Ja(e,t,n);case 23:case 24:return Fa(e,t,n)}throw Error(a(156,t.tag))},Ju.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Ju.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Xr]=null}))},et=function(e){13===e.tag&&(uu(e,4,au()),Gu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,au()),Gu(e,67108864))},nt=function(e){if(13===e.tag){var t=au(),n=lu(e);uu(e,n,t),Gu(e,n)}},rt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=to(r);if(!o)throw Error(a(90));G(r),ne(r,o)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ae(e,!!n.multiple,t,!1)}},ze=hu,Me=function(e,t,n,r,o){var i=_l;_l|=4;try{return Wo(98,e.bind(null,t,n,r,o))}finally{0===(_l=i)&&($l(),Ho())}},Le=function(){0==(49&_l)&&(function(){if(null!==Jl){var e=Jl;Jl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,Uo())}))}Ho()}(),Ru())},Ie=function(e,t){var n=_l;_l|=2;try{return e(t)}finally{0===(_l=n)&&($l(),Ho())}};var ns={Events:[Zr,eo,to,Oe,Te,Ru,{current:!1}]},rs={findFiberByHostInstance:Jr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},os={bundleType:rs.bundleType,version:rs.version,rendererPackageName:rs.rendererPackageName,rendererConfig:rs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:rs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var is=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!is.isDisabled&&is.supportsFiber)try{wo=is.inject(os),ko=is}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,t.createPortal=ts,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=_l;if(0!=(48&n))return e(t);_l|=1;try{if(e)return Wo(99,e.bind(null,t))}finally{_l=n,Ho()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(a(200));return es(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(a(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(a(40));return!!e._reactRootContainer&&(mu((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return ts(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return es(e,t,n,!1,r)},t.version="17.0.1"},935:function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:function(e,t,n){"use strict";var r=n(418),o=60103,i=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var a=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),i=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),a=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function v(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var b=g.prototype=new v;b.constructor=g,r(b,y.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var r,i={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(1===u)i.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];i.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===i[r]&&(i[r]=u[r]);return{$$typeof:o,type:e,key:a,ref:l,props:i,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,a){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case i:u=!0}}if(u)return a=a(u=e),e=""===r?"."+_(u,0):r,Array.isArray(a)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(a,t,n,"",(function(e){return e}))):null!=a&&(E(a)&&(a=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,n+(!a.key||u&&u.key===a.key?"":(""+a.key).replace(C,"$&/")+"/")+e)),t.push(a)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+_(l=e[s],s);u+=P(l,t,n,c,a)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=P(l=l.value,t,n,c=r+_(l,s++),a);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function N(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function R(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var O={current:null};function T(){var e=O.current;if(null===e)throw Error(p(321));return e}var z={ReactCurrentDispatcher:O,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error(p(143));return e}},t.Component=y,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=z,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var i=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!S.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:o,type:e.type,key:a,ref:l,props:i,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return T().useCallback(e,t)},t.useContext=function(e,t){return T().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return T().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return T().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return T().useLayoutEffect(e,t)},t.useMemo=function(e,t){return T().useMemo(e,t)},t.useReducer=function(e,t,n){return T().useReducer(e,t,n)},t.useRef=function(e){return T().useRef(e)},t.useState=function(e){return T().useState(e)},t.version="17.0.1"},294:function(e,t,n){"use strict";e.exports=n(408)},53:function(e,t){"use strict";var n,r,o,i;if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,y=null,v=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();b=e+g;try{y(!0,e)?k.postMessage(null):(m=!1,y=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){y=e,m||(m=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},o=function(){p(v),v=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<C(o,t)))break e;e[r]=t,e[n]=o,n=r}}function x(e){return void 0===(e=e[0])?null:e}function E(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>C(a,n))void 0!==u&&0>C(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],N=1,R=null,O=3,T=!1,z=!1,M=!1;function L(e){for(var t=x(P);null!==t;){if(null===t.callback)E(P);else{if(!(t.startTime<=e))break;E(P),t.sortIndex=t.expirationTime,S(_,t)}t=x(P)}}function I(e){if(M=!1,L(e),!z)if(null!==x(_))z=!0,n(j);else{var t=x(P);null!==t&&r(I,t.startTime-e)}}function j(e,n){z=!1,M&&(M=!1,o()),T=!0;var i=O;try{for(L(n),R=x(_);null!==R&&(!(R.expirationTime>n)||e&&!t.unstable_shouldYield());){var a=R.callback;if("function"==typeof a){R.callback=null,O=R.priorityLevel;var l=a(R.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?R.callback=l:R===x(_)&&E(_),L(n)}else E(_);R=x(_)}if(null!==R)var u=!0;else{var s=x(P);null!==s&&r(I,s.startTime-n),u=!1}return u}finally{R=null,O=i,T=!1}}var A=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||T||(z=!0,n(j))},t.unstable_getCurrentPriorityLevel=function(){return O},t.unstable_getFirstCallbackNode=function(){return x(_)},t.unstable_next=function(e){switch(O){case 1:case 2:case 3:var t=3;break;default:t=O}var n=O;O=t;try{return e()}finally{O=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=A,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=O;O=e;try{return t()}finally{O=n}},t.unstable_scheduleCallback=function(e,i,a){var l=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?l+a:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:N++,callback:i,priorityLevel:e,startTime:a,expirationTime:u=a+u,sortIndex:-1},a>l?(e.sortIndex=a,S(P,e),null===x(_)&&e===x(P)&&(M?o():M=!0,r(I,a-l))):(e.sortIndex=u,S(_,e),z||T||(z=!0,n(j))),e},t.unstable_wrapCallback=function(e){var t=O;return function(){var n=O;O=t;try{return e.apply(this,arguments)}finally{O=n}}}},840:function(e,t,n){"use strict";e.exports=n(53)}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){"use strict";var e=n(294),t=n(935);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}function i(e,t){if(null==e)return{};var n,r,i=o(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l="object"===("undefined"==typeof window?"undefined":a(window))&&"object"===("undefined"==typeof document?"undefined":a(document))&&9===document.nodeType;function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,c(e,t)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var p={}.constructor;function h(e){if(null==e||"object"!=typeof e)return e;if(Array.isArray(e))return e.map(h);if(e.constructor!==p)return e;var t={};for(var n in e)t[n]=h(e[n]);return t}function m(e,t,n){void 0===e&&(e="unnamed");var r=n.jss,o=h(t);return r.plugins.onCreateRule(e,o,n)||(e[0],null)}var y=function(e,t){for(var n="",r=0;r<e.length&&"!important"!==e[r];r++)n&&(n+=t),n+=e[r];return n},v=function(e,t){if(void 0===t&&(t=!1),!Array.isArray(e))return e;var n="";if(Array.isArray(e[0]))for(var r=0;r<e.length&&"!important"!==e[r];r++)n&&(n+=", "),n+=y(e[r]," ");else n=y(e,", ");return t||"!important"!==e[e.length-1]||(n+=" !important"),n};function g(e,t){for(var n="",r=0;r<t;r++)n+="  ";return n+e}function b(e,t,n){void 0===n&&(n={});var r="";if(!t)return r;var o=n.indent,i=void 0===o?0:o,a=t.fallbacks;if(e&&i++,a)if(Array.isArray(a))for(var l=0;l<a.length;l++){var u=a[l];for(var s in u){var c=u[s];null!=c&&(r&&(r+="\n"),r+=""+g(s+": "+v(c)+";",i))}}else for(var f in a){var d=a[f];null!=d&&(r&&(r+="\n"),r+=""+g(f+": "+v(d)+";",i))}for(var p in t){var h=t[p];null!=h&&"fallbacks"!==p&&(r&&(r+="\n"),r+=""+g(p+": "+v(h)+";",i))}return(r||n.allowEmpty)&&e?(r&&(r="\n"+r+"\n"),g(e+" {"+r,--i)+g("}",i)):r}var w=/([[\].#*$><+~=|^:(),"'`\s])/g,k="undefined"!=typeof CSS&&CSS.escape,S=function(e){return k?k(e):e.replace(w,"\\$1")},x=function(){function e(e,t,n){this.type="style",this.key=void 0,this.isProcessed=!1,this.style=void 0,this.renderer=void 0,this.renderable=void 0,this.options=void 0;var r=n.sheet,o=n.Renderer;this.key=e,this.options=n,this.style=t,r?this.renderer=r.renderer:o&&(this.renderer=new o)}return e.prototype.prop=function(e,t,n){if(void 0===t)return this.style[e];var r=!!n&&n.force;if(!r&&this.style[e]===t)return this;var o=t;n&&!1===n.process||(o=this.options.jss.plugins.onChangeValue(t,e,this));var i=null==o||!1===o,a=e in this.style;if(i&&!a&&!r)return this;var l=i&&a;if(l?delete this.style[e]:this.style[e]=o,this.renderable&&this.renderer)return l?this.renderer.removeProperty(this.renderable,e):this.renderer.setProperty(this.renderable,e,o),this;var u=this.options.sheet;return u&&u.attached,this},e}(),E=function(e){function t(t,n,r){var o;(o=e.call(this,t,n,r)||this).selectorText=void 0,o.id=void 0,o.renderable=void 0;var i=r.selector,a=r.scoped,l=r.sheet,u=r.generateId;return i?o.selectorText=i:!1!==a&&(o.id=u(d(d(o)),l),o.selectorText="."+S(o.id)),o}f(t,e);var n=t.prototype;return n.applyTo=function(e){var t=this.renderer;if(t){var n=this.toJSON();for(var r in n)t.setProperty(e,r,n[r])}return this},n.toJSON=function(){var e={};for(var t in this.style){var n=this.style[t];"object"!=typeof n?e[t]=n:Array.isArray(n)&&(e[t]=v(n))}return e},n.toString=function(e){var t=this.options.sheet,n=t&&t.options.link?r({},e,{allowEmpty:!0}):e;return b(this.selectorText,this.style,n)},s(t,[{key:"selector",set:function(e){if(e!==this.selectorText){this.selectorText=e;var t=this.renderer,n=this.renderable;n&&t&&(t.setSelector(n,e)||t.replaceRule(n,this))}},get:function(){return this.selectorText}}]),t}(x),C={onCreateRule:function(e,t,n){return"@"===e[0]||n.parent&&"keyframes"===n.parent.type?null:new E(e,t,n)}},_={indent:1,children:!0},P=/@([\w-]+)/,N=function(){function e(e,t,n){this.type="conditional",this.at=void 0,this.key=void 0,this.query=void 0,this.rules=void 0,this.options=void 0,this.isProcessed=!1,this.renderable=void 0,this.key=e;var o=e.match(P);for(var i in this.at=o?o[1]:"unknown",this.query=n.name||"@"+this.at,this.options=n,this.rules=new G(r({},n,{parent:this})),t)this.rules.add(i,t[i]);this.rules.process()}var t=e.prototype;return t.getRule=function(e){return this.rules.get(e)},t.indexOf=function(e){return this.rules.indexOf(e)},t.addRule=function(e,t,n){var r=this.rules.add(e,t,n);return r?(this.options.jss.plugins.onProcessRule(r),r):null},t.toString=function(e){if(void 0===e&&(e=_),null==e.indent&&(e.indent=_.indent),null==e.children&&(e.children=_.children),!1===e.children)return this.query+" {}";var t=this.rules.toString(e);return t?this.query+" {\n"+t+"\n}":""},e}(),R=/@media|@supports\s+/,O={onCreateRule:function(e,t,n){return R.test(e)?new N(e,t,n):null}},T={indent:1,children:!0},z=/@keyframes\s+([\w-]+)/,M=function(){function e(e,t,n){this.type="keyframes",this.at="@keyframes",this.key=void 0,this.name=void 0,this.id=void 0,this.rules=void 0,this.options=void 0,this.isProcessed=!1,this.renderable=void 0;var o=e.match(z);o&&o[1]?this.name=o[1]:this.name="noname",this.key=this.type+"-"+this.name,this.options=n;var i=n.scoped,a=n.sheet,l=n.generateId;for(var u in this.id=!1===i?this.name:S(l(this,a)),this.rules=new G(r({},n,{parent:this})),t)this.rules.add(u,t[u],r({},n,{parent:this}));this.rules.process()}return e.prototype.toString=function(e){if(void 0===e&&(e=T),null==e.indent&&(e.indent=T.indent),null==e.children&&(e.children=T.children),!1===e.children)return this.at+" "+this.id+" {}";var t=this.rules.toString(e);return t&&(t="\n"+t+"\n"),this.at+" "+this.id+" {"+t+"}"},e}(),L=/@keyframes\s+/,I=/\$([\w-]+)/g,j=function(e,t){return"string"==typeof e?e.replace(I,(function(e,n){return n in t?t[n]:e})):e},A=function(e,t,n){var r=e[t],o=j(r,n);o!==r&&(e[t]=o)},F={onCreateRule:function(e,t,n){return"string"==typeof e&&L.test(e)?new M(e,t,n):null},onProcessStyle:function(e,t,n){return"style"===t.type&&n?("animation-name"in e&&A(e,"animation-name",n.keyframes),"animation"in e&&A(e,"animation",n.keyframes),e):e},onChangeValue:function(e,t,n){var r=n.options.sheet;if(!r)return e;switch(t){case"animation":case"animation-name":return j(e,r.keyframes);default:return e}}},D=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).renderable=void 0,t}return f(t,e),t.prototype.toString=function(e){var t=this.options.sheet,n=t&&t.options.link?r({},e,{allowEmpty:!0}):e;return b(this.key,this.style,n)},t}(x),U={onCreateRule:function(e,t,n){return n.parent&&"keyframes"===n.parent.type?new D(e,t,n):null}},$=function(){function e(e,t,n){this.type="font-face",this.at="@font-face",this.key=void 0,this.style=void 0,this.options=void 0,this.isProcessed=!1,this.renderable=void 0,this.key=e,this.style=t,this.options=n}return e.prototype.toString=function(e){if(Array.isArray(this.style)){for(var t="",n=0;n<this.style.length;n++)t+=b(this.at,this.style[n]),this.style[n+1]&&(t+="\n");return t}return b(this.at,this.style,e)},e}(),V=/@font-face/,W={onCreateRule:function(e,t,n){return V.test(e)?new $(e,t,n):null}},B=function(){function e(e,t,n){this.type="viewport",this.at="@viewport",this.key=void 0,this.style=void 0,this.options=void 0,this.isProcessed=!1,this.renderable=void 0,this.key=e,this.style=t,this.options=n}return e.prototype.toString=function(e){return b(this.key,this.style,e)},e}(),H={onCreateRule:function(e,t,n){return"@viewport"===e||"@-ms-viewport"===e?new B(e,t,n):null}},Q=function(){function e(e,t,n){this.type="simple",this.key=void 0,this.value=void 0,this.options=void 0,this.isProcessed=!1,this.renderable=void 0,this.key=e,this.value=t,this.options=n}return e.prototype.toString=function(e){if(Array.isArray(this.value)){for(var t="",n=0;n<this.value.length;n++)t+=this.key+" "+this.value[n]+";",this.value[n+1]&&(t+="\n");return t}return this.key+" "+this.value+";"},e}(),q={"@charset":!0,"@import":!0,"@namespace":!0},K=[C,O,F,U,W,H,{onCreateRule:function(e,t,n){return e in q?new Q(e,t,n):null}}],Y={process:!0},X={force:!0,process:!0},G=function(){function e(e){this.map={},this.raw={},this.index=[],this.counter=0,this.options=void 0,this.classes=void 0,this.keyframes=void 0,this.options=e,this.classes=e.classes,this.keyframes=e.keyframes}var t=e.prototype;return t.add=function(e,t,n){var o=this.options,i=o.parent,a=o.sheet,l=o.jss,u=o.Renderer,s=o.generateId,c=o.scoped,f=r({classes:this.classes,parent:i,sheet:a,jss:l,Renderer:u,generateId:s,scoped:c,name:e,keyframes:this.keyframes,selector:void 0},n),d=e;e in this.raw&&(d=e+"-d"+this.counter++),this.raw[d]=t,d in this.classes&&(f.selector="."+S(this.classes[d]));var p=m(d,t,f);if(!p)return null;this.register(p);var h=void 0===f.index?this.index.length:f.index;return this.index.splice(h,0,p),p},t.get=function(e){return this.map[e]},t.remove=function(e){this.unregister(e),delete this.raw[e.key],this.index.splice(this.index.indexOf(e),1)},t.indexOf=function(e){return this.index.indexOf(e)},t.process=function(){var e=this.options.jss.plugins;this.index.slice(0).forEach(e.onProcessRule,e)},t.register=function(e){this.map[e.key]=e,e instanceof E?(this.map[e.selector]=e,e.id&&(this.classes[e.key]=e.id)):e instanceof M&&this.keyframes&&(this.keyframes[e.name]=e.id)},t.unregister=function(e){delete this.map[e.key],e instanceof E?(delete this.map[e.selector],delete this.classes[e.key]):e instanceof M&&delete this.keyframes[e.name]},t.update=function(){var e,t,n;if("string"==typeof(arguments.length<=0?void 0:arguments[0])?(e=arguments.length<=0?void 0:arguments[0],t=arguments.length<=1?void 0:arguments[1],n=arguments.length<=2?void 0:arguments[2]):(t=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1],e=null),e)this.updateOne(this.map[e],t,n);else for(var r=0;r<this.index.length;r++)this.updateOne(this.index[r],t,n)},t.updateOne=function(t,n,r){void 0===r&&(r=Y);var o=this.options,i=o.jss.plugins,a=o.sheet;if(t.rules instanceof e)t.rules.update(n,r);else{var l=t,u=l.style;if(i.onUpdate(n,t,a,r),r.process&&u&&u!==l.style){for(var s in i.onProcessStyle(l.style,l,a),l.style){var c=l.style[s];c!==u[s]&&l.prop(s,c,X)}for(var f in u){var d=l.style[f],p=u[f];null==d&&d!==p&&l.prop(f,null,X)}}}},t.toString=function(e){for(var t="",n=this.options.sheet,r=!!n&&n.options.link,o=0;o<this.index.length;o++){var i=this.index[o].toString(e);(i||r)&&(t&&(t+="\n"),t+=i)}return t},e}(),J=function(){function e(e,t){for(var n in this.options=void 0,this.deployed=void 0,this.attached=void 0,this.rules=void 0,this.renderer=void 0,this.classes=void 0,this.keyframes=void 0,this.queue=void 0,this.attached=!1,this.deployed=!1,this.classes={},this.keyframes={},this.options=r({},t,{sheet:this,parent:this,classes:this.classes,keyframes:this.keyframes}),t.Renderer&&(this.renderer=new t.Renderer(this)),this.rules=new G(this.options),e)this.rules.add(n,e[n]);this.rules.process()}var t=e.prototype;return t.attach=function(){return this.attached||(this.renderer&&this.renderer.attach(),this.attached=!0,this.deployed||this.deploy()),this},t.detach=function(){return this.attached?(this.renderer&&this.renderer.detach(),this.attached=!1,this):this},t.addRule=function(e,t,n){var r=this.queue;this.attached&&!r&&(this.queue=[]);var o=this.rules.add(e,t,n);return o?(this.options.jss.plugins.onProcessRule(o),this.attached?this.deployed?(r?r.push(o):(this.insertRule(o),this.queue&&(this.queue.forEach(this.insertRule,this),this.queue=void 0)),o):o:(this.deployed=!1,o)):null},t.insertRule=function(e){this.renderer&&this.renderer.insertRule(e)},t.addRules=function(e,t){var n=[];for(var r in e){var o=this.addRule(r,e[r],t);o&&n.push(o)}return n},t.getRule=function(e){return this.rules.get(e)},t.deleteRule=function(e){var t="object"==typeof e?e:this.rules.get(e);return!(!t||this.attached&&!t.renderable)&&(this.rules.remove(t),!(this.attached&&t.renderable&&this.renderer)||this.renderer.deleteRule(t.renderable))},t.indexOf=function(e){return this.rules.indexOf(e)},t.deploy=function(){return this.renderer&&this.renderer.deploy(),this.deployed=!0,this},t.update=function(){var e;return(e=this.rules).update.apply(e,arguments),this},t.updateOne=function(e,t,n){return this.rules.updateOne(e,t,n),this},t.toString=function(e){return this.rules.toString(e)},e}(),Z=function(){function e(){this.plugins={internal:[],external:[]},this.registry=void 0}var t=e.prototype;return t.onCreateRule=function(e,t,n){for(var r=0;r<this.registry.onCreateRule.length;r++){var o=this.registry.onCreateRule[r](e,t,n);if(o)return o}return null},t.onProcessRule=function(e){if(!e.isProcessed){for(var t=e.options.sheet,n=0;n<this.registry.onProcessRule.length;n++)this.registry.onProcessRule[n](e,t);e.style&&this.onProcessStyle(e.style,e,t),e.isProcessed=!0}},t.onProcessStyle=function(e,t,n){for(var r=0;r<this.registry.onProcessStyle.length;r++)t.style=this.registry.onProcessStyle[r](t.style,t,n)},t.onProcessSheet=function(e){for(var t=0;t<this.registry.onProcessSheet.length;t++)this.registry.onProcessSheet[t](e)},t.onUpdate=function(e,t,n,r){for(var o=0;o<this.registry.onUpdate.length;o++)this.registry.onUpdate[o](e,t,n,r)},t.onChangeValue=function(e,t,n){for(var r=e,o=0;o<this.registry.onChangeValue.length;o++)r=this.registry.onChangeValue[o](r,t,n);return r},t.use=function(e,t){void 0===t&&(t={queue:"external"});var n=this.plugins[t.queue];-1===n.indexOf(e)&&(n.push(e),this.registry=[].concat(this.plugins.external,this.plugins.internal).reduce((function(e,t){for(var n in t)n in e&&e[n].push(t[n]);return e}),{onCreateRule:[],onProcessRule:[],onProcessStyle:[],onProcessSheet:[],onChangeValue:[],onUpdate:[]}))},e}(),ee=new(function(){function e(){this.registry=[]}var t=e.prototype;return t.add=function(e){var t=this.registry,n=e.options.index;if(-1===t.indexOf(e))if(0===t.length||n>=this.index)t.push(e);else for(var r=0;r<t.length;r++)if(t[r].options.index>n)return void t.splice(r,0,e)},t.reset=function(){this.registry=[]},t.remove=function(e){var t=this.registry.indexOf(e);this.registry.splice(t,1)},t.toString=function(e){for(var t=void 0===e?{}:e,n=t.attached,r=o(t,["attached"]),i="",a=0;a<this.registry.length;a++){var l=this.registry[a];null!=n&&l.attached!==n||(i&&(i+="\n"),i+=l.toString(r))}return i},s(e,[{key:"index",get:function(){return 0===this.registry.length?0:this.registry[this.registry.length-1].options.index}}]),e}()),te="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),ne="2f1acc6c3a606b082e5eef5e54414ffb";null==te[ne]&&(te[ne]=0);var re=te[ne]++,oe=function(e){void 0===e&&(e={});var t=0;return function(n,r){t+=1;var o="",i="";return r&&(r.options.classNamePrefix&&(i=r.options.classNamePrefix),null!=r.options.jss.id&&(o=String(r.options.jss.id))),e.minify?""+(i||"c")+re+o+t:i+n.key+"-"+re+(o?"-"+o:"")+"-"+t}},ie=function(e){var t;return function(){return t||(t=e()),t}},ae=function(e,t){try{return e.attributeStyleMap?e.attributeStyleMap.get(t):e.style.getPropertyValue(t)}catch(e){return""}},le=function(e,t,n){try{var r=n;if(Array.isArray(n)&&(r=v(n,!0),"!important"===n[n.length-1]))return e.style.setProperty(t,r,"important"),!0;e.attributeStyleMap?e.attributeStyleMap.set(t,r):e.style.setProperty(t,r)}catch(e){return!1}return!0},ue=function(e,t){try{e.attributeStyleMap?e.attributeStyleMap.delete(t):e.style.removeProperty(t)}catch(e){}},se=function(e,t){return e.selectorText=t,e.selectorText===t},ce=ie((function(){return document.querySelector("head")}));var fe=ie((function(){var e=document.querySelector('meta[property="csp-nonce"]');return e?e.getAttribute("content"):null})),de=function(e,t,n){try{"insertRule"in e?e.insertRule(t,n):"appendRule"in e&&e.appendRule(t)}catch(e){return!1}return e.cssRules[n]},pe=function(e,t){var n=e.cssRules.length;return void 0===t||t>n?n:t},he=function(){function e(e){this.getPropertyValue=ae,this.setProperty=le,this.removeProperty=ue,this.setSelector=se,this.element=void 0,this.sheet=void 0,this.hasInsertedRules=!1,this.cssRules=[],e&&ee.add(e),this.sheet=e;var t=this.sheet?this.sheet.options:{},n=t.media,r=t.meta,o=t.element;this.element=o||function(){var e=document.createElement("style");return e.textContent="\n",e}(),this.element.setAttribute("data-jss",""),n&&this.element.setAttribute("media",n),r&&this.element.setAttribute("data-meta",r);var i=fe();i&&this.element.setAttribute("nonce",i)}var t=e.prototype;return t.attach=function(){if(!this.element.parentNode&&this.sheet){!function(e,t){var n=t.insertionPoint,r=function(e){var t=ee.registry;if(t.length>0){var n=function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.attached&&r.options.index>t.index&&r.options.insertionPoint===t.insertionPoint)return r}return null}(t,e);if(n&&n.renderer)return{parent:n.renderer.element.parentNode,node:n.renderer.element};if((n=function(e,t){for(var n=e.length-1;n>=0;n--){var r=e[n];if(r.attached&&r.options.insertionPoint===t.insertionPoint)return r}return null}(t,e))&&n.renderer)return{parent:n.renderer.element.parentNode,node:n.renderer.element.nextSibling}}var r=e.insertionPoint;if(r&&"string"==typeof r){var o=function(e){for(var t=ce(),n=0;n<t.childNodes.length;n++){var r=t.childNodes[n];if(8===r.nodeType&&r.nodeValue.trim()===e)return r}return null}(r);if(o)return{parent:o.parentNode,node:o.nextSibling}}return!1}(t);if(!1!==r&&r.parent)r.parent.insertBefore(e,r.node);else if(n&&"number"==typeof n.nodeType){var o=n,i=o.parentNode;i&&i.insertBefore(e,o.nextSibling)}else ce().appendChild(e)}(this.element,this.sheet.options);var e=Boolean(this.sheet&&this.sheet.deployed);this.hasInsertedRules&&e&&(this.hasInsertedRules=!1,this.deploy())}},t.detach=function(){if(this.sheet){var e=this.element.parentNode;e&&e.removeChild(this.element),this.sheet.options.link&&(this.cssRules=[],this.element.textContent="\n")}},t.deploy=function(){var e=this.sheet;e&&(e.options.link?this.insertRules(e.rules):this.element.textContent="\n"+e.toString()+"\n")},t.insertRules=function(e,t){for(var n=0;n<e.index.length;n++)this.insertRule(e.index[n],n,t)},t.insertRule=function(e,t,n){if(void 0===n&&(n=this.element.sheet),e.rules){var r=e,o=n;if("conditional"===e.type||"keyframes"===e.type){var i=pe(n,t);if(!1===(o=de(n,r.toString({children:!1}),i)))return!1;this.refCssRule(e,i,o)}return this.insertRules(r.rules,o),o}var a=e.toString();if(!a)return!1;var l=pe(n,t),u=de(n,a,l);return!1!==u&&(this.hasInsertedRules=!0,this.refCssRule(e,l,u),u)},t.refCssRule=function(e,t,n){e.renderable=n,e.options.parent instanceof J&&(this.cssRules[t]=n)},t.deleteRule=function(e){var t=this.element.sheet,n=this.indexOf(e);return-1!==n&&(t.deleteRule(n),this.cssRules.splice(n,1),!0)},t.indexOf=function(e){return this.cssRules.indexOf(e)},t.replaceRule=function(e,t){var n=this.indexOf(e);return-1!==n&&(this.element.sheet.deleteRule(n),this.cssRules.splice(n,1),this.insertRule(t,n))},t.getRules=function(){return this.element.sheet.cssRules},e}(),me=0,ye=function(){function e(e){this.id=me++,this.version="10.5.1",this.plugins=new Z,this.options={id:{minify:!1},createGenerateId:oe,Renderer:l?he:null,plugins:[]},this.generateId=oe({minify:!1});for(var t=0;t<K.length;t++)this.plugins.use(K[t],{queue:"internal"});this.setup(e)}var t=e.prototype;return t.setup=function(e){return void 0===e&&(e={}),e.createGenerateId&&(this.options.createGenerateId=e.createGenerateId),e.id&&(this.options.id=r({},this.options.id,e.id)),(e.createGenerateId||e.id)&&(this.generateId=this.options.createGenerateId(this.options.id)),null!=e.insertionPoint&&(this.options.insertionPoint=e.insertionPoint),"Renderer"in e&&(this.options.Renderer=e.Renderer),e.plugins&&this.use.apply(this,e.plugins),this},t.createStyleSheet=function(e,t){void 0===t&&(t={});var n=t.index;"number"!=typeof n&&(n=0===ee.index?0:ee.index+1);var o=new J(e,r({},t,{jss:this,generateId:t.generateId||this.generateId,insertionPoint:this.options.insertionPoint,Renderer:this.options.Renderer,index:n}));return this.plugins.onProcessSheet(o),o},t.removeStyleSheet=function(e){return e.detach(),ee.remove(e),this},t.createRule=function(e,t,n){if(void 0===t&&(t={}),void 0===n&&(n={}),"object"==typeof e)return this.createRule(void 0,e,t);var o=r({},n,{name:e,jss:this,Renderer:this.options.Renderer});o.generateId||(o.generateId=this.generateId),o.classes||(o.classes={}),o.keyframes||(o.keyframes={});var i=m(e,t,o);return i&&this.plugins.onProcessRule(i),i},t.use=function(){for(var e=this,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return n.forEach((function(t){e.plugins.use(t)})),this},e}();function ve(e){var t=null;for(var n in e){var r=e[n],o=typeof r;if("function"===o)t||(t={}),t[n]=r;else if("object"===o&&null!==r&&!Array.isArray(r)){var i=ve(r);i&&(t||(t={}),t[n]=i)}}return t}var ge="object"==typeof CSS&&null!=CSS&&"number"in CSS,be=function(e){return new ye(e)};function we(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.baseClasses,n=e.newClasses;if(e.Component,!n)return t;var o=r({},t);return Object.keys(n).forEach((function(e){n[e]&&(o[e]="".concat(t[e]," ").concat(n[e]))})),o}be();var ke=function(e,t,n,r){var o=e.get(t);o||(o=new Map,e.set(t,o)),o.set(n,r)},Se=function(e,t,n){var r=e.get(t);return r?r.get(n):void 0},xe=function(e,t,n){e.get(t).delete(n)},Ee=e.createContext(null);function Ce(){return e.useContext(Ee)}n(697);var _e="function"==typeof Symbol&&Symbol.for?Symbol.for("mui.nested"):"__THEME_NESTED__",Pe=["checked","disabled","error","focused","focusVisible","required","expanded","selected"],Ne=Date.now(),Re="fnValues"+Ne,Oe="fnStyle"+ ++Ne,Te="@global",ze="@global ",Me=function(){function e(e,t,n){for(var o in this.type="global",this.at=Te,this.rules=void 0,this.options=void 0,this.key=void 0,this.isProcessed=!1,this.key=e,this.options=n,this.rules=new G(r({},n,{parent:this})),t)this.rules.add(o,t[o]);this.rules.process()}var t=e.prototype;return t.getRule=function(e){return this.rules.get(e)},t.addRule=function(e,t,n){var r=this.rules.add(e,t,n);return r&&this.options.jss.plugins.onProcessRule(r),r},t.indexOf=function(e){return this.rules.indexOf(e)},t.toString=function(){return this.rules.toString()},e}(),Le=function(){function e(e,t,n){this.type="global",this.at=Te,this.options=void 0,this.rule=void 0,this.isProcessed=!1,this.key=void 0,this.key=e,this.options=n;var o=e.substr(ze.length);this.rule=n.jss.createRule(o,t,r({},n,{parent:this}))}return e.prototype.toString=function(e){return this.rule?this.rule.toString(e):""},e}(),Ie=/\s*,\s*/g;function je(e,t){for(var n=e.split(Ie),r="",o=0;o<n.length;o++)r+=t+" "+n[o].trim(),n[o+1]&&(r+=", ");return r}var Ae=/\s*,\s*/g,Fe=/&/g,De=/\$([\w-]+)/g,Ue=/[A-Z]/g,$e=/^ms-/,Ve={};function We(e){return"-"+e.toLowerCase()}var Be=function(e){if(Ve.hasOwnProperty(e))return Ve[e];var t=e.replace(Ue,We);return Ve[e]=$e.test(t)?"-"+t:t};function He(e){var t={};for(var n in e)t[0===n.indexOf("--")?n:Be(n)]=e[n];return e.fallbacks&&(Array.isArray(e.fallbacks)?t.fallbacks=e.fallbacks.map(He):t.fallbacks=He(e.fallbacks)),t}var Qe=ge&&CSS?CSS.px:"px",qe=ge&&CSS?CSS.ms:"ms",Ke=ge&&CSS?CSS.percent:"%";function Ye(e){var t=/(-[a-z])/g,n=function(e){return e[1].toUpperCase()},r={};for(var o in e)r[o]=e[o],r[o.replace(t,n)]=e[o];return r}var Xe=Ye({"animation-delay":qe,"animation-duration":qe,"background-position":Qe,"background-position-x":Qe,"background-position-y":Qe,"background-size":Qe,border:Qe,"border-bottom":Qe,"border-bottom-left-radius":Qe,"border-bottom-right-radius":Qe,"border-bottom-width":Qe,"border-left":Qe,"border-left-width":Qe,"border-radius":Qe,"border-right":Qe,"border-right-width":Qe,"border-top":Qe,"border-top-left-radius":Qe,"border-top-right-radius":Qe,"border-top-width":Qe,"border-width":Qe,"border-block":Qe,"border-block-end":Qe,"border-block-end-width":Qe,"border-block-start":Qe,"border-block-start-width":Qe,"border-block-width":Qe,"border-inline":Qe,"border-inline-end":Qe,"border-inline-end-width":Qe,"border-inline-start":Qe,"border-inline-start-width":Qe,"border-inline-width":Qe,"border-start-start-radius":Qe,"border-start-end-radius":Qe,"border-end-start-radius":Qe,"border-end-end-radius":Qe,margin:Qe,"margin-bottom":Qe,"margin-left":Qe,"margin-right":Qe,"margin-top":Qe,"margin-block":Qe,"margin-block-end":Qe,"margin-block-start":Qe,"margin-inline":Qe,"margin-inline-end":Qe,"margin-inline-start":Qe,padding:Qe,"padding-bottom":Qe,"padding-left":Qe,"padding-right":Qe,"padding-top":Qe,"padding-block":Qe,"padding-block-end":Qe,"padding-block-start":Qe,"padding-inline":Qe,"padding-inline-end":Qe,"padding-inline-start":Qe,"mask-position-x":Qe,"mask-position-y":Qe,"mask-size":Qe,height:Qe,width:Qe,"min-height":Qe,"max-height":Qe,"min-width":Qe,"max-width":Qe,bottom:Qe,left:Qe,top:Qe,right:Qe,inset:Qe,"inset-block":Qe,"inset-block-end":Qe,"inset-block-start":Qe,"inset-inline":Qe,"inset-inline-end":Qe,"inset-inline-start":Qe,"box-shadow":Qe,"text-shadow":Qe,"column-gap":Qe,"column-rule":Qe,"column-rule-width":Qe,"column-width":Qe,"font-size":Qe,"font-size-delta":Qe,"letter-spacing":Qe,"text-decoration-thickness":Qe,"text-indent":Qe,"text-stroke":Qe,"text-stroke-width":Qe,"word-spacing":Qe,motion:Qe,"motion-offset":Qe,outline:Qe,"outline-offset":Qe,"outline-width":Qe,perspective:Qe,"perspective-origin-x":Ke,"perspective-origin-y":Ke,"transform-origin":Ke,"transform-origin-x":Ke,"transform-origin-y":Ke,"transform-origin-z":Ke,"transition-delay":qe,"transition-duration":qe,"vertical-align":Qe,"flex-basis":Qe,"shape-margin":Qe,size:Qe,gap:Qe,grid:Qe,"grid-gap":Qe,"row-gap":Qe,"grid-row-gap":Qe,"grid-column-gap":Qe,"grid-template-rows":Qe,"grid-template-columns":Qe,"grid-auto-rows":Qe,"grid-auto-columns":Qe,"box-shadow-x":Qe,"box-shadow-y":Qe,"box-shadow-blur":Qe,"box-shadow-spread":Qe,"font-line-height":Qe,"text-shadow-x":Qe,"text-shadow-y":Qe,"text-shadow-blur":Qe});function Ge(e,t,n){if(null==t)return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]=Ge(e,t[r],n);else if("object"==typeof t)if("fallbacks"===e)for(var o in t)t[o]=Ge(o,t[o],n);else for(var i in t)t[i]=Ge(e+"-"+i,t[i],n);else if("number"==typeof t&&!Number.isNaN(t)){var a=n[e]||Xe[e];return!a||0===t&&a===Qe?t.toString():"function"==typeof a?a(t).toString():""+t+a}return t}function Je(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Ze(e,t){if(e){if("string"==typeof e)return Je(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Je(e,t):void 0}}var et="",tt="",nt="",rt="",ot=l&&"ontouchstart"in document.documentElement;if(l){var it={Moz:"-moz-",ms:"-ms-",O:"-o-",Webkit:"-webkit-"},at=document.createElement("p").style;for(var lt in it)if(lt+"Transform"in at){et=lt,tt=it[lt];break}"Webkit"===et&&"msHyphens"in at&&(et="ms",tt=it.ms,rt="edge"),"Webkit"===et&&"-apple-trailing-word"in at&&(nt="apple")}var ut=et,st=tt,ct=nt,ft=rt,dt=ot,pt={noPrefill:["appearance"],supportedProperty:function(e){return"appearance"===e&&("ms"===ut?"-webkit-"+e:st+e)}},ht={noPrefill:["color-adjust"],supportedProperty:function(e){return"color-adjust"===e&&("Webkit"===ut?st+"print-"+e:e)}},mt=/[-\s]+(.)?/g;function yt(e,t){return t?t.toUpperCase():""}function vt(e){return e.replace(mt,yt)}function gt(e){return vt("-"+e)}var bt,wt={noPrefill:["mask"],supportedProperty:function(e,t){if(!/^mask/.test(e))return!1;if("Webkit"===ut){var n="mask-image";if(vt(n)in t)return e;if(ut+gt(n)in t)return st+e}return e}},kt={noPrefill:["text-orientation"],supportedProperty:function(e){return"text-orientation"===e&&("apple"!==ct||dt?e:st+e)}},St={noPrefill:["transform"],supportedProperty:function(e,t,n){return"transform"===e&&(n.transform?e:st+e)}},xt={noPrefill:["transition"],supportedProperty:function(e,t,n){return"transition"===e&&(n.transition?e:st+e)}},Et={noPrefill:["writing-mode"],supportedProperty:function(e){return"writing-mode"===e&&("Webkit"===ut||"ms"===ut&&"edge"!==ft?st+e:e)}},Ct={noPrefill:["user-select"],supportedProperty:function(e){return"user-select"===e&&("Moz"===ut||"ms"===ut||"apple"===ct?st+e:e)}},_t={supportedProperty:function(e,t){return!!/^break-/.test(e)&&("Webkit"===ut?"WebkitColumn"+gt(e)in t&&st+"column-"+e:"Moz"===ut&&"page"+gt(e)in t&&"page-"+e)}},Pt={supportedProperty:function(e,t){if(!/^(border|margin|padding)-inline/.test(e))return!1;if("Moz"===ut)return e;var n=e.replace("-inline","");return ut+gt(n)in t&&st+n}},Nt={supportedProperty:function(e,t){return vt(e)in t&&e}},Rt={supportedProperty:function(e,t){var n=gt(e);return"-"===e[0]||"-"===e[0]&&"-"===e[1]?e:ut+n in t?st+e:"Webkit"!==ut&&"Webkit"+n in t&&"-webkit-"+e}},Ot={supportedProperty:function(e){return"scroll-snap"===e.substring(0,11)&&("ms"===ut?""+st+e:e)}},Tt={supportedProperty:function(e){return"overscroll-behavior"===e&&("ms"===ut?st+"scroll-chaining":e)}},zt={"flex-grow":"flex-positive","flex-shrink":"flex-negative","flex-basis":"flex-preferred-size","justify-content":"flex-pack",order:"flex-order","align-items":"flex-align","align-content":"flex-line-pack"},Mt={supportedProperty:function(e,t){var n=zt[e];return!!n&&ut+gt(n)in t&&st+n}},Lt={flex:"box-flex","flex-grow":"box-flex","flex-direction":["box-orient","box-direction"],order:"box-ordinal-group","align-items":"box-align","flex-flow":["box-orient","box-direction"],"justify-content":"box-pack"},It=Object.keys(Lt),jt=function(e){return st+e},At=[pt,ht,wt,kt,St,xt,Et,Ct,_t,Pt,Nt,Rt,Ot,Tt,Mt,{supportedProperty:function(e,t,n){var r=n.multiple;if(It.indexOf(e)>-1){var o=Lt[e];if(!Array.isArray(o))return ut+gt(o)in t&&st+o;if(!r)return!1;for(var i=0;i<o.length;i++)if(!(ut+gt(o[0])in t))return!1;return o.map(jt)}return!1}}],Ft=At.filter((function(e){return e.supportedProperty})).map((function(e){return e.supportedProperty})),Dt=At.filter((function(e){return e.noPrefill})).reduce((function(e,t){return e.push.apply(e,function(e){if(Array.isArray(e))return Je(e)}(n=t.noPrefill)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||Ze(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),e;var n}),[]),Ut={};if(l){bt=document.createElement("p");var $t=window.getComputedStyle(document.documentElement,"");for(var Vt in $t)isNaN(Vt)||(Ut[$t[Vt]]=$t[Vt]);Dt.forEach((function(e){return delete Ut[e]}))}function Wt(e,t){if(void 0===t&&(t={}),!bt)return e;if(null!=Ut[e])return Ut[e];"transition"!==e&&"transform"!==e||(t[e]=e in bt.style);for(var n=0;n<Ft.length&&(Ut[e]=Ft[n](e,bt.style,t),!Ut[e]);n++);try{bt.style[e]=""}catch(e){return!1}return Ut[e]}var Bt,Ht={},Qt={transition:1,"transition-property":1,"-webkit-transition":1,"-webkit-transition-property":1},qt=/(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;function Kt(e,t,n){return"var"===t?"var":"all"===t?"all":"all"===n?", all":(t?Wt(t):", "+Wt(n))||t||n}function Yt(e,t){var n=t;if(!Bt||"content"===e)return t;if("string"!=typeof n||!isNaN(parseInt(n,10)))return n;var r=e+n;if(null!=Ht[r])return Ht[r];try{Bt.style[e]=n}catch(e){return Ht[r]=!1,!1}if(Qt[e])n=n.replace(qt,Kt);else if(""===Bt.style[e]&&("-ms-flex"===(n=st+n)&&(Bt.style[e]="-ms-flexbox"),Bt.style[e]=n,""===Bt.style[e]))return Ht[r]=!1,!1;return Bt.style[e]="",Ht[r]=n,Ht[r]}l&&(Bt=document.createElement("p"));var Xt,Gt=be({plugins:[{onCreateRule:function(e,t,n){if("function"!=typeof t)return null;var r=m(e,{},n);return r[Oe]=t,r},onProcessStyle:function(e,t){if(Re in t||Oe in t)return e;var n={};for(var r in e){var o=e[r];"function"==typeof o&&(delete e[r],n[r]=o)}return t[Re]=n,e},onUpdate:function(e,t,n,r){var o=t,i=o[Oe];i&&(o.style=i(e)||{});var a=o[Re];if(a)for(var l in a)o.prop(l,a[l](e),r)}},{onCreateRule:function(e,t,n){if(!e)return null;if(e===Te)return new Me(e,t,n);if("@"===e[0]&&e.substr(0,ze.length)===ze)return new Le(e,t,n);var r=n.parent;return r&&("global"===r.type||r.options.parent&&"global"===r.options.parent.type)&&(n.scoped=!1),!1===n.scoped&&(n.selector=e),null},onProcessRule:function(e,t){"style"===e.type&&t&&(function(e,t){var n=e.options,o=e.style,i=o?o[Te]:null;if(i){for(var a in i)t.addRule(a,i[a],r({},n,{selector:je(a,e.selector)}));delete o[Te]}}(e,t),function(e,t){var n=e.options,o=e.style;for(var i in o)if("@"===i[0]&&i.substr(0,Te.length)===Te){var a=je(i.substr(Te.length),e.selector);t.addRule(a,o[i],r({},n,{selector:a})),delete o[i]}}(e,t))}},function(){function e(e,t){return function(n,r){var o=e.getRule(r)||t&&t.getRule(r);return o?(o=o).selector:r}}function t(e,t){for(var n=t.split(Ae),r=e.split(Ae),o="",i=0;i<n.length;i++)for(var a=n[i],l=0;l<r.length;l++){var u=r[l];o&&(o+=", "),o+=-1!==u.indexOf("&")?u.replace(Fe,a):a+" "+u}return o}function n(e,t,n){if(n)return r({},n,{index:n.index+1});var o=e.options.nestingLevel;o=void 0===o?1:o+1;var i=r({},e.options,{nestingLevel:o,index:t.indexOf(e)+1});return delete i.name,i}return{onProcessStyle:function(o,i,a){if("style"!==i.type)return o;var l,u,s=i,c=s.options.parent;for(var f in o){var d=-1!==f.indexOf("&"),p="@"===f[0];if(d||p){if(l=n(s,c,l),d){var h=t(f,s.selector);u||(u=e(c,a)),h=h.replace(De,u),c.addRule(h,o[f],r({},l,{selector:h}))}else p&&c.addRule(f,{},l).addRule(s.key,o[f],{selector:s.selector});delete o[f]}}return o}}}(),{onProcessStyle:function(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)e[t]=He(e[t]);return e}return He(e)},onChangeValue:function(e,t,n){if(0===t.indexOf("--"))return e;var r=Be(t);return t===r?e:(n.prop(r,e),null)}},function(e){void 0===e&&(e={});var t=Ye(e);return{onProcessStyle:function(e,n){if("style"!==n.type)return e;for(var r in e)e[r]=Ge(r,e[r],t);return e},onChangeValue:function(e,n){return Ge(n,e,t)}}}(),"undefined"==typeof window?null:function(){function e(t){for(var n in t){var r=t[n];if("fallbacks"===n&&Array.isArray(r))t[n]=r.map(e);else{var o=!1,i=Wt(n);i&&i!==n&&(o=!0);var a=!1,l=Yt(i,v(r));l&&l!==r&&(a=!0),(o||a)&&(o&&delete t[n],t[i||n]=l||r)}}return t}return{onProcessRule:function(e){if("keyframes"===e.type){var t=e;t.at=function(e){return"-"===e[1]||"ms"===ut?e:"@"+st+"keyframes"+e.substr(10)}(t.at)}},onProcessStyle:function(t,n){return"style"!==n.type?t:e(t)},onChangeValue:function(e,t){return Yt(t,v(e))||e}}}(),(Xt=function(e,t){return e.length===t.length?e>t?1:-1:e.length-t.length},{onProcessStyle:function(e,t){if("style"!==t.type)return e;for(var n={},r=Object.keys(e).sort(Xt),o=0;o<r.length;o++)n[r[o]]=e[r[o]];return n}})]}),Jt={disableGeneration:!1,generateClassName:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.disableGlobal,n=void 0!==t&&t,r=e.productionPrefix,o=void 0===r?"jss":r,i=e.seed,a=void 0===i?"":i,l=""===a?"":"".concat(a,"-"),u=0,s=function(){return u+=1};return function(e,t){var r=t.options.name;if(r&&0===r.indexOf("Mui")&&!t.options.link&&!n){if(-1!==Pe.indexOf(e.key))return"Mui-".concat(e.key);var i="".concat(l).concat(r,"-").concat(e.key);return t.options.theme[_e]&&""===a?"".concat(i,"-").concat(s()):i}return"".concat(l).concat(o).concat(s())}}(),jss:Gt,sheetsCache:null,sheetsManager:new Map,sheetsRegistry:null},Zt=e.createContext(Jt),en=-1e9;function tn(){return en+=1}function nn(e){return(nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function rn(e){return e&&"object"===nn(e)&&e.constructor===Object}function on(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{clone:!0},o=n.clone?r({},e):e;return rn(e)&&rn(t)&&Object.keys(t).forEach((function(r){"__proto__"!==r&&(rn(t[r])&&r in e?o[r]=on(e[r],t[r],n):o[r]=t[r])})),o}function an(e){var t="function"==typeof e;return{create:function(n,o){var i;try{i=t?e(n):e}catch(e){throw e}if(!o||!n.overrides||!n.overrides[o])return i;var a=n.overrides[o],l=r({},i);return Object.keys(a).forEach((function(e){l[e]=on(l[e],a[e])})),l},options:{}}}var ln={};function un(e,t,n){var r=e.state;if(e.stylesOptions.disableGeneration)return t||{};r.cacheClasses||(r.cacheClasses={value:null,lastProp:null,lastJSS:{}});var o=!1;return r.classes!==r.cacheClasses.lastJSS&&(r.cacheClasses.lastJSS=r.classes,o=!0),t!==r.cacheClasses.lastProp&&(r.cacheClasses.lastProp=t,o=!0),o&&(r.cacheClasses.value=we({baseClasses:r.cacheClasses.lastJSS,newClasses:t,Component:n})),r.cacheClasses.value}function sn(e,t){var n=e.state,o=e.theme,i=e.stylesOptions,a=e.stylesCreator,l=e.name;if(!i.disableGeneration){var u=Se(i.sheetsManager,a,o);u||(u={refs:0,staticSheet:null,dynamicStyles:null},ke(i.sheetsManager,a,o,u));var s=r({},a.options,i,{theme:o,flip:"boolean"==typeof i.flip?i.flip:"rtl"===o.direction});s.generateId=s.serverGenerateClassName||s.generateClassName;var c=i.sheetsRegistry;if(0===u.refs){var f;i.sheetsCache&&(f=Se(i.sheetsCache,a,o));var d=a.create(o,l);f||((f=i.jss.createStyleSheet(d,r({link:!1},s))).attach(),i.sheetsCache&&ke(i.sheetsCache,a,o,f)),c&&c.add(f),u.staticSheet=f,u.dynamicStyles=ve(d)}if(u.dynamicStyles){var p=i.jss.createStyleSheet(u.dynamicStyles,r({link:!0},s));p.update(t),p.attach(),n.dynamicSheet=p,n.classes=we({baseClasses:u.staticSheet.classes,newClasses:p.classes}),c&&c.add(p)}else n.classes=u.staticSheet.classes;u.refs+=1}}function cn(e,t){var n=e.state;n.dynamicSheet&&n.dynamicSheet.update(t)}function fn(e){var t=e.state,n=e.theme,r=e.stylesOptions,o=e.stylesCreator;if(!r.disableGeneration){var i=Se(r.sheetsManager,o,n);i.refs-=1;var a=r.sheetsRegistry;0===i.refs&&(xe(r.sheetsManager,o,n),r.jss.removeStyleSheet(i.staticSheet),a&&a.remove(i.staticSheet)),t.dynamicSheet&&(r.jss.removeStyleSheet(t.dynamicSheet),a&&a.remove(t.dynamicSheet))}}function dn(t,n){var r,o=e.useRef([]),i=e.useMemo((function(){return{}}),n);o.current!==i&&(o.current=i,r=t()),e.useEffect((function(){return function(){r&&r()}}),[i])}function pn(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.name,a=n.classNamePrefix,l=n.Component,u=n.defaultTheme,s=void 0===u?ln:u,c=i(n,["name","classNamePrefix","Component","defaultTheme"]),f=an(t),d=o||a||"makeStyles";f.options={index:tn(),name:o,meta:d,classNamePrefix:d};var p=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Ce()||s,i=r({},e.useContext(Zt),c),a=e.useRef(),u=e.useRef();dn((function(){var e={name:o,state:{},stylesCreator:f,stylesOptions:i,theme:n};return sn(e,t),u.current=!1,a.current=e,function(){fn(e)}}),[n,f]),e.useEffect((function(){u.current&&cn(a.current,t),u.current=!0}));var d=un(a.current,t.classes,l);return d};return p}var hn=["xs","sm","md","lg","xl"];function mn(e){var t=e.values,n=void 0===t?{xs:0,sm:600,md:960,lg:1280,xl:1920}:t,o=e.unit,a=void 0===o?"px":o,l=e.step,u=void 0===l?5:l,s=i(e,["values","unit","step"]);function c(e){var t="number"==typeof n[e]?n[e]:e;return"@media (min-width:".concat(t).concat(a,")")}function f(e,t){var r=hn.indexOf(t);return r===hn.length-1?c(e):"@media (min-width:".concat("number"==typeof n[e]?n[e]:e).concat(a,") and ")+"(max-width:".concat((-1!==r&&"number"==typeof n[hn[r+1]]?n[hn[r+1]]:t)-u/100).concat(a,")")}return r({keys:hn,values:n,up:c,down:function(e){var t=hn.indexOf(e)+1,r=n[hn[t]];return t===hn.length?c("xs"):"@media (max-width:".concat(("number"==typeof r&&t>0?r:e)-u/100).concat(a,")")},between:f,only:function(e){return f(e,e)},width:function(e){return n[e]}},s)}function yn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function vn(e,t,n){var o;return r({gutters:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return r({paddingLeft:t(2),paddingRight:t(2)},n,yn({},e.up("sm"),r({paddingLeft:t(3),paddingRight:t(3)},n[e.up("sm")])))},toolbar:(o={minHeight:56},yn(o,"".concat(e.up("xs")," and (orientation: landscape)"),{minHeight:48}),yn(o,e.up("sm"),{minHeight:64}),o)},n)}function gn(e){for(var t="https://material-ui.com/production-error/?code="+e,n=1;n<arguments.length;n+=1)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified Material-UI error #"+e+"; visit "+t+" for the full message."}var bn={black:"#000",white:"#fff"},wn={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#d5d5d5",A200:"#aaaaaa",A400:"#303030",A700:"#616161"},kn="#7986cb",Sn="#3f51b5",xn="#303f9f",En="#ff4081",Cn="#f50057",_n="#c51162",Pn="#e57373",Nn="#f44336",Rn="#d32f2f",On="#ffb74d",Tn="#ff9800",zn="#f57c00",Mn="#64b5f6",Ln="#2196f3",In="#1976d2",jn="#81c784",An="#4caf50",Fn="#388e3c";function Dn(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Math.min(Math.max(t,e),n)}function Un(e){if(e.type)return e;if("#"===e.charAt(0))return Un(function(e){e=e.substr(1);var t=new RegExp(".{1,".concat(e.length>=6?2:1,"}"),"g"),n=e.match(t);return n&&1===n[0].length&&(n=n.map((function(e){return e+e}))),n?"rgb".concat(4===n.length?"a":"","(").concat(n.map((function(e,t){return t<3?parseInt(e,16):Math.round(parseInt(e,16)/255*1e3)/1e3})).join(", "),")"):""}(e));var t=e.indexOf("("),n=e.substring(0,t);if(-1===["rgb","rgba","hsl","hsla"].indexOf(n))throw new Error(gn(3,e));var r=e.substring(t+1,e.length-1).split(",");return{type:n,values:r=r.map((function(e){return parseFloat(e)}))}}function $n(e){var t=e.type,n=e.values;return-1!==t.indexOf("rgb")?n=n.map((function(e,t){return t<3?parseInt(e,10):e})):-1!==t.indexOf("hsl")&&(n[1]="".concat(n[1],"%"),n[2]="".concat(n[2],"%")),"".concat(t,"(").concat(n.join(", "),")")}function Vn(e){var t="hsl"===(e=Un(e)).type?Un(function(e){var t=(e=Un(e)).values,n=t[0],r=t[1]/100,o=t[2]/100,i=r*Math.min(o,1-o),a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(e+n/30)%12;return o-i*Math.max(Math.min(t-3,9-t,1),-1)},l="rgb",u=[Math.round(255*a(0)),Math.round(255*a(8)),Math.round(255*a(4))];return"hsla"===e.type&&(l+="a",u.push(t[3])),$n({type:l,values:u})}(e)).values:e.values;return t=t.map((function(e){return(e/=255)<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4)})),Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}function Wn(e,t){return e=Un(e),t=Dn(t),"rgb"!==e.type&&"hsl"!==e.type||(e.type+="a"),e.values[3]=t,$n(e)}function Bn(e,t){if(e=Un(e),t=Dn(t),-1!==e.type.indexOf("hsl"))e.values[2]*=1-t;else if(-1!==e.type.indexOf("rgb"))for(var n=0;n<3;n+=1)e.values[n]*=1-t;return $n(e)}function Hn(e,t){if(e=Un(e),t=Dn(t),-1!==e.type.indexOf("hsl"))e.values[2]+=(100-e.values[2])*t;else if(-1!==e.type.indexOf("rgb"))for(var n=0;n<3;n+=1)e.values[n]+=(255-e.values[n])*t;return $n(e)}var Qn={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.54)",disabled:"rgba(0, 0, 0, 0.38)",hint:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:bn.white,default:wn[50]},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},qn={text:{primary:bn.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",hint:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:wn[800],default:"#303030"},action:{active:bn.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function Kn(e,t,n,r){var o=r.light||r,i=r.dark||1.5*r;e[t]||(e.hasOwnProperty(n)?e[t]=e[n]:"light"===t?e.light=Hn(e.main,o):"dark"===t&&(e.dark=Bn(e.main,i)))}function Yn(e){var t=e.primary,n=void 0===t?{light:kn,main:Sn,dark:xn}:t,o=e.secondary,a=void 0===o?{light:En,main:Cn,dark:_n}:o,l=e.error,u=void 0===l?{light:Pn,main:Nn,dark:Rn}:l,s=e.warning,c=void 0===s?{light:On,main:Tn,dark:zn}:s,f=e.info,d=void 0===f?{light:Mn,main:Ln,dark:In}:f,p=e.success,h=void 0===p?{light:jn,main:An,dark:Fn}:p,m=e.type,y=void 0===m?"light":m,v=e.contrastThreshold,g=void 0===v?3:v,b=e.tonalOffset,w=void 0===b?.2:b,k=i(e,["primary","secondary","error","warning","info","success","type","contrastThreshold","tonalOffset"]);function S(e){return function(e,t){var n=Vn(e),r=Vn(t);return(Math.max(n,r)+.05)/(Math.min(n,r)+.05)}(e,qn.text.primary)>=g?qn.text.primary:Qn.text.primary}var x=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:300,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:700;if(!(e=r({},e)).main&&e[t]&&(e.main=e[t]),!e.main)throw new Error(gn(4,t));if("string"!=typeof e.main)throw new Error(gn(5,JSON.stringify(e.main)));return Kn(e,"light",n,w),Kn(e,"dark",o,w),e.contrastText||(e.contrastText=S(e.main)),e},E={dark:qn,light:Qn};return on(r({common:bn,type:y,primary:x(n),secondary:x(a,"A400","A200","A700"),error:x(u),warning:x(c),info:x(d),success:x(h),grey:wn,contrastThreshold:g,getContrastText:S,augmentColor:x,tonalOffset:w},E[y]),k)}function Xn(e){return Math.round(1e5*e)/1e5}var Gn={textTransform:"uppercase"},Jn='"Roboto", "Helvetica", "Arial", sans-serif';function Zn(e,t){var n="function"==typeof t?t(e):t,o=n.fontFamily,a=void 0===o?Jn:o,l=n.fontSize,u=void 0===l?14:l,s=n.fontWeightLight,c=void 0===s?300:s,f=n.fontWeightRegular,d=void 0===f?400:f,p=n.fontWeightMedium,h=void 0===p?500:p,m=n.fontWeightBold,y=void 0===m?700:m,v=n.htmlFontSize,g=void 0===v?16:v,b=n.allVariants,w=n.pxToRem,k=i(n,["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"]),S=u/14,x=w||function(e){return"".concat(e/g*S,"rem")},E=function(e,t,n,o,i){return r({fontFamily:a,fontWeight:e,fontSize:x(t),lineHeight:n},a===Jn?{letterSpacing:"".concat(Xn(o/t),"em")}:{},i,b)},C={h1:E(c,96,1.167,-1.5),h2:E(c,60,1.2,-.5),h3:E(d,48,1.167,0),h4:E(d,34,1.235,.25),h5:E(d,24,1.334,0),h6:E(h,20,1.6,.15),subtitle1:E(d,16,1.75,.15),subtitle2:E(h,14,1.57,.1),body1:E(d,16,1.5,.15),body2:E(d,14,1.43,.15),button:E(h,14,1.75,.4,Gn),caption:E(d,12,1.66,.4),overline:E(d,12,2.66,1,Gn)};return on(r({htmlFontSize:g,pxToRem:x,round:Xn,fontFamily:a,fontSize:u,fontWeightLight:c,fontWeightRegular:d,fontWeightMedium:h,fontWeightBold:y},C),k,{clone:!1})}function er(){return["".concat(arguments.length<=0?void 0:arguments[0],"px ").concat(arguments.length<=1?void 0:arguments[1],"px ").concat(arguments.length<=2?void 0:arguments[2],"px ").concat(arguments.length<=3?void 0:arguments[3],"px rgba(0,0,0,").concat(.2,")"),"".concat(arguments.length<=4?void 0:arguments[4],"px ").concat(arguments.length<=5?void 0:arguments[5],"px ").concat(arguments.length<=6?void 0:arguments[6],"px ").concat(arguments.length<=7?void 0:arguments[7],"px rgba(0,0,0,").concat(.14,")"),"".concat(arguments.length<=8?void 0:arguments[8],"px ").concat(arguments.length<=9?void 0:arguments[9],"px ").concat(arguments.length<=10?void 0:arguments[10],"px ").concat(arguments.length<=11?void 0:arguments[11],"px rgba(0,0,0,").concat(.12,")")].join(",")}var tr=["none",er(0,2,1,-1,0,1,1,0,0,1,3,0),er(0,3,1,-2,0,2,2,0,0,1,5,0),er(0,3,3,-2,0,3,4,0,0,1,8,0),er(0,2,4,-1,0,4,5,0,0,1,10,0),er(0,3,5,-1,0,5,8,0,0,1,14,0),er(0,3,5,-1,0,6,10,0,0,1,18,0),er(0,4,5,-2,0,7,10,1,0,2,16,1),er(0,5,5,-3,0,8,10,1,0,3,14,2),er(0,5,6,-3,0,9,12,1,0,3,16,2),er(0,6,6,-3,0,10,14,1,0,4,18,3),er(0,6,7,-4,0,11,15,1,0,4,20,3),er(0,7,8,-4,0,12,17,2,0,5,22,4),er(0,7,8,-4,0,13,19,2,0,5,24,4),er(0,7,9,-4,0,14,21,2,0,5,26,4),er(0,8,9,-5,0,15,22,2,0,6,28,5),er(0,8,10,-5,0,16,24,2,0,6,30,5),er(0,8,11,-5,0,17,26,2,0,6,32,5),er(0,9,11,-5,0,18,28,2,0,7,34,6),er(0,9,12,-6,0,19,29,2,0,7,36,6),er(0,10,13,-6,0,20,31,3,0,8,38,7),er(0,10,13,-6,0,21,33,3,0,8,40,7),er(0,10,14,-6,0,22,35,3,0,8,42,7),er(0,11,14,-7,0,23,36,3,0,9,44,8),er(0,11,15,-7,0,24,38,3,0,9,46,8)],nr={borderRadius:4};var rr={xs:0,sm:600,md:960,lg:1280,xl:1920},or={keys:["xs","sm","md","lg","xl"],up:function(e){return"@media (min-width:".concat(rr[e],"px)")}},ir=function(e,t){return t?on(e,t,{clone:!1}):e},ar={m:"margin",p:"padding"},lr={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},ur={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},sr=function(e){var t={};return function(e){return void 0===t[e]&&(t[e]=function(e){if(e.length>2){if(!ur[e])return[e];e=ur[e]}var t=(a=e.split(""),l=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}}(a,l)||Ze(a,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),n=t[0],r=t[1],o=ar[n],i=lr[r]||"";var a,l;return Array.isArray(i)?i.map((function(e){return o+e})):[o+i]}(e)),t[e]}}(),cr=["m","mt","mr","mb","ml","mx","my","p","pt","pr","pb","pl","px","py","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY"];function fr(e){var t=e.spacing||8;return"number"==typeof t?function(e){return t*e}:Array.isArray(t)?function(e){return t[e]}:"function"==typeof t?t:function(){}}function dr(e){var t=fr(e.theme);return Object.keys(e).map((function(n){if(-1===cr.indexOf(n))return null;var r=function(e,t){return function(n){return e.reduce((function(e,r){return e[r]=function(e,t){if("string"==typeof t||null==t)return t;var n=e(Math.abs(t));return t>=0?n:"number"==typeof n?-n:"-".concat(n)}(t,n),e}),{})}}(sr(n),t),o=e[n];return function(e,t,n){if(Array.isArray(t)){var r=e.theme.breakpoints||or;return t.reduce((function(e,o,i){return e[r.up(r.keys[i])]=n(t[i]),e}),{})}if("object"===nn(t)){var o=e.theme.breakpoints||or;return Object.keys(t).reduce((function(e,r){return e[o.up(r)]=n(t[r]),e}),{})}return n(t)}(e,o,r)})).reduce(ir,{})}function pr(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;if(e.mui)return e;var t=fr({spacing:e}),n=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return 0===n.length?t(1):1===n.length?t(n[0]):n.map((function(e){if("string"==typeof e)return e;var n=t(e);return"number"==typeof n?"".concat(n,"px"):n})).join(" ")};return Object.defineProperty(n,"unit",{get:function(){return e}}),n.mui=!0,n}dr.propTypes={},dr.filterProps=cr;var hr={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},mr={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function yr(e){return"".concat(Math.round(e),"ms")}var vr={easing:hr,duration:mr,create:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["all"],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.duration,r=void 0===n?mr.standard:n,o=t.easing,a=void 0===o?hr.easeInOut:o,l=t.delay,u=void 0===l?0:l;return i(t,["duration","easing","delay"]),(Array.isArray(e)?e:[e]).map((function(e){return"".concat(e," ").concat("string"==typeof r?r:yr(r)," ").concat(a," ").concat("string"==typeof u?u:yr(u))})).join(",")},getAutoHeightDuration:function(e){if(!e)return 0;var t=e/36;return Math.round(10*(4+15*Math.pow(t,.25)+t/5))}},gr={mobileStepper:1e3,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500},br=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.breakpoints,n=void 0===t?{}:t,r=e.mixins,o=void 0===r?{}:r,a=e.palette,l=void 0===a?{}:a,u=e.spacing,s=e.typography,c=void 0===s?{}:s,f=i(e,["breakpoints","mixins","palette","spacing","typography"]),d=Yn(l),p=mn(n),h=pr(u),m=on({breakpoints:p,direction:"ltr",mixins:vn(p,h,o),overrides:{},palette:d,props:{},shadows:tr,typography:Zn(d,c),spacing:h,shape:nr,transitions:vr,zIndex:gr},f),y=arguments.length,v=new Array(y>1?y-1:0),g=1;g<y;g++)v[g-1]=arguments[g];return v.reduce((function(e,t){return on(e,t)}),m)}();function wr(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=wr(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function kr(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=wr(e))&&(r&&(r+=" "),r+=t);return r}var Sr=n(679),xr=n.n(Sr);function Er(e){var t=e.theme,n=e.name,r=e.props;if(!t||!t.props||!t.props[n])return r;var o,i=t.props[n];for(o in i)void 0===r[o]&&(r[o]=i[o]);return r}var Cr=function(t,n){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(o){var a=n.defaultTheme,l=n.withTheme,u=void 0!==l&&l,s=n.name,c=i(n,["defaultTheme","withTheme","name"]),f=s,d=pn(t,r({defaultTheme:a,Component:o,name:s||o.displayName,classNamePrefix:f},c)),p=e.forwardRef((function(t,n){t.classes;var l,c=t.innerRef,f=i(t,["classes","innerRef"]),p=d(r({},o.defaultProps,t)),h=f;return("string"==typeof s||u)&&(l=Ce()||a,s&&(h=Er({theme:l,name:s,props:f})),u&&!h.theme&&(h.theme=l)),e.createElement(o,r({ref:c||n,classes:p},h))}));return xr()(p,o),p}}(t,r({defaultTheme:br},n))},_r=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?"div":l,s=i(t,["classes","className","component"]);return e.createElement(u,r({ref:n,className:kr(o.root,a)},s))})),Pr=Cr({root:{width:"100%",overflowX:"auto"}},{name:"MuiTableContainer"})(_r),Nr=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?"div":l,s=t.square,c=void 0!==s&&s,f=t.elevation,d=void 0===f?1:f,p=t.variant,h=void 0===p?"elevation":p,m=i(t,["classes","className","component","square","elevation","variant"]);return e.createElement(u,r({className:kr(o.root,a,"outlined"===h?o.outlined:o["elevation".concat(d)],!c&&o.rounded),ref:n},m))})),Rr=Cr((function(e){var t={};return e.shadows.forEach((function(e,n){t["elevation".concat(n)]={boxShadow:e}})),r({root:{backgroundColor:e.palette.background.paper,color:e.palette.text.primary,transition:e.transitions.create("box-shadow")},rounded:{borderRadius:e.shape.borderRadius},outlined:{border:"1px solid ".concat(e.palette.divider)}},t)}),{name:"MuiPaper"})(Nr),Or=e.createContext(),Tr="table",zr=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?Tr:l,s=t.padding,c=void 0===s?"default":s,f=t.size,d=void 0===f?"medium":f,p=t.stickyHeader,h=void 0!==p&&p,m=i(t,["classes","className","component","padding","size","stickyHeader"]),y=e.useMemo((function(){return{padding:c,size:d,stickyHeader:h}}),[c,d,h]);return e.createElement(Or.Provider,{value:y},e.createElement(u,r({role:u===Tr?null:"table",ref:n,className:kr(o.root,a,h&&o.stickyHeader)},m)))})),Mr=Cr((function(e){return{root:{display:"table",width:"100%",borderCollapse:"collapse",borderSpacing:0,"& caption":r({},e.typography.body2,{padding:e.spacing(2),color:e.palette.text.secondary,textAlign:"left",captionSide:"bottom"})},stickyHeader:{borderCollapse:"separate"}}}),{name:"MuiTable"})(zr),Lr=e.createContext(),Ir={variant:"head"},jr="thead",Ar=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?jr:l,s=i(t,["classes","className","component"]);return e.createElement(Lr.Provider,{value:Ir},e.createElement(u,r({className:kr(o.root,a),ref:n,role:u===jr?null:"rowgroup"},s)))})),Fr=Cr({root:{display:"table-header-group"}},{name:"MuiTableHead"})(Ar),Dr=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?"tr":l,s=t.hover,c=void 0!==s&&s,f=t.selected,d=void 0!==f&&f,p=i(t,["classes","className","component","hover","selected"]),h=e.useContext(Lr);return e.createElement(u,r({ref:n,className:kr(o.root,a,h&&{head:o.head,footer:o.footer}[h.variant],c&&o.hover,d&&o.selected),role:"tr"===u?null:"row"},p))})),Ur=Cr((function(e){return{root:{color:"inherit",display:"table-row",verticalAlign:"middle",outline:0,"&$hover:hover":{backgroundColor:e.palette.action.hover},"&$selected, &$selected:hover":{backgroundColor:Wn(e.palette.secondary.main,e.palette.action.selectedOpacity)}},selected:{},hover:{},head:{},footer:{}}}),{name:"MuiTableRow"})(Dr);function $r(e){if("string"!=typeof e)throw new Error(gn(7));return e.charAt(0).toUpperCase()+e.slice(1)}var Vr=e.forwardRef((function(t,n){var o,a,l=t.align,u=void 0===l?"inherit":l,s=t.classes,c=t.className,f=t.component,d=t.padding,p=t.scope,h=t.size,m=t.sortDirection,y=t.variant,v=i(t,["align","classes","className","component","padding","scope","size","sortDirection","variant"]),g=e.useContext(Or),b=e.useContext(Lr),w=b&&"head"===b.variant;f?(a=f,o=w?"columnheader":"cell"):a=w?"th":"td";var k=p;!k&&w&&(k="col");var S=d||(g&&g.padding?g.padding:"default"),x=h||(g&&g.size?g.size:"medium"),E=y||b&&b.variant,C=null;return m&&(C="asc"===m?"ascending":"descending"),e.createElement(a,r({ref:n,className:kr(s.root,s[E],c,"inherit"!==u&&s["align".concat($r(u))],"default"!==S&&s["padding".concat($r(S))],"medium"!==x&&s["size".concat($r(x))],"head"===E&&g&&g.stickyHeader&&s.stickyHeader),"aria-sort":C,role:o,scope:k},v))})),Wr=Cr((function(e){return{root:r({},e.typography.body2,{display:"table-cell",verticalAlign:"inherit",borderBottom:"1px solid\n    ".concat("light"===e.palette.type?Hn(Wn(e.palette.divider,1),.88):Bn(Wn(e.palette.divider,1),.68)),textAlign:"left",padding:16}),head:{color:e.palette.text.primary,lineHeight:e.typography.pxToRem(24),fontWeight:e.typography.fontWeightMedium},body:{color:e.palette.text.primary},footer:{color:e.palette.text.secondary,lineHeight:e.typography.pxToRem(21),fontSize:e.typography.pxToRem(12)},sizeSmall:{padding:"6px 24px 6px 16px","&:last-child":{paddingRight:16},"&$paddingCheckbox":{width:24,padding:"0 12px 0 16px","&:last-child":{paddingLeft:12,paddingRight:16},"& > *":{padding:0}}},paddingCheckbox:{width:48,padding:"0 0 0 4px","&:last-child":{paddingLeft:0,paddingRight:4}},paddingNone:{padding:0,"&:last-child":{padding:0}},alignLeft:{textAlign:"left"},alignCenter:{textAlign:"center"},alignRight:{textAlign:"right",flexDirection:"row-reverse"},alignJustify:{textAlign:"justify"},stickyHeader:{position:"sticky",top:0,left:0,zIndex:2,backgroundColor:e.palette.background.default}}}),{name:"MuiTableCell"})(Vr),Br={variant:"body"},Hr="tbody",Qr=e.forwardRef((function(t,n){var o=t.classes,a=t.className,l=t.component,u=void 0===l?Hr:l,s=i(t,["classes","className","component"]);return e.createElement(Lr.Provider,{value:Br},e.createElement(u,r({className:kr(o.root,a),ref:n,role:u===Hr?null:"rowgroup"},s)))})),qr=Cr({root:{display:"table-row-group"}},{name:"MuiTableBody"})(Qr),Kr="/Users/thoyang/codespace/foodie-yoyo-bakery/src/component/PriceTable.js",Yr=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pn(e,r({defaultTheme:br},t))}({table:{overflowX:"auto",minWidth:"480px"},tableHeader:{fontSize:"22px",textAlign:"center"},tableHeaderNote:{fontSize:"12px",textAlign:"right",color:"#000"},tableHeaderColumn:{fontSize:"16px"},tableColumn:{fontSize:"18px"},tableFooter:{textAlign:"right",padding:"0",height:"inherit"},note:{fontSize:"14px"}}),Xr=[{name:"原味饅頭",singlePrice:"12 元/個",price:"72 元/包"},{name:"南瓜饅頭",singlePrice:"15 元/個",price:"90 元/包"},{name:"黑芝麻卷饅頭",singlePrice:"15 元/個",price:"90 元/包"},{name:"蔥花卷饅頭",singlePrice:"15 元/個",price:"90 元/包"},{name:"全麥饅頭",singlePrice:"15 元/個",price:"90 元/包"},{name:"黑糖饅頭",singlePrice:"12 元/個",price:"72 元/包"},{name:"堅果全麥饅頭",singlePrice:"20 元/個",price:"120 元/包"}];function Gr(){var t=this,n=Yr();return e.createElement(Pr,{component:Rr,__self:this,__source:{fileName:Kr,lineNumber:97,columnNumber:5}},e.createElement(Mr,{className:n.table,"aria-label":"price table",__self:this,__source:{fileName:Kr,lineNumber:98,columnNumber:7}},e.createElement(Fr,{__self:this,__source:{fileName:Kr,lineNumber:99,columnNumber:9}},e.createElement(Ur,{__self:this,__source:{fileName:Kr,lineNumber:100,columnNumber:11}},e.createElement(Wr,{className:n.tableHeaderColumn,__self:this,__source:{fileName:Kr,lineNumber:101,columnNumber:13}},"口味"),e.createElement(Wr,{className:n.tableHeaderColumn,align:"right",__self:this,__source:{fileName:Kr,lineNumber:102,columnNumber:13}},"售價"))),e.createElement(qr,{__self:this,__source:{fileName:Kr,lineNumber:105,columnNumber:9}},Xr.map((function(r){return e.createElement(Ur,{key:r.name,__self:t,__source:{fileName:Kr,lineNumber:107,columnNumber:13}},e.createElement(Wr,{component:"th",scope:"row",className:n.tableColumn,__self:t,__source:{fileName:Kr,lineNumber:108,columnNumber:15}},r.name,e.createElement("span",{className:n.note,__self:t,__source:{fileName:Kr,lineNumber:108,columnNumber:95}},e.createElement("br",{__self:t,__source:{fileName:Kr,lineNumber:108,columnNumber:126}}),r.singlePrice)),e.createElement(Wr,{className:n.tableColumn,__self:t,__source:{fileName:Kr,lineNumber:109,columnNumber:15}},r.price))})))))}function Jr(e){return(Jr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Zr="/Users/thoyang/codespace/foodie-yoyo-bakery/src/app.js";function eo(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function to(e,t){return(to=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function no(e,t){return!t||"object"!==Jr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ro(e){return(ro=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var oo=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&to(e,t)}(l,t);var n,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ro(o);if(i){var n=ro(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return no(this,e)});function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),a.call(this,e)}return n=l,(r=[{key:"render",value:function(){return e.createElement("div",{__self:this,__source:{fileName:Zr,lineNumber:12,columnNumber:7}},e.createElement(Gr,{__self:this,__source:{fileName:Zr,lineNumber:13,columnNumber:9}}))}}])&&eo(n.prototype,r),l}(e.Component);t.render(e.createElement(oo,{__self:void 0,__source:{fileName:Zr,lineNumber:19,columnNumber:17}}),document.querySelector(".wrapper"))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL2lzLWluLWJyb3dzZXIvZGlzdC9tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9qc3MvZGlzdC9qc3MuZXNtLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9tZXJnZUNsYXNzZXMvbWVyZ2VDbGFzc2VzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9tYWtlU3R5bGVzL211bHRpS2V5U3RvcmUuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9zdHlsZXMvZXNtL3VzZVRoZW1lL1RoZW1lQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL3N0eWxlcy9lc20vdXNlVGhlbWUvdXNlVGhlbWUuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9zdHlsZXMvZXNtL1RoZW1lUHJvdmlkZXIvbmVzdGVkLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9jcmVhdGVHZW5lcmF0ZUNsYXNzTmFtZS9jcmVhdGVHZW5lcmF0ZUNsYXNzTmFtZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvanNzLXBsdWdpbi1ydWxlLXZhbHVlLWZ1bmN0aW9uL2Rpc3QvanNzLXBsdWdpbi1ydWxlLXZhbHVlLWZ1bmN0aW9uLmVzbS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvanNzLXBsdWdpbi1nbG9iYWwvZGlzdC9qc3MtcGx1Z2luLWdsb2JhbC5lc20uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL2pzcy1wbHVnaW4tbmVzdGVkL2Rpc3QvanNzLXBsdWdpbi1uZXN0ZWQuZXNtLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9oeXBoZW5hdGUtc3R5bGUtbmFtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvanNzLXBsdWdpbi1jYW1lbC1jYXNlL2Rpc3QvanNzLXBsdWdpbi1jYW1lbC1jYXNlLmVzbS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvanNzLXBsdWdpbi1kZWZhdWx0LXVuaXQvZGlzdC9qc3MtcGx1Z2luLWRlZmF1bHQtdW5pdC5lc20uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9jc3MtdmVuZG9yL2Rpc3QvY3NzLXZlbmRvci5lc20uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aG91dEhvbGVzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvanNzLXBsdWdpbi12ZW5kb3ItcHJlZml4ZXIvZGlzdC9qc3MtcGx1Z2luLXZlbmRvci1wcmVmaXhlci5lc20uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL2pzcy1wbHVnaW4tcHJvcHMtc29ydC9kaXN0L2pzcy1wbHVnaW4tcHJvcHMtc29ydC5lc20uanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9zdHlsZXMvZXNtL1N0eWxlc1Byb3ZpZGVyL1N0eWxlc1Byb3ZpZGVyLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9qc3NQcmVzZXQvanNzUHJlc2V0LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9tYWtlU3R5bGVzL2luZGV4Q291bnRlci5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvdXRpbHMvZXNtL2RlZXBtZXJnZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL3N0eWxlcy9lc20vZ2V0U3R5bGVzQ3JlYXRvci9nZXRTdHlsZXNDcmVhdG9yLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS9nZXRTdHlsZXNDcmVhdG9yL25vb3BUaGVtZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL3N0eWxlcy9lc20vbWFrZVN0eWxlcy9tYWtlU3R5bGVzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL2NyZWF0ZUJyZWFrcG9pbnRzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL3N0eWxlcy9jcmVhdGVNaXhpbnMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS91dGlscy9lc20vZm9ybWF0TXVpRXJyb3JNZXNzYWdlLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vY29sb3JzL2NvbW1vbi5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2NvbG9ycy9ncmV5LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vY29sb3JzL2luZGlnby5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2NvbG9ycy9waW5rLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vY29sb3JzL3JlZC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2NvbG9ycy9vcmFuZ2UuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9jb2xvcnMvYmx1ZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2NvbG9ycy9ncmVlbi5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL3N0eWxlcy9jb2xvck1hbmlwdWxhdG9yLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL2NyZWF0ZVBhbGV0dGUuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9zdHlsZXMvY3JlYXRlVHlwb2dyYXBoeS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL3N0eWxlcy9zaGFkb3dzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL3NoYXBlLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3lzdGVtL2VzbS9icmVha3BvaW50cy5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL3N5c3RlbS9lc20vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9zeXN0ZW0vZXNtL3NwYWNpbmcuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9zeXN0ZW0vZXNtL21lbW9pemUuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL2NyZWF0ZVNwYWNpbmcuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9zdHlsZXMvdHJhbnNpdGlvbnMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9zdHlsZXMvekluZGV4LmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL2RlZmF1bHRUaGVtZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL3N0eWxlcy9jcmVhdGVNdWlUaGVtZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvY2xzeC9kaXN0L2Nsc3gubS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL3N0eWxlcy9lc20vZ2V0VGhlbWVQcm9wcy9nZXRUaGVtZVByb3BzLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvc3R5bGVzL2VzbS93aXRoU3R5bGVzL3dpdGhTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9zdHlsZXMvd2l0aFN0eWxlcy5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL1RhYmxlQ29udGFpbmVyL1RhYmxlQ29udGFpbmVyLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vUGFwZXIvUGFwZXIuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9UYWJsZS9UYWJsZUNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9UYWJsZS9UYWJsZS5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL1RhYmxlL1RhYmxlbHZsMkNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS9UYWJsZUhlYWQvVGFibGVIZWFkLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vVGFibGVSb3cvVGFibGVSb3cuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC11aS9jb3JlL2VzbS91dGlscy9jYXBpdGFsaXplLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vVGFibGVDZWxsL1RhYmxlQ2VsbC5qcyIsIndlYnBhY2s6Ly9mb29kaWUteW95by1iYWtlcnkvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL1RhYmxlQm9keS9UYWJsZUJvZHkuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vc3JjL2NvbXBvbmVudC9QcmljZVRhYmxlLmpzIiwid2VicGFjazovL2Zvb2RpZS15b3lvLWJha2VyeS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vc3R5bGVzL21ha2VTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vZm9vZGllLXlveW8tYmFrZXJ5Ly4vc3JjL2FwcC5qcyJdLCJuYW1lcyI6WyJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwibmFtZSIsImxlbmd0aCIsInByb3RvdHlwZSIsImNhbGxlciIsImNhbGxlZSIsImFyZ3VtZW50cyIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiaSIsImtleSIsImRlc2NyaXB0b3IiLCJlIiwiYiIsIlN5bWJvbCIsImZvciIsImMiLCJkIiwiZiIsImciLCJoIiwiayIsImwiLCJtIiwibiIsInAiLCJxIiwiciIsInQiLCJ2IiwidyIsIngiLCJ5IiwieiIsImEiLCJ1IiwiJCR0eXBlb2YiLCJBIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJzIiwiY2FsbCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiRXJyb3IiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsImVuY29kZVVSSUNvbXBvbmVudCIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJrYSIsIkIiLCJ0aGlzIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwidG9Mb3dlckNhc2UiLCJvYSIsInBhIiwidG9VcHBlckNhc2UiLCJxYSIsInNsaWNlIiwibWEiLCJpc05hTiIsIm5hIiwidGVzdCIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ1YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJFIiwiTWEiLCJLYSIsIml0ZXJhdG9yIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiT2EiLCJQYSIsInByZXBhcmVTdGFja1RyYWNlIiwic2V0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsIlFhIiwidGFnIiwiX3JlbmRlciIsIlJhIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uc3RydWN0b3IiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwidmFsdWUiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsImNiIiwib3duZXJEb2N1bWVudCIsImViIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsIkFycmF5IiwiaXNBcnJheSIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwidG9TdHJpbmciLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInN0eWxlIiwiaW5kZXhPZiIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsInB1c2giLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImFwcGx5Iiwib25FcnJvciIsIlNiIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlpiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiZmxhZ3MiLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJpZCIsImJpbmQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJKZCIsImNsaXBib2FyZERhdGEiLCJMZCIsImRhdGEiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsInJhbmRvbSIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJKIiwiSyIsIlEiLCJMIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwic2V0VGltZW91dCIsInBmIiwiY2xlYXJUaW1lb3V0IiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiTyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsIl9jdXJyZW50VmFsdWUiLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJuZXh0IiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsIkFnIiwiQmciLCJDZyIsIkMiLCJEZyIsIkVnIiwiRmciLCJDb21wb25lbnQiLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiaW5kZXgiLCJUZyIsIlVnIiwibW9kZSIsIlZnIiwiaW1wbGVtZW50YXRpb24iLCJXZyIsIlhnIiwiZG9uZSIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZWgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiZmgiLCJnaCIsImhoIiwiUCIsImloIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGVuZGluZ1Byb3BzIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJ2aCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJ3aCIsInhoIiwiUiIsIlMiLCJUIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJVIiwidXNlU3RhdGUiLCJnZXRTbmFwc2hvdCIsInN1YnNjcmliZSIsInVzZUVmZmVjdCIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlT3BhcXVlSWRlbnRpZmllciIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsInVmIiwiZWkiLCJSZWFjdEN1cnJlbnRPd25lciIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJWIiwiSGkiLCJJaSIsIlciLCJKaSIsIktpIiwiTGkiLCJNaSIsIm1lc3NhZ2UiLCJOaSIsImNvbnNvbGUiLCJlcnJvciIsIk9pIiwiV2Vha01hcCIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJmb2N1cyIsImFqIiwiZGlzcGxheSIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsInRoZW4iLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJYIiwiWSIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIkluZmluaXR5Iiwid2oiLCJjayIsIloiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlNjIiwiS2oiLCJMaiIsIk1qIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiY2FsbGJhY2tQcmlvcml0eSIsIlRjIiwiTmoiLCJPaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiVWoiLCJ0aW1lb3V0SGFuZGxlIiwiV2oiLCJYaiIsInBpbmdDYWNoZSIsIllqIiwiWmoiLCJ2YSIsImFrIiwiYmsiLCJkayIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZWsiLCJtaW4iLCJleHRlbmQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJ1ayIsImhrIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJKU09OIiwic3RyaW5naWZ5IiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJwb3AiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJvIiwib2JqIiwicHJvcCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwic291cmNlU3ltYm9sS2V5cyIsIl90eXBlb2YiLCJfZGVmaW5lUHJvcGVydGllcyIsIndyaXRhYmxlIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfc2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsInBsYWluT2JqZWN0Q29uc3RydXJjdG9yIiwiY2xvbmVTdHlsZSIsIm5ld1N0eWxlIiwiY3JlYXRlUnVsZSIsImRlY2wiLCJqc3MiLCJkZWNsQ29weSIsInBsdWdpbnMiLCJvbkNyZWF0ZVJ1bGUiLCJieSIsInJlc3VsdCIsInRvQ3NzVmFsdWUiLCJpZ25vcmVJbXBvcnRhbnQiLCJjc3NWYWx1ZSIsImluZGVudFN0ciIsInN0ciIsImluZGVudCIsInRvQ3NzIiwic2VsZWN0b3IiLCJfb3B0aW9ucyRpbmRlbnQiLCJmYWxsYmFja3MiLCJfcHJvcCIsIl92YWx1ZSIsIl9wcm9wMiIsIl92YWx1ZTIiLCJhbGxvd0VtcHR5IiwiZXNjYXBlUmVnZXgiLCJuYXRpdmVFc2NhcGUiLCJDU1MiLCJCYXNlU3R5bGVSdWxlIiwiaXNQcm9jZXNzZWQiLCJyZW5kZXJlciIsInJlbmRlcmFibGUiLCJzaGVldCIsIlJlbmRlcmVyIiwidW5kZWZpbmVkIiwiZm9yY2UiLCJuZXdWYWx1ZSIsInByb2Nlc3MiLCJvbkNoYW5nZVZhbHVlIiwiaXNFbXB0eSIsImlzRGVmaW5lZCIsInJlbW92ZSIsInJlbW92ZVByb3BlcnR5IiwiYXR0YWNoZWQiLCJTdHlsZVJ1bGUiLCJfQmFzZVN0eWxlUnVsZSIsIl90aGlzIiwic2VsZWN0b3JUZXh0Iiwic2NvcGVkIiwiZ2VuZXJhdGVJZCIsIl9wcm90bzIiLCJhcHBseVRvIiwianNvbiIsInRvSlNPTiIsIm9wdHMiLCJzZXRTZWxlY3RvciIsInJlcGxhY2VSdWxlIiwicGx1Z2luU3R5bGVSdWxlIiwicGFyZW50IiwiZGVmYXVsdFRvU3RyaW5nT3B0aW9ucyIsImF0UmVnRXhwIiwiQ29uZGl0aW9uYWxSdWxlIiwic3R5bGVzIiwiYXQiLCJxdWVyeSIsInJ1bGVzIiwiYXRNYXRjaCIsIlJ1bGVMaXN0IiwiX3Byb3RvIiwiZ2V0UnVsZSIsInJ1bGUiLCJhZGRSdWxlIiwib25Qcm9jZXNzUnVsZSIsImtleVJlZ0V4cCIsInBsdWdpbkNvbmRpdGlvbmFsUnVsZSIsImRlZmF1bHRUb1N0cmluZ09wdGlvbnMkMSIsIm5hbWVSZWdFeHAiLCJLZXlmcmFtZXNSdWxlIiwiZnJhbWVzIiwibmFtZU1hdGNoIiwia2V5UmVnRXhwJDEiLCJyZWZSZWdFeHAiLCJmaW5kUmVmZXJlbmNlZEtleWZyYW1lIiwia2V5ZnJhbWVzIiwicmVwbGFjZVJlZiIsInJlZktleWZyYW1lIiwib25Qcm9jZXNzU3R5bGUiLCJLZXlmcmFtZVJ1bGUiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJwbHVnaW5LZXlmcmFtZVJ1bGUiLCJGb250RmFjZVJ1bGUiLCJrZXlSZWdFeHAkMiIsInBsdWdpbkZvbnRGYWNlUnVsZSIsIlZpZXdwb3J0UnVsZSIsInBsdWdpblZpZXdwb3J0UnVsZSIsIlNpbXBsZVJ1bGUiLCJrZXlzTWFwIiwiZGVmYXVsdFVwZGF0ZU9wdGlvbnMiLCJmb3JjZVVwZGF0ZU9wdGlvbnMiLCJyYXciLCJjb3VudGVyIiwiY2xhc3NlcyIsInJ1bGVPcHRpb25zIiwiX3RoaXMkb3B0aW9ucyIsInJlZ2lzdGVyIiwic3BsaWNlIiwidW5yZWdpc3RlciIsInVwZGF0ZSIsInVwZGF0ZU9uZSIsIl90aGlzJG9wdGlvbnMyIiwic3R5bGVSdWxlIiwib25VcGRhdGUiLCJuZXh0VmFsdWUiLCJfbmV4dFZhbHVlIiwiX3ByZXZWYWx1ZSIsImNzcyIsIlN0eWxlU2hlZXQiLCJkZXBsb3llZCIsImF0dGFjaCIsImRlcGxveSIsImRldGFjaCIsImluc2VydFJ1bGUiLCJhZGRSdWxlcyIsImFkZGVkIiwiZGVsZXRlUnVsZSIsIl90aGlzJHJ1bGVzIiwiUGx1Z2luc1JlZ2lzdHJ5IiwiaW50ZXJuYWwiLCJleHRlcm5hbCIsInJlZ2lzdHJ5Iiwib25Qcm9jZXNzU2hlZXQiLCJwcm9jZXNzZWRWYWx1ZSIsInVzZSIsIm5ld1BsdWdpbiIsInJlZHVjZSIsInBsdWdpbiIsIlNoZWV0c1JlZ2lzdHJ5IiwicmVzZXQiLCJfdGVtcCIsIl9yZWYiLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJucyIsImNyZWF0ZUdlbmVyYXRlSWQiLCJydWxlQ291bnRlciIsImpzc0lkIiwicHJlZml4IiwiY2xhc3NOYW1lUHJlZml4IiwibWluaWZ5IiwibWVtb2l6ZSIsImZuIiwiZ2V0UHJvcGVydHlWYWx1ZSIsImNzc1J1bGUiLCJhdHRyaWJ1dGVTdHlsZU1hcCIsImdldEhlYWQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0Tm9uY2UiLCJnZXRBdHRyaWJ1dGUiLCJfaW5zZXJ0UnVsZSIsImNvbnRhaW5lciIsImFwcGVuZFJ1bGUiLCJjc3NSdWxlcyIsImdldFZhbGlkUnVsZUluc2VydGlvbkluZGV4IiwibWF4SW5kZXgiLCJEb21SZW5kZXJlciIsImhhc0luc2VydGVkUnVsZXMiLCJtZWRpYSIsImVsIiwiY3JlYXRlU3R5bGUiLCJub25jZSIsImluc2VydGlvblBvaW50IiwibmV4dE5vZGUiLCJyZWdpc3RyeSQxIiwiZmluZEhpZ2hlclNoZWV0IiwiZmluZEhpZ2hlc3RTaGVldCIsImNvbW1lbnQiLCJoZWFkIiwiY2hpbGROb2RlcyIsImZpbmRDb21tZW50Tm9kZSIsImZpbmRQcmV2Tm9kZSIsImluc2VydGlvblBvaW50RWxlbWVudCIsImluc2VydFN0eWxlIiwiQm9vbGVhbiIsImluc2VydFJ1bGVzIiwibmF0aXZlUGFyZW50IiwibGF0ZXN0TmF0aXZlUGFyZW50IiwiX2luc2VydGlvbkluZGV4IiwicmVmQ3NzUnVsZSIsInJ1bGVTdHIiLCJpbnNlcnRpb25JbmRleCIsIm5hdGl2ZVJ1bGUiLCJnZXRSdWxlcyIsImluc3RhbmNlQ291bnRlciIsIkpzcyIsInNldHVwIiwiY3JlYXRlU3R5bGVTaGVldCIsInJlbW92ZVN0eWxlU2hlZXQiLCJnZXREeW5hbWljU3R5bGVzIiwiZXh0cmFjdGVkIiwiaGFzQ1NTVE9NU3VwcG9ydCIsIm1lcmdlQ2xhc3NlcyIsImJhc2VDbGFzc2VzIiwibmV3Q2xhc3NlcyIsIm5leHRDbGFzc2VzIiwiY2FjaGUiLCJrZXkxIiwia2V5MiIsInN1YkNhY2hlIiwidXNlVGhlbWUiLCJwc2V1ZG9DbGFzc2VzIiwiZm5WYWx1ZXNOcyIsImZuUnVsZU5zIiwiYXRQcmVmaXgiLCJHbG9iYWxDb250YWluZXJSdWxlIiwiR2xvYmFsUHJlZml4ZWRSdWxlIiwic3Vic3RyIiwic2VwYXJhdG9yUmVnRXhwIiwiYWRkU2NvcGUiLCJzY29wZSIsInBhcnRzIiwicGFyZW50UmVnRXhwIiwidXBwZXJjYXNlUGF0dGVybiIsIm1zUGF0dGVybiIsInRvSHlwaGVuTG93ZXIiLCJoTmFtZSIsImNvbnZlcnRDYXNlIiwiY29udmVydGVkIiwicHgiLCJtcyIsInBlcmNlbnQiLCJhZGRDYW1lbENhc2VkVmVyc2lvbiIsInJlZ0V4cCIsIm5ld09iaiIsInVuaXRzIiwiYm9yZGVyIiwibWFyZ2luIiwicGFkZGluZyIsImJvdHRvbSIsInJpZ2h0IiwiaW5zZXQiLCJtb3Rpb24iLCJvdXRsaW5lIiwicGVyc3BlY3RpdmUiLCJnYXAiLCJncmlkIiwiaXRlcmF0ZSIsImlubmVyUHJvcCIsIl9pbm5lclByb3AiLCJOdW1iZXIiLCJ1bml0IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibWluTGVuIiwianMiLCJ2ZW5kb3IiLCJicm93c2VyIiwiaXNUb3VjaCIsImpzQ3NzTWFwIiwiTW96IiwiV2Via2l0IiwiYXBwZWFyZW5jZSIsIm5vUHJlZmlsbCIsInN1cHBvcnRlZFByb3BlcnR5IiwiY29sb3JBZGp1c3QiLCJ0b1VwcGVyIiwiY2FtZWxpemUiLCJwYXNjYWxpemUiLCJtYXNrIiwibG9uZ2hhbmQiLCJ0ZXh0T3JpZW50YXRpb24iLCJ0cmFuc2Zvcm0iLCJ3cml0aW5nTW9kZSIsInVzZXJTZWxlY3QiLCJicmVha1Byb3BzT2xkIiwiaW5saW5lTG9naWNhbE9sZCIsIm5ld1Byb3AiLCJ1bnByZWZpeGVkIiwicHJlZml4ZWQiLCJwYXNjYWxpemVkIiwic2Nyb2xsU25hcCIsIm92ZXJzY3JvbGxCZWhhdmlvciIsInByb3BNYXAiLCJmbGV4MjAxMiIsInByb3BNYXAkMSIsInByb3BLZXlzIiwicHJlZml4Q3NzIiwicHJvcGVydHlEZXRlY3RvcnMiLCJmaWx0ZXIiLCJpdGVyIiwiY29tcHV0ZWQiLCJnZXRDb21wdXRlZFN0eWxlIiwia2V5JDEiLCJlbCQxIiwiY2FjaGUkMSIsInRyYW5zaXRpb25Qcm9wZXJ0aWVzIiwidHJhbnNQcm9wc1JlZ0V4cCIsInByZWZpeFRyYW5zaXRpb25DYWxsYmFjayIsInAxIiwicDIiLCJzdXBwb3J0ZWRWYWx1ZSIsInByb3BlcnR5IiwicHJlZml4ZWRWYWx1ZSIsInBhcnNlSW50IiwiY2FjaGVLZXkiLCJzb3J0IiwiZm5WYWx1ZXMiLCJmblJ1bGUiLCJoYW5kbGVOZXN0ZWRHbG9iYWxDb250YWluZXJSdWxlIiwiaGFuZGxlUHJlZml4ZWRHbG9iYWxSdWxlIiwiZ2V0UmVwbGFjZVJlZiIsInJlcGxhY2VQYXJlbnRSZWZzIiwibmVzdGVkUHJvcCIsInBhcmVudFByb3AiLCJwYXJlbnRTZWxlY3RvcnMiLCJuZXN0ZWRTZWxlY3RvcnMiLCJqIiwibmVzdGVkIiwiZ2V0T3B0aW9ucyIsInByZXZPcHRpb25zIiwibmVzdGluZ0xldmVsIiwiaXNOZXN0ZWQiLCJpc05lc3RlZENvbmRpdGlvbmFsIiwiaHlwaGVuYXRlZFByb3AiLCJjYW1lbENhc2VkT3B0aW9ucyIsInByZWZpeFN0eWxlIiwiY2hhbmdlUHJvcCIsInN1cHBvcnRlZFByb3AiLCJjaGFuZ2VWYWx1ZSIsInN1cHBvcnRlZFZhbHVlJDEiLCJhdFJ1bGUiLCJzdXBwb3J0ZWRLZXlmcmFtZXMiLCJwcm9wMCIsInByb3AxIiwiZGVmYXVsdE9wdGlvbnMiLCJkaXNhYmxlR2VuZXJhdGlvbiIsImdlbmVyYXRlQ2xhc3NOYW1lIiwiX29wdGlvbnMkZGlzYWJsZUdsb2JhIiwiZGlzYWJsZUdsb2JhbCIsIl9vcHRpb25zJHByb2R1Y3Rpb25QciIsInByb2R1Y3Rpb25QcmVmaXgiLCJfb3B0aW9ucyRzZWVkIiwic2VlZCIsInNlZWRQcmVmaXgiLCJnZXROZXh0Q291bnRlcklkIiwic3R5bGVTaGVldCIsInRoZW1lIiwiY3JlYXRlR2VuZXJhdGVDbGFzc05hbWUiLCJzaGVldHNDYWNoZSIsInNoZWV0c01hbmFnZXIiLCJzaGVldHNSZWdpc3RyeSIsIlN0eWxlc0NvbnRleHQiLCJpbmRleENvdW50ZXIiLCJpbmNyZW1lbnQiLCJpc1BsYWluT2JqZWN0IiwiaXRlbSIsImRlZXBtZXJnZSIsImNsb25lIiwib3V0cHV0IiwiZ2V0U3R5bGVzQ3JlYXRvciIsInN0eWxlc09yQ3JlYXRvciIsInRoZW1pbmdFbmFibGVkIiwib3ZlcnJpZGVzIiwic3R5bGVzV2l0aE92ZXJyaWRlcyIsImdldENsYXNzZXMiLCJzdHlsZXNPcHRpb25zIiwiY2FjaGVDbGFzc2VzIiwibGFzdFByb3AiLCJsYXN0SlNTIiwiZ2VuZXJhdGUiLCJfcmVmMiIsInN0eWxlc0NyZWF0b3IiLCJzaGVldE1hbmFnZXIiLCJzdGF0aWNTaGVldCIsImR5bmFtaWNTdHlsZXMiLCJmbGlwIiwiZGlyZWN0aW9uIiwic2VydmVyR2VuZXJhdGVDbGFzc05hbWUiLCJkeW5hbWljU2hlZXQiLCJfcmVmMyIsIl9yZWY0IiwidXNlU3luY2hyb25vdXNFZmZlY3QiLCJ2YWx1ZXMiLCJjdXJyZW50S2V5IiwibWFrZVN0eWxlcyIsImNsYXNzTmFtZVByZWZpeE9wdGlvbiIsIl9vcHRpb25zJGRlZmF1bHRUaGVtZSIsImRlZmF1bHRUaGVtZSIsInN0eWxlc09wdGlvbnMyIiwidXNlU3R5bGVzIiwic2hvdWxkVXBkYXRlIiwiY3JlYXRlQnJlYWtwb2ludHMiLCJicmVha3BvaW50cyIsIl9icmVha3BvaW50cyR2YWx1ZXMiLCJ4cyIsInNtIiwieGwiLCJfYnJlYWtwb2ludHMkdW5pdCIsIl9icmVha3BvaW50cyRzdGVwIiwic3RlcCIsIm90aGVyIiwidXAiLCJiZXR3ZWVuIiwiZW5kSW5kZXgiLCJkb3duIiwidXBwZXJib3VuZCIsIl9kZWZpbmVQcm9wZXJ0eSIsImNyZWF0ZU1peGlucyIsInNwYWNpbmciLCJfdG9vbGJhciIsImd1dHRlcnMiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInRvb2xiYXIiLCJtaW5IZWlnaHQiLCJmb3JtYXRNdWlFcnJvck1lc3NhZ2UiLCJibGFjayIsIndoaXRlIiwiNTAiLCIxMDAiLCIyMDAiLCIzMDAiLCI0MDAiLCI1MDAiLCI2MDAiLCI3MDAiLCI4MDAiLCI5MDAiLCJBMTAwIiwiQTIwMCIsIkE0MDAiLCJBNzAwIiwiY2xhbXAiLCJtYXgiLCJkZWNvbXBvc2VDb2xvciIsIlJlZ0V4cCIsImNvbG9ycyIsInJvdW5kIiwiaGV4VG9SZ2IiLCJtYXJrZXIiLCJwYXJzZUZsb2F0IiwicmVjb21wb3NlQ29sb3IiLCJnZXRMdW1pbmFuY2UiLCJyZ2IiLCJoc2xUb1JnYiIsInBvdyIsInRvRml4ZWQiLCJmYWRlIiwiZGFya2VuIiwiY29lZmZpY2llbnQiLCJsaWdodGVuIiwibGlnaHQiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5IiwiaGludCIsImRpdmlkZXIiLCJiYWNrZ3JvdW5kIiwicGFwZXIiLCJhY3RpdmUiLCJob3ZlciIsImhvdmVyT3BhY2l0eSIsInNlbGVjdGVkT3BhY2l0eSIsImRpc2FibGVkQmFja2dyb3VuZCIsImRpc2FibGVkT3BhY2l0eSIsImZvY3VzT3BhY2l0eSIsImFjdGl2YXRlZE9wYWNpdHkiLCJkYXJrIiwiaWNvbiIsImFkZExpZ2h0T3JEYXJrIiwiaW50ZW50Iiwic2hhZGUiLCJ0b25hbE9mZnNldCIsInRvbmFsT2Zmc2V0TGlnaHQiLCJ0b25hbE9mZnNldERhcmsiLCJtYWluIiwiY3JlYXRlUGFsZXR0ZSIsInBhbGV0dGUiLCJfcGFsZXR0ZSRwcmltYXJ5IiwiX3BhbGV0dGUkc2Vjb25kYXJ5IiwiX3BhbGV0dGUkZXJyb3IiLCJfcGFsZXR0ZSR3YXJuaW5nIiwid2FybmluZyIsIl9wYWxldHRlJGluZm8iLCJpbmZvIiwiX3BhbGV0dGUkc3VjY2VzcyIsInN1Y2Nlc3MiLCJfcGFsZXR0ZSR0eXBlIiwiX3BhbGV0dGUkY29udHJhc3RUaHJlIiwiY29udHJhc3RUaHJlc2hvbGQiLCJfcGFsZXR0ZSR0b25hbE9mZnNldCIsImdldENvbnRyYXN0VGV4dCIsImZvcmVncm91bmQiLCJsdW1BIiwibHVtQiIsImdldENvbnRyYXN0UmF0aW8iLCJhdWdtZW50Q29sb3IiLCJtYWluU2hhZGUiLCJsaWdodFNoYWRlIiwiZGFya1NoYWRlIiwiY29udHJhc3RUZXh0IiwidHlwZXMiLCJjb21tb24iLCJncmV5IiwiY2FzZUFsbENhcHMiLCJ0ZXh0VHJhbnNmb3JtIiwiZGVmYXVsdEZvbnRGYW1pbHkiLCJjcmVhdGVUeXBvZ3JhcGh5IiwidHlwb2dyYXBoeSIsIl9yZWYkZm9udEZhbWlseSIsImZvbnRGYW1pbHkiLCJfcmVmJGZvbnRTaXplIiwiZm9udFNpemUiLCJfcmVmJGZvbnRXZWlnaHRMaWdodCIsImZvbnRXZWlnaHRMaWdodCIsIl9yZWYkZm9udFdlaWdodFJlZ3VsYSIsImZvbnRXZWlnaHRSZWd1bGFyIiwiX3JlZiRmb250V2VpZ2h0TWVkaXVtIiwiZm9udFdlaWdodE1lZGl1bSIsIl9yZWYkZm9udFdlaWdodEJvbGQiLCJmb250V2VpZ2h0Qm9sZCIsIl9yZWYkaHRtbEZvbnRTaXplIiwiaHRtbEZvbnRTaXplIiwiYWxsVmFyaWFudHMiLCJweFRvUmVtMiIsInB4VG9SZW0iLCJjb2VmIiwiYnVpbGRWYXJpYW50IiwibGV0dGVyU3BhY2luZyIsImNhc2luZyIsInZhcmlhbnRzIiwiaDEiLCJoMiIsImgzIiwiaDQiLCJoNSIsImg2Iiwic3VidGl0bGUxIiwic3VidGl0bGUyIiwiYm9keTEiLCJib2R5MiIsImNhcHRpb24iLCJvdmVybGluZSIsImNyZWF0ZVNoYWRvdyIsImJvcmRlclJhZGl1cyIsImRlZmF1bHRCcmVha3BvaW50cyIsImFjYyIsInByb3BlcnRpZXMiLCJkaXJlY3Rpb25zIiwiYWxpYXNlcyIsIm1hcmdpblgiLCJtYXJnaW5ZIiwicGFkZGluZ1giLCJwYWRkaW5nWSIsImdldENzc1Byb3BlcnRpZXMiLCJhcmciLCJfcHJvcCRzcGxpdDIiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwiX3MiLCJfaSIsImRpciIsInNwYWNpbmdLZXlzIiwiY3JlYXRlVW5hcnlTcGFjaW5nIiwidGhlbWVTcGFjaW5nIiwiYWJzIiwidHJhbnNmb3JtZXIiLCJzdHlsZUZyb21Qcm9wVmFsdWUiLCJjc3NQcm9wZXJ0aWVzIiwicHJvcFZhbHVlIiwiY3NzUHJvcGVydHkiLCJ0cmFuc2Zvcm1lZCIsImdldFN0eWxlRnJvbVByb3BWYWx1ZSIsInRoZW1lQnJlYWtwb2ludHMiLCJfdGhlbWVCcmVha3BvaW50cyIsImJyZWFrcG9pbnQiLCJoYW5kbGVCcmVha3BvaW50cyIsImNyZWF0ZVNwYWNpbmciLCJzcGFjaW5nSW5wdXQiLCJtdWkiLCJhcmd1bWVudCIsImZpbHRlclByb3BzIiwiZWFzaW5nIiwiZWFzZUluT3V0IiwiZWFzZU91dCIsImVhc2VJbiIsInNoYXJwIiwiZHVyYXRpb24iLCJzaG9ydGVzdCIsInNob3J0ZXIiLCJzaG9ydCIsInN0YW5kYXJkIiwiY29tcGxleCIsImVudGVyaW5nU2NyZWVuIiwibGVhdmluZ1NjcmVlbiIsImZvcm1hdE1zIiwibWlsbGlzZWNvbmRzIiwiX29wdGlvbnMkZHVyYXRpb24iLCJkdXJhdGlvbk9wdGlvbiIsIl9vcHRpb25zJGVhc2luZyIsImVhc2luZ09wdGlvbiIsIl9vcHRpb25zJGRlbGF5IiwiYW5pbWF0ZWRQcm9wIiwiZ2V0QXV0b0hlaWdodER1cmF0aW9uIiwiY29uc3RhbnQiLCJtb2JpbGVTdGVwcGVyIiwic3BlZWREaWFsIiwiYXBwQmFyIiwiZHJhd2VyIiwibW9kYWwiLCJzbmFja2JhciIsInRvb2x0aXAiLCJfb3B0aW9ucyRicmVha3BvaW50cyIsImJyZWFrcG9pbnRzSW5wdXQiLCJfb3B0aW9ucyRtaXhpbnMiLCJtaXhpbnNJbnB1dCIsIl9vcHRpb25zJHBhbGV0dGUiLCJwYWxldHRlSW5wdXQiLCJfb3B0aW9ucyR0eXBvZ3JhcGh5IiwidHlwb2dyYXBoeUlucHV0IiwibXVpVGhlbWUiLCJzaGFkb3dzIiwidHJhbnNpdGlvbnMiLCJ0b1ZhbCIsIm1peCIsInRtcCIsImdldFRoZW1lUHJvcHMiLCJwYXJhbXMiLCJfb3B0aW9ucyR3aXRoVGhlbWUiLCJ3aXRoVGhlbWUiLCJXaXRoU3R5bGVzIiwiaW5uZXJSZWYiLCJtb3JlIiwiVGFibGVDb250YWluZXIiLCJjbGFzc05hbWUiLCJfcHJvcHMkY29tcG9uZW50Iiwicm9vdCIsIm92ZXJmbG93WCIsIlBhcGVyIiwiX3Byb3BzJHNxdWFyZSIsInNxdWFyZSIsIl9wcm9wcyRlbGV2YXRpb24iLCJlbGV2YXRpb24iLCJfcHJvcHMkdmFyaWFudCIsInZhcmlhbnQiLCJvdXRsaW5lZCIsInJvdW5kZWQiLCJlbGV2YXRpb25zIiwic2hhZG93IiwiYm94U2hhZG93IiwiYmFja2dyb3VuZENvbG9yIiwiZGVmYXVsdENvbXBvbmVudCIsIlRhYmxlIiwiX3Byb3BzJHBhZGRpbmciLCJfcHJvcHMkc2l6ZSIsIl9wcm9wcyRzdGlja3lIZWFkZXIiLCJzdGlja3lIZWFkZXIiLCJ0YWJsZSIsInJvbGUiLCJib3JkZXJDb2xsYXBzZSIsImJvcmRlclNwYWNpbmciLCJ0ZXh0QWxpZ24iLCJjYXB0aW9uU2lkZSIsInRhYmxlbHZsMiIsIlRhYmxlSGVhZCIsIlRhYmxlUm93IiwiX3Byb3BzJGhvdmVyIiwiX3Byb3BzJHNlbGVjdGVkIiwiZm9vdGVyIiwidmVydGljYWxBbGlnbiIsImNhcGl0YWxpemUiLCJUYWJsZUNlbGwiLCJfcHJvcHMkYWxpZ24iLCJhbGlnbiIsInBhZGRpbmdQcm9wIiwic2NvcGVQcm9wIiwic2l6ZVByb3AiLCJzb3J0RGlyZWN0aW9uIiwidmFyaWFudFByb3AiLCJpc0hlYWRDZWxsIiwiYXJpYVNvcnQiLCJib3JkZXJCb3R0b20iLCJzaXplU21hbGwiLCJwYWRkaW5nQ2hlY2tib3giLCJwYWRkaW5nTm9uZSIsImFsaWduTGVmdCIsImFsaWduQ2VudGVyIiwiYWxpZ25SaWdodCIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkp1c3RpZnkiLCJwb3NpdGlvbiIsIlRhYmxlQm9keSIsIm1pbldpZHRoIiwidGFibGVIZWFkZXIiLCJ0YWJsZUhlYWRlck5vdGUiLCJ0YWJsZUhlYWRlckNvbHVtbiIsInRhYmxlQ29sdW1uIiwidGFibGVGb290ZXIiLCJub3RlIiwicm93cyIsInNpbmdsZVByaWNlIiwicHJpY2UiLCJQcmljZVRhYmxlIiwiYXJpYS1sYWJlbCIsInJvdyIsIlJvb3QiLCJSZWFjdCIsIlJlYWN0RE9NIl0sIm1hcHBpbmdzIjoiO29EQUVBLElBQUlBLEVBQVUsRUFBUSxLQU1sQkMsRUFBZ0IsQ0FDbEJDLG1CQUFtQixFQUNuQkMsYUFBYSxFQUNiQyxjQUFjLEVBQ2RDLGNBQWMsRUFDZEMsYUFBYSxFQUNiQyxpQkFBaUIsRUFDakJDLDBCQUEwQixFQUMxQkMsMEJBQTBCLEVBQzFCQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsTUFBTSxHQUVKQyxFQUFnQixDQUNsQkMsTUFBTSxFQUNOQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsT0FBTyxHQVNMQyxFQUFlLENBQ2pCLFVBQVksRUFDWkMsU0FBUyxFQUNUakIsY0FBYyxFQUNkQyxhQUFhLEVBQ2JLLFdBQVcsRUFDWEMsTUFBTSxHQUVKVyxFQUFlLEdBSW5CLFNBQVNDLEVBQVdDLEdBRWxCLE9BQUl6QixFQUFRMEIsT0FBT0QsR0FDVkosRUFJRkUsRUFBYUUsRUFBb0IsV0FBTXhCLEVBVmhEc0IsRUFBYXZCLEVBQVEyQixZQWhCSyxDQUN4QixVQUFZLEVBQ1pDLFFBQVEsRUFDUnZCLGNBQWMsRUFDZEMsYUFBYSxFQUNiSyxXQUFXLEdBWWJZLEVBQWF2QixFQUFRNkIsTUFBUVIsRUFZN0IsSUFBSVMsRUFBaUJDLE9BQU9ELGVBQ3hCRSxFQUFzQkQsT0FBT0Msb0JBQzdCQyxFQUF3QkYsT0FBT0Usc0JBQy9CQyxFQUEyQkgsT0FBT0cseUJBQ2xDQyxFQUFpQkosT0FBT0ksZUFDeEJDLEVBQWtCTCxPQUFPZixVQXNDN0JxQixFQUFPQyxRQXJDUCxTQUFTQyxFQUFxQkMsRUFBaUJDLEVBQWlCQyxHQUM5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QjBCLE9BSGwyQixJQUdxNEIsTUFBTXFFLEtBQUssS0FJajdCLElBQ0EsR0FEYyxDQUFDLE9BQVFveEQsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsRUFBRyxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsR0FBSSxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEVBQUcsSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEdBQUksSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEdBQUksSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEdBQUksSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEdBQUksSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksR0FBSUEsR0FBYSxFQUFHLEdBQUksSUFBSyxFQUFHLEVBQUcsR0FBSSxHQUFJLEVBQUcsRUFBRyxFQUFHLEdBQUksSUNOaHlDLEdBSFksQ0FDVkMsYUFBYyxHQ01oQixJQUFJakssR0FBUyxDQUNYWSxHQUFJLEVBQ0pDLEdBQUksSUFDSnB1QyxHQUFJLElBQ0pzVixHQUFJLEtBQ0orNEIsR0FBSSxNQUVGb0osR0FBcUIsQ0FHdkI1MUQsS0FBTSxDQUFDLEtBQU0sS0FBTSxLQUFNLEtBQU0sTUFDL0I2c0Qs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Z0JBQUMsR0FBRCxDQUFPSixVQUFXeGhCLEVBQVEraUIsTUFBTzhDLGFBQVcsY0FBNUMsaUVBQ0UsZ0JBQUMsR0FBRCxrRUFDRSxnQkFBQyxHQUFELG9FQUNFLGdCQUFDLEdBQUQsQ0FBV3JFLFVBQVd4aEIsRUFBUXFsQixrQkFBOUIseUVBQ0EsZ0JBQUMsR0FBRCxDQUFXN0QsVUFBV3hoQixFQUFRcWxCLGtCQUFtQnRCLE1BQU0sUUFBdkQsMkVBR0osZ0JBQUMsR0FBRCxtRUFDRzBCLEdBQUtuN0QsS0FBSSxTQUFDdzdELEdBQUQsT0FDUixnQkFBQyxHQUFELENBQVV4L0QsSUFBS3cvRCxFQUFJM2hFLEtBQW5CLGdFQUNFLGdCQUFDLEdBQUQsQ0FBV1csVUFBVSxLQUFLdWlELE1BQU0sTUFBTW1hLFVBQVd4aEIsRUFBUXNsQixZQUF6RCxnRUFBdUVRLEVBQUkzaEUsS0FBSyx3QkFBTXE5RCxVQUFXeGhCLEVBQVF3bEIsS0FBekIsZ0VBQStCLHdGQUFNTSxFQUFJSixjQUN6SCxnQkFBQyxHQUFELENBQVdsRSxVQUFXeGhCLEVBQVFzbEIsWUFBOUIsZ0VBQTRDUSxFQUFJSCxjLG8zQkV2R3pDSSxHLHNwQkFDbkIsV0FBWXI2RCxHQUFPLE8sNEZBQUEscUJBQ1hBLEcsbUNBRVIsV0FDRSxPQUNFLHdGQUNFLGdCQUFDazZELEdBQUQseUUscUJBUDBCSSxhQWFsQ0MsU0FBZ0IsZ0JBQUNGLEdBQUQsc0VBQVU3M0QsU0FBU28xQyxjQUFjLGEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4xXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih5KDIyNykpO3ZhciBiYT1uZXcgU2V0LGNhPXt9O2Z1bmN0aW9uIGRhKGEsYil7ZWEoYSxiKTtlYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZWEoYSxiKXtjYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspYmEuYWRkKGJbYV0pfVxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbmphPXt9LGthPXt9O2Z1bmN0aW9uIGxhKGEpe2lmKGlhLmNhbGwoa2EsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChqYSxhKSlyZXR1cm4hMTtpZihoYS50ZXN0KGEpKXJldHVybiBrYVthXT0hMDtqYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBtYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG1hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBvYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxucGEpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgcmE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsc2E9NjAxMDMsdGE9NjAxMDYsdWE9NjAxMDcsd2E9NjAxMDgseGE9NjAxMTQseWE9NjAxMDksemE9NjAxMTAsQWE9NjAxMTIsQmE9NjAxMTMsQ2E9NjAxMjAsRGE9NjAxMTUsRWE9NjAxMTYsRmE9NjAxMjEsR2E9NjAxMjgsSGE9NjAxMjksSWE9NjAxMzAsSmE9NjAxMzE7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgRT1TeW1ib2wuZm9yO3NhPUUoXCJyZWFjdC5lbGVtZW50XCIpO3RhPUUoXCJyZWFjdC5wb3J0YWxcIik7dWE9RShcInJlYWN0LmZyYWdtZW50XCIpO3dhPUUoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTt4YT1FKFwicmVhY3QucHJvZmlsZXJcIik7eWE9RShcInJlYWN0LnByb3ZpZGVyXCIpO3phPUUoXCJyZWFjdC5jb250ZXh0XCIpO0FhPUUoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtCYT1FKFwicmVhY3Quc3VzcGVuc2VcIik7Q2E9RShcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7RGE9RShcInJlYWN0Lm1lbW9cIik7RWE9RShcInJlYWN0LmxhenlcIik7RmE9RShcInJlYWN0LmJsb2NrXCIpO0UoXCJyZWFjdC5zY29wZVwiKTtHYT1FKFwicmVhY3Qub3BhcXVlLmlkXCIpO0hhPUUoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO0lhPUUoXCJyZWFjdC5vZmZzY3JlZW5cIik7SmE9RShcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xuZnVuY3Rpb24gUGEoYSxiKXtpZighYXx8T2EpcmV0dXJuXCJcIjtPYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2goayl7dmFyIGQ9a31SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGspe2Q9a31hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGspe2Q9a31hKCl9fWNhdGNoKGspe2lmKGsmJmQmJlwic3RyaW5nXCI9PT10eXBlb2Ygay5zdGFjayl7Zm9yKHZhciBlPWsuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSlyZXR1cm5cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3doaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtPYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP05hKGEpOlwiXCJ9XG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQmE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgemE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQWE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7XG5yZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIERhOnJldHVybiBSYShhLnR5cGUpO2Nhc2UgRmE6cmV0dXJuIFJhKGEuX3JlbmRlcik7Y2FzZSBFYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUmEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBtKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uICRhKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmcWEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBiYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBkYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBlYihhLGIpe2E9bSh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHkoOTEpKTtyZXR1cm4gbSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih5KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IoeSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIGtiPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5iLG9iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtiLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25iPW5ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW5iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWJbYl09cWJbYV19KX0pO2Z1bmN0aW9uIHNiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxYi5oYXNPd25Qcm9wZXJ0eShhKSYmcWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWI9bSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cbmZ1bmN0aW9uIHdiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHkoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPUdiLEtiPSExLExiPSExO2Z1bmN0aW9uIE1iKCl7aWYobnVsbCE9PXpifHxudWxsIT09QWIpSWIoKSxGYigpfVxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cbmZ1bmN0aW9uIE9iKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IoeSgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBQYj0hMTtpZihmYSl0cnl7dmFyIFFiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShRYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7UGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKX1jYXRjaChhKXtQYj0hMX1mdW5jdGlvbiBSYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobil7dGhpcy5vbkVycm9yKG4pfX12YXIgU2I9ITEsVGI9bnVsbCxVYj0hMSxWYj1udWxsLFdiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe1NiPSEwO1RiPWF9fTtmdW5jdGlvbiBYYihhLGIsYyxkLGUsZixnLGgsayl7U2I9ITE7VGI9bnVsbDtSYi5hcHBseShXYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1aYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBhYyhlKSxhO2lmKGY9PT1kKXJldHVybiBhYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHkoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IoeSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih5KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGNjKGEpe2E9YmMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gcmMoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsZG9tRXZlbnROYW1lOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDE2LG5hdGl2ZUV2ZW50OmUsdGFyZ2V0Q29udGFpbmVyczpbZF19fWZ1bmN0aW9uIHNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6a2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmxjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOm1jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpuYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpvYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIHRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9cmMoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJmZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gdmMoYSl7dmFyIGI9d2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1aYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj0kYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtoYyhhLmxhbmVQcmlvcml0eSxmdW5jdGlvbigpe3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtnYyhjKX0pfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIHhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09YylyZXR1cm4gYj1DYihjKSxudWxsIT09YiYmZmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gemMoYSxiLGMpe3hjKGEpJiZjLmRlbGV0ZShiKX1cbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cbmZ1bmN0aW9uIEJjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxpY3x8KGljPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEFjKSkpfVxuZnVuY3Rpb24gQ2MoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gQmMoYixhKX1pZigwPGpjLmxlbmd0aCl7QmMoamNbMF0sYSk7Zm9yKHZhciBjPTE7YzxqYy5sZW5ndGg7YysrKXt2YXIgZD1qY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PWtjJiZCYyhrYyxhKTtudWxsIT09bGMmJkJjKGxjLGEpO251bGwhPT1tYyYmQmMobWMsYSk7bmMuZm9yRWFjaChiKTtvYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxwYy5sZW5ndGg7YysrKWQ9cGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHBjLmxlbmd0aCYmKGM9cGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspdmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZwYy5zaGlmdCgpfVxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XG5mYSYmKEdjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIEVjLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIEVjLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSGMoYSl7aWYoRmNbYV0pcmV0dXJuIEZjW2FdO2lmKCFFY1thXSlyZXR1cm4gYTt2YXIgYj1FY1thXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBHYylyZXR1cm4gRmNbYV09YltjXTtyZXR1cm4gYX1cbnZhciBJYz1IYyhcImFuaW1hdGlvbmVuZFwiKSxKYz1IYyhcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxLYz1IYyhcImFuaW1hdGlvbnN0YXJ0XCIpLExjPUhjKFwidHJhbnNpdGlvbmVuZFwiKSxNYz1uZXcgTWFwLE5jPW5ldyBNYXAsT2M9W1wiYWJvcnRcIixcImFib3J0XCIsSWMsXCJhbmltYXRpb25FbmRcIixKYyxcImFuaW1hdGlvbkl0ZXJhdGlvblwiLEtjLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xuZnVuY3Rpb24gUmMoYSl7aWYoMCE9PSgxJmEpKXJldHVybiBGPTE1LDE7aWYoMCE9PSgyJmEpKXJldHVybiBGPTE0LDI7aWYoMCE9PSg0JmEpKXJldHVybiBGPTEzLDQ7dmFyIGI9MjQmYTtpZigwIT09YilyZXR1cm4gRj0xMixiO2lmKDAhPT0oYSYzMikpcmV0dXJuIEY9MTEsMzI7Yj0xOTImYTtpZigwIT09YilyZXR1cm4gRj0xMCxiO2lmKDAhPT0oYSYyNTYpKXJldHVybiBGPTksMjU2O2I9MzU4NCZhO2lmKDAhPT1iKXJldHVybiBGPTgsYjtpZigwIT09KGEmNDA5NikpcmV0dXJuIEY9Nyw0MDk2O2I9NDE4NjExMiZhO2lmKDAhPT1iKXJldHVybiBGPTYsYjtiPTYyOTE0NTYwJmE7aWYoMCE9PWIpcmV0dXJuIEY9NSxiO2lmKGEmNjcxMDg4NjQpcmV0dXJuIEY9NCw2NzEwODg2NDtpZigwIT09KGEmMTM0MjE3NzI4KSlyZXR1cm4gRj0zLDEzNDIxNzcyODtiPTgwNTMwNjM2OCZhO2lmKDAhPT1iKXJldHVybiBGPTIsYjtpZigwIT09KDEwNzM3NDE4MjQmYSkpcmV0dXJuIEY9MSwxMDczNzQxODI0O1xuRj04O3JldHVybiBhfWZ1bmN0aW9uIFNjKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiAxNTtjYXNlIDk4OnJldHVybiAxMDtjYXNlIDk3OmNhc2UgOTY6cmV0dXJuIDg7Y2FzZSA5NTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBUYyhhKXtzd2l0Y2goYSl7Y2FzZSAxNTpjYXNlIDE0OnJldHVybiA5OTtjYXNlIDEzOmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDEwOnJldHVybiA5ODtjYXNlIDk6Y2FzZSA4OmNhc2UgNzpjYXNlIDY6Y2FzZSA0OmNhc2UgNTpyZXR1cm4gOTc7Y2FzZSAzOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDk1O2Nhc2UgMDpyZXR1cm4gOTA7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDM1OCxhKSk7fX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gV2MoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIFhjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTU6cmV0dXJuIDE7Y2FzZSAxNDpyZXR1cm4gMjtjYXNlIDEyOnJldHVybiBhPVljKDI0Jn5iKSwwPT09YT9YYygxMCxiKTphO2Nhc2UgMTA6cmV0dXJuIGE9WWMoMTkyJn5iKSwwPT09YT9YYyg4LGIpOmE7Y2FzZSA4OnJldHVybiBhPVljKDM1ODQmfmIpLDA9PT1hJiYoYT1ZYyg0MTg2MTEyJn5iKSwwPT09YSYmKGE9NTEyKSksYTtjYXNlIDI6cmV0dXJuIGI9WWMoODA1MzA2MzY4Jn5iKSwwPT09YiYmKGI9MjY4NDM1NDU2KSxifXRocm93IEVycm9yKHkoMzU4LGEpKTt9ZnVuY3Rpb24gWWMoYSl7cmV0dXJuIGEmLWF9ZnVuY3Rpb24gWmMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7dmFyIGQ9Yi0xO2Euc3VzcGVuZGVkTGFuZXMmPWQ7YS5waW5nZWRMYW5lcyY9ZDthPWEuZXZlbnRUaW1lcztiPTMxLVZjKGIpO2FbYl09Y312YXIgVmM9TWF0aC5jbHozMj9NYXRoLmNsejMyOmFkLGJkPU1hdGgubG9nLGNkPU1hdGguTE4yO2Z1bmN0aW9uIGFkKGEpe3JldHVybiAwPT09YT8zMjozMS0oYmQoYSkvY2R8MCl8MH12YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBnZChhLGIsYyxkKXtLYnx8SWIoKTt2YXIgZT1oZCxmPUtiO0tiPSEwO3RyeXtIYihlLGEsYixjLGQpfWZpbmFsbHl7KEtiPWYpfHxNYigpfX1mdW5jdGlvbiBpZChhLGIsYyxkKXtlZChkZCxoZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT14YihkKTtlPXdjKGUpO2lmKG51bGwhPT1lKXt2YXIgZj1aYihlKTtpZihudWxsPT09ZillPW51bGw7ZWxzZXt2YXIgZz1mLnRhZztpZigxMz09PWcpe2U9JGIoZik7aWYobnVsbCE9PWUpcmV0dXJuIGU7ZT1udWxsfWVsc2UgaWYoMz09PWcpe2lmKGYuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1mLnRhZz9mLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZT1udWxsfWVsc2UgZiE9PWUmJihlPW51bGwpfX1qZChhLGIsZCxlLGMpO3JldHVybiBudWxsfXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtcbmZ1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPW0oe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1tKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9bSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9bSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPW0oe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPW0oe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWZhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2ZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1mYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWZhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZSxJZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gSmUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIUllLmNhbGwoYixjW2RdKXx8IUhlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gS2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFBlPWZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5QYyhcImNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzaW4gZm9jdXMgZm9jdXNvdXQgYmx1ciBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLFxuMCk7UGMoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7UGMoT2MsMik7Zm9yKHZhciBWZT1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksV2U9MDtXZTxWZS5sZW5ndGg7V2UrKylOYy5zZXQoVmVbV2VdLDApO2VhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7XG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZGEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2RhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBYZT1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksWWU9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoWGUpKTtcbmZ1bmN0aW9uIFplKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1liKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cbmZ1bmN0aW9uIEcoYSxiKXt2YXIgYz0kZShiKSxkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwoYWYoYixhLDIsITEpLGMuYWRkKGQpKX12YXIgYmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBjZihhKXthW2JmXXx8KGFbYmZdPSEwLGJhLmZvckVhY2goZnVuY3Rpb24oYil7WWUuaGFzKGIpfHxkZihiLCExLGEsbnVsbCk7ZGYoYiwhMCxhLG51bGwpfSkpfVxuZnVuY3Rpb24gZGYoYSxiLGMsZCl7dmFyIGU9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjAsZj1jO1wic2VsZWN0aW9uY2hhbmdlXCI9PT1hJiY5IT09Yy5ub2RlVHlwZSYmKGY9Yy5vd25lckRvY3VtZW50KTtpZihudWxsIT09ZCYmIWImJlllLmhhcyhhKSl7aWYoXCJzY3JvbGxcIiE9PWEpcmV0dXJuO2V8PTI7Zj1kfXZhciBnPSRlKGYpLGg9YStcIl9fXCIrKGI/XCJjYXB0dXJlXCI6XCJidWJibGVcIik7Zy5oYXMoaCl8fChiJiYoZXw9NCksYWYoZixhLGUsYiksZy5hZGQoaCkpfVxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBqZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPXdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1OYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9TWMuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLHg9YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6eD1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjp4PVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxudDspe3E9dDt2YXIgdj1xLnN0YXRlTm9kZTs1PT09cS50YWcmJm51bGwhPT12JiYocT12LG51bGwhPT11JiYodj1PYih0LHUpLG51bGwhPXYmJncucHVzaChlZih0LHYscSkpKSk7aWYoeilicmVhazt0PXQucmV0dXJufTA8dy5sZW5ndGgmJihoPW5ldyBrKGgseCxudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp3fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmMD09PShiJjE2KSYmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKHdjKHgpfHx4W2ZmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQseD14P3djKHgpOm51bGwsbnVsbCE9PVxueCYmKHo9WmIoeCkseCE9PXp8fDUhPT14LnRhZyYmNiE9PXgudGFnKSl4PW51bGx9ZWxzZSBrPW51bGwseD1kO2lmKGshPT14KXt3PUJkO3Y9XCJvbk1vdXNlTGVhdmVcIjt1PVwib25Nb3VzZUVudGVyXCI7dD1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXc9VGQsdj1cIm9uUG9pbnRlckxlYXZlXCIsdT1cIm9uUG9pbnRlckVudGVyXCIsdD1cInBvaW50ZXJcIjt6PW51bGw9PWs/aDp1ZShrKTtxPW51bGw9PXg/aDp1ZSh4KTtoPW5ldyB3KHYsdCtcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PXo7aC5yZWxhdGVkVGFyZ2V0PXE7dj1udWxsO3djKGUpPT09ZCYmKHc9bmV3IHcodSx0K1wiZW50ZXJcIix4LGMsZSksdy50YXJnZXQ9cSx3LnJlbGF0ZWRUYXJnZXQ9eix2PXcpO3o9djtpZihrJiZ4KWI6e3c9azt1PXg7dD0wO2ZvcihxPXc7cTtxPWdmKHEpKXQrKztxPTA7Zm9yKHY9dTt2O3Y9Z2YodikpcSsrO2Zvcig7MDx0LXE7KXc9Z2YodyksdC0tO2Zvcig7MDxxLXQ7KXU9XG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcbksuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmYmIoaCxcIm51bWJlclwiLGgudmFsdWUpfUs9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoSyl8fFwidHJ1ZVwiPT09Sy5jb250ZW50RWRpdGFibGUpUWU9SyxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyIFE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOkw9XCJvbkNvbXBvc2l0aW9uRW5kXCI7YnJlYWsgYjtcbmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOkw9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1MPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihMPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7TCYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09TD9cIm9uQ29tcG9zaXRpb25FbmRcIj09PUwmJmllJiYoUT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLEs9b2UoZCxMKSwwPEsubGVuZ3RoJiYoTD1uZXcgTGQoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOkt9KSxRP0wuZGF0YT1ROihRPWhlKGMpLG51bGwhPT1RJiYoTC5kYXRhPVEpKSkpO2lmKFE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gaGYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1PYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChlZihjLGssaCkpKTplfHwoaz1PYihjLGYpLG51bGwhPWsmJmcucHVzaChlZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfWZ1bmN0aW9uIGpmKCl7fXZhciBrZj1udWxsLGxmPW51bGw7ZnVuY3Rpb24gbWYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxwZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcWYoYSl7MT09PWEubm9kZVR5cGU/YS50ZXh0Q29udGVudD1cIlwiOjk9PT1hLm5vZGVUeXBlJiYoYT1hLmJvZHksbnVsbCE9YSYmKGEudGV4dENvbnRlbnQ9XCJcIikpfVxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPWFbd2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW2ZmXXx8Y1t3Zl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZihhKTtudWxsIT09YTspe2lmKGM9YVt3Zl0pcmV0dXJuIGM7YT1zZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW3dmXXx8YVtmZl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih5KDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW3hmXXx8bnVsbH1cbmZ1bmN0aW9uICRlKGEpe3ZhciBiPWFbeWZdO3ZvaWQgMD09PWImJihiPWFbeWZdPW5ldyBTZXQpO3JldHVybiBifXZhciB6Zj1bXSxBZj0tMTtmdW5jdGlvbiBCZihhKXtyZXR1cm57Y3VycmVudDphfX1mdW5jdGlvbiBIKGEpezA+QWZ8fChhLmN1cnJlbnQ9emZbQWZdLHpmW0FmXT1udWxsLEFmLS0pfWZ1bmN0aW9uIEkoYSxiKXtBZisrO3pmW0FmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LE09QmYoQ2YpLE49QmYoITEpLERmPUNmO1xuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHkoMTA4LFJhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG0oe30sYyxkKX1mdW5jdGlvbiBKZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9TS5jdXJyZW50O0koTSxhKTtJKE4sTi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IoeSgxNjkpKTtjPyhhPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoTiksSChNKSxJKE0sYSkpOkgoTik7SShOLGMpfVxudmFyIExmPW51bGwsTWY9bnVsbCxOZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxPZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssUGY9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxRZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFJmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LFNmPXIudW5zdGFibGVfbm93LFRmPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsVWY9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxWZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFdmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksWGY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxZZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxaZj17fSwkZj12b2lkIDAhPT1SZj9SZjpmdW5jdGlvbigpe30sYWc9bnVsbCxiZz1udWxsLGNnPSExLGRnPVNmKCksTz0xRTQ+ZGc/U2Y6ZnVuY3Rpb24oKXtyZXR1cm4gU2YoKS1kZ307XG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWNnJiZudWxsIT09YWcpe2NnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPWFnO2dnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTthZz1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1hZyYmKGFnPWFnLnNsaWNlKGErMSkpLE9mKFVmLGlnKSxjO31maW5hbGx5e2NnPSExfX19dmFyIGtnPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGxnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBtZz1CZihudWxsKSxuZz1udWxsLG9nPW51bGwscGc9bnVsbDtmdW5jdGlvbiBxZygpe3BnPW9nPW5nPW51bGx9XG5mdW5jdGlvbiByZyhhKXt2YXIgYj1tZy5jdXJyZW50O0gobWcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gc2coYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoKGEuY2hpbGRMYW5lcyZiKT09PWIpaWYobnVsbD09PWN8fChjLmNoaWxkTGFuZXMmYik9PT1iKWJyZWFrO2Vsc2UgYy5jaGlsZExhbmVzfD1iO2Vsc2UgYS5jaGlsZExhbmVzfD1iLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKTthPWEucmV0dXJufX1mdW5jdGlvbiB0ZyhhLGIpe25nPWE7cGc9b2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJih1Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24geWcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gQWcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiBCZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt3Zz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBuPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXtuPW4udXBkYXRlUXVldWU7dmFyIEE9bi5sYXN0QmFzZVVwZGF0ZTtBIT09ZyYmKG51bGw9PT1BP24uZmlyc3RCYXNlVXBkYXRlPWw6QS5uZXh0PWwsbi5sYXN0QmFzZVVwZGF0ZT1rKX19aWYobnVsbCE9PWYpe0E9ZS5iYXNlU3RhdGU7Zz0wO249bD1rPW51bGw7ZG97aD1mLmxhbmU7dmFyIHA9Zi5ldmVudFRpbWU7aWYoKGQmaCk9PT1oKXtudWxsIT09biYmKG49bi5uZXh0PXtldmVudFRpbWU6cCxsYW5lOjAsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgQz1hLHg9ZjtoPWI7cD1jO3N3aXRjaCh4LnRhZyl7Y2FzZSAxOkM9eC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDKXtBPUMuY2FsbChwLEEsaCk7YnJlYWsgYX1BPUM7YnJlYWsgYTtjYXNlIDM6Qy5mbGFncz1DLmZsYWdzJi00MDk3fDY0O2Nhc2UgMDpDPXgucGF5bG9hZDtoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDP0MuY2FsbChwLEEsaCk6QztpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhayBhO0E9bSh7fSxBLGgpO2JyZWFrIGE7Y2FzZSAyOndnPSEwfX1udWxsIT09Zi5jYWxsYmFjayYmKGEuZmxhZ3N8PTMyLGg9ZS5lZmZlY3RzLG51bGw9PT1oP2UuZWZmZWN0cz1bZl06aC5wdXNoKGYpKX1lbHNlIHA9e2V2ZW50VGltZTpwLGxhbmU6aCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1uPyhsPW49cCxrPUEpOm49bi5uZXh0PXAsZ3w9aDtmPWYubmV4dDtpZihudWxsPT09XG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIEdnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjptKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBLZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9aYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUhnKCksZD1JZyhhKSxlPXpnKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9XG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxuZnVuY3Rpb24gTWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9dmcoZik6KGU9RmYoYik/RGY6TS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUtnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLENnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQpfXZhciBQZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHkoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUZnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHkoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHkoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cbmZ1bmN0aW9uIFNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZmxhZ3M9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9VGcoYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3M9MixcbmMpOmQ7Yi5mbGFncz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFncz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VWcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVZnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcbmEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtSZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT11YT9uKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoUGcoYyl8fExhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm4oYSxiLGMsZCxudWxsKTtSZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09dWE/bihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoUGcoZCl8fExhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG4oYixhLGQsZSxudWxsKTtSZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLHU9Zyx6PWc9MCxxPW51bGw7bnVsbCE9PXUmJno8aC5sZW5ndGg7eisrKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciBuPXAoZSx1LGhbel0sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09XG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxuaCl0aHJvdyBFcnJvcih5KDE1MSkpO2Zvcih2YXIgdD1sPW51bGwsdT1nLHo9Zz0wLHE9bnVsbCxuPWgubmV4dCgpO251bGwhPT11JiYhbi5kb25lO3orKyxuPWgubmV4dCgpKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciB3PXAoZSx1LG4udmFsdWUsayk7aWYobnVsbD09PXcpe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHopO251bGw9PT10P2w9dzp0LnNpYmxpbmc9dzt0PXc7dT1xfWlmKG4uZG9uZSlyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUModSxlLHosbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmXG51LmRlbGV0ZShudWxsPT09bi5rZXk/ejpuLmtleSksZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT11YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBzYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXVhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7XG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XG5XZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1VZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihQZyhmKSlyZXR1cm4geChhLGQsZixoKTtpZihMYShmKSlyZXR1cm4gdyhhLGQsZixoKTtsJiZSZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAyMjpjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRocm93IEVycm9yKHkoMTUyLFJhKGEudHlwZSl8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFlnPVNnKCEwKSxaZz1TZyghMSksJGc9e30sYWg9QmYoJGcpLGJoPUJmKCRnKSxjaD1CZigkZyk7XG5mdW5jdGlvbiBkaChhKXtpZihhPT09JGcpdGhyb3cgRXJyb3IoeSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBlaChhLGIpe0koY2gsYik7SShiaCxhKTtJKGFoLCRnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1tYihiLGEpfUgoYWgpO0koYWgsYil9ZnVuY3Rpb24gZmgoKXtIKGFoKTtIKGJoKTtIKGNoKX1mdW5jdGlvbiBnaChhKXtkaChjaC5jdXJyZW50KTt2YXIgYj1kaChhaC5jdXJyZW50KTt2YXIgYz1tYihiLGEudHlwZSk7YiE9PWMmJihJKGJoLGEpLEkoYWgsYykpfWZ1bmN0aW9uIGhoKGEpe2JoLmN1cnJlbnQ9PT1hJiYoSChhaCksSChiaCkpfXZhciBQPUJmKDApO1xuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1uaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5mbGFncz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gb2goYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHBoKGEpe2lmKGxoKXt2YXIgYj1raDtpZihiKXt2YXIgYz1iO2lmKCFvaChhLGIpKXtiPXJmKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhb2goYSxiKSl7YS5mbGFncz1hLmZsYWdzJi0xMDI1fDI7bGg9ITE7amg9YTtyZXR1cm59bWgoamgsYyl9amg9YTtraD1yZihiLmZpcnN0Q2hpbGQpfWVsc2UgYS5mbGFncz1hLmZsYWdzJi0xMDI1fDIsbGg9ITEsamg9YX19ZnVuY3Rpb24gcWgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2poPWF9XG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBzaCgpe2toPWpoPW51bGw7bGg9ITF9dmFyIHRoPVtdO2Z1bmN0aW9uIHVoKCl7Zm9yKHZhciBhPTA7YTx0aC5sZW5ndGg7YSsrKXRoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7dGgubGVuZ3RoPTB9dmFyIHZoPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsd2g9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseGg9MCxSPW51bGwsUz1udWxsLFQ9bnVsbCx5aD0hMSx6aD0hMTtmdW5jdGlvbiBBaCgpe3Rocm93IEVycm9yKHkoMzIxKSk7fWZ1bmN0aW9uIEJoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBDaChhLGIsYyxkLGUsZil7eGg9ZjtSPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDt2aC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP0RoOkVoO2E9YyhkLGUpO2lmKHpoKXtmPTA7ZG97emg9ITE7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih5KDMwMSkpO2YrPTE7VD1TPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO3ZoLmN1cnJlbnQ9Rmg7YT1jKGQsZSl9d2hpbGUoemgpfXZoLmN1cnJlbnQ9R2g7Yj1udWxsIT09UyYmbnVsbCE9PVMubmV4dDt4aD0wO1Q9Uz1SPW51bGw7eWg9ITE7aWYoYil0aHJvdyBFcnJvcih5KDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIEhoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hO3JldHVybiBUfVxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIEtoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9UyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmxhbmU7aWYoKHhoJmwpPT09bCludWxsIT09aCYmKGg9aC5uZXh0PXtsYW5lOjAsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtlbHNle3ZhciBuPXtsYW5lOmwsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixcbmVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1uLGY9ZCk6aD1oLm5leHQ9bjtSLmxhbmVzfD1sO0RnfD1sfWs9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1iLl9nZXRWZXJzaW9uO2Q9ZChiLl9zb3VyY2UpO3ZhciBlPWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk7aWYobnVsbCE9PWUpYT1lPT09ZDtlbHNlIGlmKGE9YS5tdXRhYmxlUmVhZExhbmVzLGE9KHhoJmEpPT09YSliLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWQsdGgucHVzaChiKTtpZihhKXJldHVybiBjKGIuX3NvdXJjZSk7dGgucHVzaChiKTt0aHJvdyBFcnJvcih5KDM1MCkpO31cbmZ1bmN0aW9uIE5oKGEsYixjLGQpe3ZhciBlPVU7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoeSgzNDkpKTt2YXIgZj1iLl9nZXRWZXJzaW9uLGc9ZihiLl9zb3VyY2UpLGg9dmguY3VycmVudCxrPWgudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm4gTWgoZSxiLGMpfSksbD1rWzFdLG49a1swXTtrPVQ7dmFyIEE9YS5tZW1vaXplZFN0YXRlLHA9QS5yZWZzLEM9cC5nZXRTbmFwc2hvdCx4PUEuc291cmNlO0E9QS5zdWJzY3JpYmU7dmFyIHc9UjthLm1lbW9pemVkU3RhdGU9e3JlZnM6cCxzb3VyY2U6YixzdWJzY3JpYmU6ZH07aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtwLmdldFNuYXBzaG90PWM7cC5zZXRTbmFwc2hvdD1sO3ZhciBhPWYoYi5fc291cmNlKTtpZighSGUoZyxhKSl7YT1jKGIuX3NvdXJjZSk7SGUobixhKXx8KGwoYSksYT1JZyh3KSxlLm11dGFibGVSZWFkTGFuZXN8PWEmZS5wZW5kaW5nTGFuZXMpO2E9ZS5tdXRhYmxlUmVhZExhbmVzO2UuZW50YW5nbGVkTGFuZXN8PWE7Zm9yKHZhciBkPVxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFBoKGEsYixjKXt2YXIgZD1JaCgpO3JldHVybiBOaChkLGEsYixjKX1mdW5jdGlvbiBRaChhKXt2YXIgYj1IaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFJoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPVIudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sUi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBTaChhKXt2YXIgYj1IaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfWZ1bmN0aW9uIFRoKCl7cmV0dXJuIEloKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBVaChhLGIsYyxkKXt2YXIgZT1IaCgpO1IuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxuZnVuY3Rpb24gJGgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDIsWmguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gYWkoKXt9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gY2koYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIpe3ZhciBjPWVnKCk7Z2coOTg+Yz85ODpjLGZ1bmN0aW9uKCl7YSghMCl9KTtnZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYz13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7YSghMSksYigpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1jfX0pfVxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxudmFyIEdoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpBaCx1c2VDb250ZXh0OkFoLHVzZUVmZmVjdDpBaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkFoLHVzZUxheW91dEVmZmVjdDpBaCx1c2VNZW1vOkFoLHVzZVJlZHVjZXI6QWgsdXNlUmVmOkFoLHVzZVN0YXRlOkFoLHVzZURlYnVnVmFsdWU6QWgsdXNlRGVmZXJyZWRWYWx1ZTpBaCx1c2VUcmFuc2l0aW9uOkFoLHVzZU11dGFibGVTb3VyY2U6QWgsdXNlT3BhcXVlSWRlbnRpZmllcjpBaCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LERoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe0hoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OldoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBVaCg0LDIsWmguYmluZChudWxsLFxuYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFVoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9SGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6U2gsdXNlU3RhdGU6UWgsdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVFoKGEpLGM9YlswXSxkPWJbMV07V2goZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO1xud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcbnZvaWQgMCxudWxsKSk7cmV0dXJuIGJ9Yj1cInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KTtRaChiKTtyZXR1cm4gYn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxFaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOktoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBLaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1LaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUtoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBLaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRmg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpMaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9TGgoSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1MaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWppKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGtpKGEsYixnLGQsZSxmKTthPVZnKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09KGUmZikmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6SmUsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gaGkoYSxiLGYpO2IuZmxhZ3N8PTE7YT1UZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGtpKGEsYixjLGQsZSxmKXtpZihudWxsIT09YSYmSmUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKHVnPSExLDAhPT0oZiZlKSkwIT09KGEuZmxhZ3MmMTYzODQpJiYodWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxoaShhLGIsZik7cmV0dXJuIGxpKGEsYixjLGQsZil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9MTI4fWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9RmYoYyk/RGY6TS5jdXJyZW50O2Y9RWYoYixmKTt0ZyhiLGUpO2M9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlKXtpZihGZihjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLE1nKGIsYyxkKSxPZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD12ZyhsKToobD1GZihjKT9EZjpNLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbj1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt5ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmxnKGIudHlwZSxoKTtnLnByb3BzPWw7QT1iLnBlbmRpbmdQcm9wcztwPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXZnKGspOihrPUZmKGMpP0RmOk0uY3VycmVudCxrPUVmKGIsaykpO3ZhciBDPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDfHxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09QXx8cCE9PWspJiZOZyhiLGcsZCxrKTt3Zz0hMTtwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2ghPT1BfHxwIT09eHx8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJihHZyhiLGMsQyxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKGw9d2d8fExnKGIsYyxsLGQscCx4LGspKT8obnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksZD0hMSl9cmV0dXJuIHFpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHFpKGEsYixjLGQsZSxmKXtvaShhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLGhpKGEsYixmKTtkPWIuc3RhdGVOb2RlO2VpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1ZZyhiLG51bGwsaCxmKSk6ZmkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiByaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTtlaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XG5mdW5jdGlvbiB0aShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnOyhnPTAhPT0oYi5mbGFncyY2NCkpfHwoZz1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2c/KGY9ITAsYi5mbGFncyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZC5mYWxsYmFja3x8ITA9PT1kLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZXw9MSk7SShQLGUmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWQuZmFsbGJhY2smJnBoKGIpO2E9ZC5jaGlsZHJlbjtlPWQuZmFsbGJhY2s7aWYoZilyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxiLm1lbW9pemVkU3RhdGU9c2ksYTtpZihcIm51bWJlclwiPT09dHlwZW9mIGQudW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSlyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxcbmIubWVtb2l6ZWRTdGF0ZT1zaSxiLmxhbmVzPTMzNTU0NDMyLGE7Yz12aSh7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjphfSxiLm1vZGUsYyxudWxsKTtjLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWN9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9Olxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aShhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2E9ZS5zaWJsaW5nO2M9VGcoZSx7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpjfSk7MD09PShiLm1vZGUmMikmJihjLmxhbmVzPWQpO2MucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihhLm5leHRFZmZlY3Q9bnVsbCxhLmZsYWdzPTgsYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YSk7cmV0dXJuIGIuY2hpbGQ9Y31cbmZ1bmN0aW9uIHdpKGEsYixjLGQsZSl7dmFyIGY9Yi5tb2RlLGc9YS5jaGlsZDthPWcuc2libGluZzt2YXIgaD17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmN9OzA9PT0oZiYyKSYmYi5jaGlsZCE9PWc/KGM9Yi5jaGlsZCxjLmNoaWxkTGFuZXM9MCxjLnBlbmRpbmdQcm9wcz1oLGc9Yy5sYXN0RWZmZWN0LG51bGwhPT1nPyhiLmZpcnN0RWZmZWN0PWMuZmlyc3RFZmZlY3QsYi5sYXN0RWZmZWN0PWcsZy5uZXh0RWZmZWN0PW51bGwpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGwpOmM9VGcoZyxoKTtudWxsIT09YT9kPVRnKGEsZCk6KGQ9WGcoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiB5aShhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtzZyhhLnJldHVybixiKX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBBaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO2ZpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ5aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl5aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKFAsZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWloKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7emkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXppKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp6aShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xuQmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0NpPWZ1bmN0aW9uKCl7fTtcbkRpPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtkaChhaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxlKTtkPWViKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1tKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfXZiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09XG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxuKGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLGMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZHKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUdhP2sudG9TdHJpbmcoKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsXG5jKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07ZnVuY3Rpb24gRmkoYSxiKXtpZighbGgpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxuYi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtyZXR1cm4gbnVsbH1hPWRoKGFoLmN1cnJlbnQpO2lmKHJoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW3dmXT1iO2RbeGZdPWY7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsZCk7RyhcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxYZS5sZW5ndGg7YSsrKUcoWGVbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGQpO0coXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRyhcImludmFsaWRcIixkKX12YihjLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoZT1mW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBlP2QudGV4dENvbnRlbnQhPT1lJiYoYT1bXCJjaGlsZHJlblwiLGVdKTpcIm51bWJlclwiPT09dHlwZW9mIGUmJmQudGV4dENvbnRlbnQhPT1cIlwiK2UmJihhPVtcImNoaWxkcmVuXCIsXCJcIitlXSk6Y2EuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWUmJlwib25TY3JvbGxcIj09PWcmJkcoXCJzY3JvbGxcIixkKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2NiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9XG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XG5lPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8WGUubGVuZ3RoO2UrKylHKFhlW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGEpO0coXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9XG5nYihhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dmIoYyxlKTt2YXIgaD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3RiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZvYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZwYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmcGIoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihjYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZHKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmcWEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtjYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcbmM9ZGgoY2guY3VycmVudCk7ZGgoYWguY3VycmVudCk7cmgoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFt3Zl09YixkLm5vZGVWYWx1ZSE9PWMmJihiLmZsYWdzfD00KSk6KGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW3dmXT1iLGIuc3RhdGVOb2RlPWQpfXJldHVybiBudWxsO2Nhc2UgMTM6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2M9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZyaChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoZCYmIWMmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShQLmN1cnJlbnQmMSkpMD09PVYmJihWPTMpO2Vsc2V7aWYoMD09PVZ8fDM9PT1WKVY9XG40O251bGw9PT1VfHwwPT09KERnJjEzNDIxNzcyNykmJjA9PT0oSGkmMTM0MjE3NzI3KXx8SWkoVSxXKX1pZihkfHxjKWIuZmxhZ3N8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLENpKGIpLG51bGw9PT1hJiZjZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMTk6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtmPTAhPT0oYi5mbGFncyY2NCk7Zz1kLnJlbmRlcmluZztpZihudWxsPT09ZylpZihmKUZpKGQsITEpO2Vsc2V7aWYoMCE9PVZ8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPWloKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD02NDtGaShkLCExKTtmPWcudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5mbGFnc3w9NCk7XG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcbmYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SShQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1kLnRhaWwmJk8oKT5KaSYmKGIuZmxhZ3N8PTY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMil9ZWxzZXtpZighZilpZihhPWloKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD02NCxmPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxGaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhbGgpcmV0dXJuIGI9Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMipPKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+SmkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9XG42NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpO2QuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxkLmxhc3Q9Zyl9cmV0dXJuIG51bGwhPT1kLnRhaWw/KGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPU8oKSxjLnNpYmxpbmc9bnVsbCxiPVAuY3VycmVudCxJKFAsZj9iJjF8MjpiJjEpLGMpOm51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09KG51bGwhPT1iLm1lbW9pemVkU3RhdGUpJiZcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCIhPT1kLm1vZGUmJihiLmZsYWdzfD00KSxudWxsfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UWEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIE5pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBQaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtRaXx8KFFpPSEwLFJpPWQpO05pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe05pKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1UaT9UaT1uZXcgU2V0KFt0aGlzXSk6VGkuYWRkKHRoaXMpLE5pKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfXZhciBVaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gWWkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOmI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve2lmKDM9PT0oYS50YWcmMykpe3ZhciBkPWEuY3JlYXRlO2EuZGVzdHJveT1kKCl9YT1hLm5leHR9d2hpbGUoYSE9PWIpfWI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve3ZhciBlPWE7ZD1lLm5leHQ7ZT1lLnRhZzswIT09KGUmNCkmJjAhPT0oZSYxKSYmKFppKGMsYSksJGkoYyxhKSk7YT1kfXdoaWxlKGEhPT1iKX1yZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7Yy5mbGFncyY0JiYobnVsbD09PWI/YS5jb21wb25lbnREaWRNb3VudCgpOihkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmxnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpLGEuY29tcG9uZW50RGlkVXBkYXRlKGQsXG5iLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSkpKTtiPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkVnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9RWcoYyxiLGEpfXJldHVybjtjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5mbGFncyY0JiZtZihjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJkNjKGMpKSkpO1xucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIGFqKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQ9ZC5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5zZXRQcm9wZXJ0eT9kLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmQuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zYihcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigoMjMhPT1jLnRhZyYmMjQhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8Yz09PWEpJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PVxuYSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXG5mKX1icmVhaztjYXNlIDU6VmkoYik7YnJlYWs7Y2FzZSA0OmNqKGEsYil9fWZ1bmN0aW9uIGRqKGEpe2EuYWx0ZXJuYXRlPW51bGw7YS5jaGlsZD1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5yZXR1cm49bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gZWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBmaihhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihlaihiKSlicmVhayBhO2I9Yi5yZXR1cm59dGhyb3cgRXJyb3IoeSgxNjApKTt9dmFyIGM9YjtiPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgxNjEpKTt9Yy5mbGFncyYxNiYmKHBiKGIsXCJcIiksYy5mbGFncyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGVqKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZmxhZ3MmMiljb250aW51ZSBiO2lmKG51bGw9PT1cbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cbmZ1bmN0aW9uIGdqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1qZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihnaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGhqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoaGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOyloaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXG44PT09Zy5ub2RlVHlwZT9nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaCk6Zy5yZW1vdmVDaGlsZChoKSk6ZS5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yy50YWcpe2lmKG51bGwhPT1jLmNoaWxkKXtlPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihiaihhLGMpLG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybjs0PT09Yy50YWcmJihkPSExKX1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGlqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjp2YXIgYz1iLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2RvIDM9PT0oZC50YWcmMykmJihhPWQuZGVzdHJveSxkLmRlc3Ryb3k9dm9pZCAwLHZvaWQgMCE9PWEmJmEoKSksZD1kLm5leHQ7d2hpbGUoZCE9PWMpfXJldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe2Q9Yi5tZW1vaXplZFByb3BzO3ZhciBlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3hmXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiYkYShjLGQpO3diKGEsZSk7Yj13YihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz1cbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XG5iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpjPWIuc3RhdGVOb2RlO2MuaHlkcmF0ZSYmKGMuaHlkcmF0ZT0hMSxDYyhjLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsIT09Yi5tZW1vaXplZFN0YXRlJiYoamo9TygpLGFqKGIuY2hpbGQsITApKTtraihiKTtyZXR1cm47Y2FzZSAxOTpraihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm47Y2FzZSAyMzpjYXNlIDI0OmFqKGIsbnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSk7cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fWZ1bmN0aW9uIGtqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IFVpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9bGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBtaihhLGIpe3JldHVybiBudWxsIT09YSYmKGE9YS5tZW1vaXplZFN0YXRlLG51bGw9PT1hfHxudWxsIT09YS5kZWh5ZHJhdGVkKT8oYj1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWImJm51bGw9PT1iLmRlaHlkcmF0ZWQpOiExfXZhciBuaj1NYXRoLmNlaWwsb2o9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixwaj1yYS5SZWFjdEN1cnJlbnRPd25lcixYPTAsVT1udWxsLFk9bnVsbCxXPTAscWo9MCxyaj1CZigwKSxWPTAsc2o9bnVsbCx0aj0wLERnPTAsSGk9MCx1aj0wLHZqPW51bGwsamo9MCxKaT1JbmZpbml0eTtmdW5jdGlvbiB3aigpe0ppPU8oKSs1MDB9dmFyIFo9bnVsbCxRaT0hMSxSaT1udWxsLFRpPW51bGwseGo9ITEseWo9bnVsbCx6aj05MCxBaj1bXSxCaj1bXSxDaj1udWxsLERqPTAsRWo9bnVsbCxGaj0tMSxHaj0wLEhqPTAsSWo9bnVsbCxKaj0hMTtmdW5jdGlvbiBIZygpe3JldHVybiAwIT09KFgmNDgpP08oKTotMSE9PUZqP0ZqOkZqPU8oKX1cbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxuZnVuY3Rpb24gSmcoYSxiLGMpe2lmKDUwPERqKXRocm93IERqPTAsRWo9bnVsbCxFcnJvcih5KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsPT09YSlyZXR1cm4gbnVsbDskYyhhLGIsYyk7YT09PVUmJihIaXw9Yiw0PT09ViYmSWkoYSxXKSk7dmFyIGQ9ZWcoKTsxPT09Yj8wIT09KFgmOCkmJjA9PT0oWCY0OCk/TGooYSk6KE1qKGEsYyksMD09PVgmJih3aigpLGlnKCkpKTooMD09PShYJjQpfHw5OCE9PWQmJjk5IT09ZHx8KG51bGw9PT1Daj9Daj1uZXcgU2V0KFthXSk6Q2ouYWRkKGEpKSxNaihhLGMpKTt2aj1hfWZ1bmN0aW9uIEtqKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIE1qKGEsYil7Zm9yKHZhciBjPWEuY2FsbGJhY2tOb2RlLGQ9YS5zdXNwZW5kZWRMYW5lcyxlPWEucGluZ2VkTGFuZXMsZj1hLmV4cGlyYXRpb25UaW1lcyxnPWEucGVuZGluZ0xhbmVzOzA8Zzspe3ZhciBoPTMxLVZjKGcpLGs9MTw8aCxsPWZbaF07aWYoLTE9PT1sKXtpZigwPT09KGsmZCl8fDAhPT0oayZlKSl7bD1iO1JjKGspO3ZhciBuPUY7ZltoXT0xMDw9bj9sKzI1MDo2PD1uP2wrNUUzOi0xfX1lbHNlIGw8PWImJihhLmV4cGlyZWRMYW5lc3w9ayk7ZyY9fmt9ZD1VYyhhLGE9PT1VP1c6MCk7Yj1GO2lmKDA9PT1kKW51bGwhPT1jJiYoYyE9PVpmJiZQZihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wKTtlbHNle2lmKG51bGwhPT1jKXtpZihhLmNhbGxiYWNrUHJpb3JpdHk9PT1iKXJldHVybjtjIT09WmYmJlBmKGMpfTE1PT09Yj8oYz1Mai5iaW5kKG51bGwsYSksbnVsbD09PWFnPyhhZz1bY10sYmc9T2YoVWYsamcpKTphZy5wdXNoKGMpLFxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBOaihhKXtGaj0tMTtIaj1Haj0wO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYj1hLmNhbGxiYWNrTm9kZTtpZihPaigpJiZhLmNhbGxiYWNrTm9kZSE9PWIpcmV0dXJuIG51bGw7dmFyIGM9VWMoYSxhPT09VT9XOjApO2lmKDA9PT1jKXJldHVybiBudWxsO3ZhciBkPWM7dmFyIGU9WDtYfD0xNjt2YXIgZj1QaigpO2lmKFUhPT1hfHxXIT09ZCl3aigpLFFqKGEsZCk7ZG8gdHJ5e1JqKCk7YnJlYWt9Y2F0Y2goaCl7U2ooYSxoKX13aGlsZSgxKTtxZygpO29qLmN1cnJlbnQ9ZjtYPWU7bnVsbCE9PVk/ZD0wOihVPW51bGwsVz0wLGQ9Vik7aWYoMCE9PSh0aiZIaSkpUWooYSwwKTtlbHNlIGlmKDAhPT1kKXsyPT09ZCYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxjPVdjKGEpLDAhPT1jJiYoZD1UaihhLGMpKSk7aWYoMT09PWQpdGhyb3cgYj1zaixRaihhLDApLElpKGEsYyksTWooYSxPKCkpLGI7YS5maW5pc2hlZFdvcms9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1jO3N3aXRjaChkKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHkoMzQ1KSk7Y2FzZSAyOlVqKGEpO2JyZWFrO2Nhc2UgMzpJaShhLGMpO2lmKChjJjYyOTE0NTYwKT09PWMmJihkPWpqKzUwMC1PKCksMTA8ZCkpe2lmKDAhPT1VYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZjKSE9PWMpe0hnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksZCk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA0OklpKGEsYyk7aWYoKGMmNDE4NjExMik9PT1jKWJyZWFrO2Q9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8Yzspe3ZhciBnPTMxLVZjKGMpO2Y9MTw8ZztnPWRbZ107Zz5lJiYoZT1nKTtjJj1+Zn1jPWU7Yz1PKCktYztjPSgxMjA+Yz8xMjA6NDgwPmM/NDgwOjEwODA+Yz8xMDgwOjE5MjA+Yz8xOTIwOjNFMz5jPzNFMzo0MzIwPlxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XG5mdW5jdGlvbiBMaihhKXtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7T2ooKTtpZihhPT09VSYmMCE9PShhLmV4cGlyZWRMYW5lcyZXKSl7dmFyIGI9Vzt2YXIgYz1UaihhLGIpOzAhPT0odGomSGkpJiYoYj1VYyhhLGIpLGM9VGooYSxiKSl9ZWxzZSBiPVVjKGEsMCksYz1UaihhLGIpOzAhPT1hLnRhZyYmMj09PWMmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYj1XYyhhKSwwIT09YiYmKGM9VGooYSxiKSkpO2lmKDE9PT1jKXRocm93IGM9c2osUWooYSwwKSxJaShhLGIpLE1qKGEsTygpKSxjO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7VWooYSk7TWooYSxPKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVmooKXtpZihudWxsIT09Q2ope3ZhciBhPUNqO0NqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuZXhwaXJlZExhbmVzfD0yNCZhLnBlbmRpbmdMYW5lcztNaihhLE8oKSl9KX1pZygpfWZ1bmN0aW9uIFdqKGEsYil7dmFyIGM9WDtYfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIFhqKGEsYil7dmFyIGM9WDtYJj0tMjtYfD04O3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIG5pKGEsYil7SShyaixxaik7cWp8PWI7dGp8PWJ9ZnVuY3Rpb24gS2koKXtxaj1yai5jdXJyZW50O0gocmopfVxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxuZnVuY3Rpb24gU2ooYSxiKXtkb3t2YXIgYz1ZO3RyeXtxZygpO3ZoLmN1cnJlbnQ9R2g7aWYoeWgpe2Zvcih2YXIgZD1SLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fXloPSExfXhoPTA7VD1TPVI9bnVsbDt6aD0hMTtwai5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vj0xO3NqPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9VztoLmZsYWdzfD0yMDQ4O2guZmlyc3RFZmZlY3Q9aC5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9aztpZigwPT09KGgubW9kZSYyKSl7dmFyIG49aC5hbHRlcm5hdGU7bj8oaC51cGRhdGVRdWV1ZT1uLnVwZGF0ZVF1ZXVlLGgubWVtb2l6ZWRTdGF0ZT1uLm1lbW9pemVkU3RhdGUsaC5sYW5lcz1uLmxhbmVzKTpcbihoLnVwZGF0ZVF1ZXVlPW51bGwsaC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBBPTAhPT0oUC5jdXJyZW50JjEpLHA9Zztkb3t2YXIgQztpZihDPTEzPT09cC50YWcpe3ZhciB4PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eClDPW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgdz1wLm1lbW9pemVkUHJvcHM7Qz12b2lkIDA9PT13LmZhbGxiYWNrPyExOiEwIT09dy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpBPyExOiEwfX1pZihDKXt2YXIgej1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgdT1uZXcgU2V0O3UuYWRkKGwpO3AudXBkYXRlUXVldWU9dX1lbHNlIHouYWRkKGwpO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmZsYWdzfD02NDtoLmZsYWdzfD0xNjM4NDtoLmZsYWdzJj0tMjk4MTtpZigxPT09aC50YWcpaWYobnVsbD09PWguYWx0ZXJuYXRlKWgudGFnPTE3O2Vsc2V7dmFyIHQ9emcoLTEsMSk7dC50YWc9MjtBZyhoLHQpfWgubGFuZXN8PTE7YnJlYWsgYX1rPVxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxuZztkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzpmPWs7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBKPVBpKHAsZixiKTtCZyhwLEopO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgSz1wLnR5cGUsUT1wLnN0YXRlTm9kZTtpZigwPT09KHAuZmxhZ3MmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEsuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09USYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFEuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoUSkpKSl7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBMPVNpKHAsZixiKTtCZyhwLEwpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVpqKGMpfWNhdGNoKHZhKXtiPXZhO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBQaigpe3ZhciBhPW9qLmN1cnJlbnQ7b2ouY3VycmVudD1HaDtyZXR1cm4gbnVsbD09PWE/R2g6YX1mdW5jdGlvbiBUaihhLGIpe3ZhciBjPVg7WHw9MTY7dmFyIGQ9UGooKTtVPT09YSYmVz09PWJ8fFFqKGEsYik7ZG8gdHJ5e2FrKCk7YnJlYWt9Y2F0Y2goZSl7U2ooYSxlKX13aGlsZSgxKTtxZygpO1g9Yztvai5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IoeSgyNjEpKTtVPW51bGw7Vz0wO3JldHVybiBWfWZ1bmN0aW9uIGFrKCl7Zm9yKDtudWxsIT09WTspYmsoWSl9ZnVuY3Rpb24gUmooKXtmb3IoO251bGwhPT1ZJiYhUWYoKTspYmsoWSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Y2soYS5hbHRlcm5hdGUsYSxxaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1pqKGEpOlk9Yjtwai5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YjphLmZpcnN0RWZmZWN0PWIsYS5sYXN0RWZmZWN0PWIpKX1lbHNle2M9TGkoYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTIwNDc7WT1jO3JldHVybn1udWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5mbGFnc3w9MjA0OCl9Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1WJiYoVj01KX1mdW5jdGlvbiBVaihhKXt2YXIgYj1lZygpO2dnKDk5LGRrLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRrKGEsYil7ZG8gT2ooKTt3aGlsZShudWxsIT09eWopO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yaztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IoeSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO3ZhciBkPWMubGFuZXN8Yy5jaGlsZExhbmVzLGU9ZCxmPWEucGVuZGluZ0xhbmVzJn5lO2EucGVuZGluZ0xhbmVzPWU7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9ZTthLm11dGFibGVSZWFkTGFuZXMmPWU7YS5lbnRhbmdsZWRMYW5lcyY9ZTtlPWEuZW50YW5nbGVtZW50cztmb3IodmFyIGc9YS5ldmVudFRpbWVzLGg9YS5leHBpcmF0aW9uVGltZXM7MDxmOyl7dmFyIGs9MzEtVmMoZiksbD0xPDxrO2Vba109MDtnW2tdPS0xO2hba109LTE7ZiY9fmx9bnVsbCE9PVxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcbmJyZWFrIGF9dmFyIG49MCxBPS0xLHA9LTEsQz0wLHg9MCx3PWcsej1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7dyE9PWh8fDAhPT1mJiYzIT09dy5ub2RlVHlwZXx8KEE9bitmKTt3IT09a3x8MCE9PWwmJjMhPT13Lm5vZGVUeXBlfHwocD1uK2wpOzM9PT13Lm5vZGVUeXBlJiYobis9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9dy5maXJzdENoaWxkKSlicmVhazt6PXc7dz11fWZvcig7Oyl7aWYodz09PWcpYnJlYWsgYjt6PT09aCYmKytDPT09ZiYmKEE9bik7ej09PWsmJisreD09PWwmJihwPW4pO2lmKG51bGwhPT0odT13Lm5leHRTaWJsaW5nKSlicmVhazt3PXo7ej13LnBhcmVudE5vZGV9dz11fWg9LTE9PT1BfHwtMT09PXA/bnVsbDp7c3RhcnQ6QSxlbmQ6cH19ZWxzZSBoPW51bGw7aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bGY9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7SWo9bnVsbDtKaj0hMTtaPWQ7ZG8gdHJ5e2VrKCl9Y2F0Y2godmEpe2lmKG51bGw9PT1cblopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7SWo9bnVsbDtaPWQ7ZG8gdHJ5e2ZvcihnPWE7bnVsbCE9PVo7KXt2YXIgdD1aLmZsYWdzO3QmMTYmJnBiKFouc3RhdGVOb2RlLFwiXCIpO2lmKHQmMTI4KXt2YXIgcT1aLmFsdGVybmF0ZTtpZihudWxsIT09cSl7dmFyIHY9cS5yZWY7bnVsbCE9PXYmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdj92KG51bGwpOnYuY3VycmVudD1udWxsKX19c3dpdGNoKHQmMTAzOCl7Y2FzZSAyOmZqKFopO1ouZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpmaihaKTtaLmZsYWdzJj0tMztpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDEwMjQ6Wi5mbGFncyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlouZmxhZ3MmPS0xMDI1O2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgNDppaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDg6aD1aO2NqKGcsaCk7dmFyIEo9aC5hbHRlcm5hdGU7ZGooaCk7bnVsbCE9PVxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxuZy5lbmQ/SjpNYXRoLm1pbihnLmVuZCxoKSwhdi5leHRlbmQmJko+ZyYmKGg9ZyxnPUosSj1oKSxoPUxlKHQsSiksZj1MZSh0LGcpLGgmJmYmJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1oLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09aC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09Zi5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpJiYocT1xLmNyZWF0ZVJhbmdlKCkscS5zZXRTdGFydChoLm5vZGUsaC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksSj5nPyh2LmFkZFJhbmdlKHEpLHYuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihxLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLHYuYWRkUmFuZ2UocSkpKSkpKTtxPVtdO2Zvcih2PXQ7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZxLnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdC5mb2N1cyYmdC5mb2N1cygpO2Zvcih0PVxuMDt0PHEubGVuZ3RoO3QrKyl2PXFbdF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9ZmQ9ISFrZjtsZj1rZj1udWxsO2EuY3VycmVudD1jO1o9ZDtkbyB0cnl7Zm9yKHQ9YTtudWxsIT09Wjspe3ZhciBLPVouZmxhZ3M7SyYzNiYmWWkodCxaLmFsdGVybmF0ZSxaKTtpZihLJjEyOCl7cT12b2lkIDA7dmFyIFE9Wi5yZWY7aWYobnVsbCE9PVEpe3ZhciBMPVouc3RhdGVOb2RlO3N3aXRjaChaLnRhZyl7Y2FzZSA1OnE9TDticmVhaztkZWZhdWx0OnE9TH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUT9RKHEpOlEuY3VycmVudD1xfX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO1o9bnVsbDskZigpO1g9ZX1lbHNlIGEuY3VycmVudD1jO2lmKHhqKXhqPSExLHlqPWEsemo9YjtlbHNlIGZvcihaPWQ7bnVsbCE9PVo7KWI9XG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWsoKXtmb3IoO251bGwhPT1aOyl7dmFyIGE9Wi5hbHRlcm5hdGU7Smp8fG51bGw9PT1Janx8KDAhPT0oWi5mbGFncyY4KT9kYyhaLElqKSYmKEpqPSEwKToxMz09PVoudGFnJiZtaihhLFopJiZkYyhaLElqKSYmKEpqPSEwKSk7dmFyIGI9Wi5mbGFnczswIT09KGImMjU2KSYmWGkoYSxaKTswPT09KGImNTEyKXx8eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSk7Wj1aLm5leHRFZmZlY3R9fWZ1bmN0aW9uIE9qKCl7aWYoOTAhPT16ail7dmFyIGE9OTc8emo/OTc6emo7emo9OTA7cmV0dXJuIGdnKGEsZmspfXJldHVybiExfWZ1bmN0aW9uICRpKGEsYil7QWoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfWZ1bmN0aW9uIFppKGEsYil7QmoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfVxuZnVuY3Rpb24gZmsoKXtpZihudWxsPT09eWopcmV0dXJuITE7dmFyIGE9eWo7eWo9bnVsbDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzMxKSk7dmFyIGI9WDtYfD0zMjt2YXIgYz1CajtCaj1bXTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBlPWNbZF0sZj1jW2QrMV0sZz1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyl0cnl7ZygpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Yz1BajtBaj1bXTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7ZT1jW2RdO2Y9Y1tkKzFdO3RyeXt2YXIgaD1lLmNyZWF0ZTtlLmRlc3Ryb3k9aCgpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Zm9yKGg9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1oOylhPWgubmV4dEVmZmVjdCxoLm5leHRFZmZlY3Q9bnVsbCxoLmZsYWdzJjgmJihoLnNpYmxpbmc9XG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cbmZ1bmN0aW9uIFdpKGEsYil7aWYoMz09PWEudGFnKWdrKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7Z2soYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXthPU1pKGIsYSk7dmFyIGU9U2koYyxhLDEpO0FnKGMsZSk7ZT1IZygpO2M9S2ooYywxKTtpZihudWxsIT09YykkYyhjLDEsZSksTWooYyxlKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl0cnl7ZC5jb21wb25lbnREaWRDYXRjaChiLGEpfWNhdGNoKGYpe31icmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBZaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7VT09PWEmJihXJmMpPT09YyYmKDQ9PT1WfHwzPT09ViYmKFcmNjI5MTQ1NjApPT09VyYmNTAwPk8oKS1qaj9RaihhLDApOnVqfD1jKTtNaihhLGIpfWZ1bmN0aW9uIGxqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9YS5tb2RlLDA9PT0oYiYyKT9iPTE6MD09PShiJjQpP2I9OTk9PT1lZygpPzE6MjooMD09PUdqJiYoR2o9dGopLGI9WWMoNjI5MTQ1NjAmfkdqKSwwPT09YiYmKGI9NDE5NDMwNCkpKTtjPUhnKCk7YT1LaihhLGIpO251bGwhPT1hJiYoJGMoYSxiLGMpLE1qKGEsYykpfXZhciBjaztcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cbmI/Yi5zaWJsaW5nOm51bGx9SShQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjY0KSl7aWYoZClyZXR1cm4gQWkoYSxiLGMpO2IuZmxhZ3N8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SShQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gYi5sYW5lcz0wLG1pKGEsYixjKX1yZXR1cm4gaGkoYSxiLGMpfWVsc2UgdWc9ITE7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLE0uY3VycmVudCk7dGcoYixjKTtlPUNoKG51bGwsYixkLGEsZSxjKTtiLmZsYWdzfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihGZihkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7eGcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkdnKGIsZCxnLGEpO2UudXBkYXRlcj1LZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxzPWI7T2coYixkLGEsYyk7Yj1xaShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxmaShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7XG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcbmQ9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZyhhLGIpO0NnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpc2goKSxiPWhpKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZj1lLmh5ZHJhdGUpa2g9cmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxqaD1iLGY9bGg9ITA7aWYoZil7YT1lLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE7aWYobnVsbCE9YSlmb3IoZT0wO2U8YS5sZW5ndGg7ZSs9MilmPWFbZV0sZi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1hW2UrMV0sdGgucHVzaChmKTtjPVpnKGIsbnVsbCxkLGMpO2ZvcihiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDEwMjQsYz1jLnNpYmxpbmd9ZWxzZSBmaShhLGIsZCxjKSxzaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGdoKGIpLG51bGw9PT1hJiZcbnBoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sbmYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJm5mKGQsZikmJihiLmZsYWdzfD0xNiksb2koYSxiKSxmaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJnBoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gdGkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WWcoYixudWxsLGQsYyk6ZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGdpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XG5rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9emcoLTEsYyYtYyksbC50YWc9MixBZyhoLGwpKTtoLmxhbmVzfD1jO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJihsLmxhbmVzfD1jKTtzZyhoLnJldHVybixjKTtrLmxhbmVzfD1jO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9ZmkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdGcoYixjKSxlPXZnKGUsXG5mLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZmxhZ3N8PTEsZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWxnKGUsYi5wZW5kaW5nUHJvcHMpLGY9bGcoZS50eXBlLGYpLGlpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBraShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLEZmKGQpPyhhPSEwLEpmKGIpKTphPSExLHRnKGIsYyksTWcoYixkLGUpLE9nKGIsZCxlLGMpLHFpKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gQWkoYSxiLGMpO2Nhc2UgMjM6cmV0dXJuIG1pKGEsYixjKTtjYXNlIDI0OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTtcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIGhrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBqaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QWEpcmV0dXJuIDExO2lmKGE9PT1EYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5oKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlqaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm4gWGcoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBIYTpnPTg7ZXw9MTY7YnJlYWs7Y2FzZSB3YTpnPTg7ZXw9MTticmVhaztjYXNlIHhhOnJldHVybiBhPW5oKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9eGEsYS50eXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQmE6cmV0dXJuIGE9bmgoMTMsYyxiLGUpLGEudHlwZT1CYSxhLmVsZW1lbnRUeXBlPUJhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9bmgoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gdmkoYyxlLGYsYik7Y2FzZSBKYTpyZXR1cm4gYT1uaCgyNCxjLGIsZSksYS5lbGVtZW50VHlwZT1KYSxhLmxhbmVzPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSB6YTpnPTk7YnJlYWsgYTtjYXNlIEFhOmc9MTE7YnJlYWsgYTtjYXNlIERhOmc9MTQ7YnJlYWsgYTtjYXNlIEVhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBGYTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFhnKGEsYixjLGQpe2E9bmgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHZpKGEsYixjLGQpe2E9bmgoMjMsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIFVnKGEsYixjKXthPW5oKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gamsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9WmMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9WmMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9WmMoMCk7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9XG5mdW5jdGlvbiBrayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOnRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cbmQmJihiLmNhbGxiYWNrPWQpO0FnKGUsYik7SmcoZSxnLGYpO3JldHVybiBnfWZ1bmN0aW9uIG1rKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gbmsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIG9rKGEsYil7bmsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJm5rKGEsYil9ZnVuY3Rpb24gcGsoKXtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHFrKGEsYixjKXt2YXIgZD1udWxsIT1jJiZudWxsIT1jLmh5ZHJhdGlvbk9wdGlvbnMmJmMuaHlkcmF0aW9uT3B0aW9ucy5tdXRhYmxlU291cmNlc3x8bnVsbDtjPW5ldyBqayhhLGIsbnVsbCE9YyYmITA9PT1jLmh5ZHJhdGUpO2I9bmgoMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2MuY3VycmVudD1iO2Iuc3RhdGVOb2RlPWM7eGcoYik7YVtmZl09Yy5jdXJyZW50O2NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspe2I9ZFthXTt2YXIgZT1iLl9nZXRWZXJzaW9uO2U9ZShiLl9zb3VyY2UpO251bGw9PWMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2IsZV06Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYixlKX10aGlzLl9pbnRlcm5hbFJvb3Q9Y31cbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIHNrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcWsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiB0ayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2guY2FsbChhKX19bGsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtrLmNhbGwoYSl9fVhqKGZ1bmN0aW9uKCl7bGsoYixnLGEsZSl9KX1yZXR1cm4gbWsoZyl9ZWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDQsYik7b2soYSw0KX19O2ZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw2NzEwODg2NCxiKTtvayhhLDY3MTA4ODY0KX19O1xuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHkoOTApKTtXYShkKTthYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9V2o7XG5IYj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVg7WHw9NDt0cnl7cmV0dXJuIGdnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1g9ZiwwPT09WCYmKHdqKCksaWcoKSl9fTtJYj1mdW5jdGlvbigpezA9PT0oWCY0OSkmJihWaigpLE9qKCkpfTtKYj1mdW5jdGlvbihhLGIpe3ZhciBjPVg7WHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX07ZnVuY3Rpb24gdWsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4ga2soYSxiLG51bGwsYyl9dmFyIHZrPXtFdmVudHM6W0NiLHVlLERiLEViLEZiLE9qLHtjdXJyZW50OiExfV19LHdrPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE3LjAuMVwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxucGssZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB5az1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXlrLmlzRGlzYWJsZWQmJnlrLnN1cHBvcnRzRmliZXIpdHJ5e0xmPXlrLmluamVjdCh4ayksTWY9eWt9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXZrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPXVrO1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih5KDE4OCkpO3Rocm93IEVycm9yKHkoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9Y2MoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe3ZhciBjPVg7aWYoMCE9PShjJjQ4KSlyZXR1cm4gYShiKTtYfD0xO3RyeXtpZihhKXJldHVybiBnZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtYPWMsaWcoKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFyayhjKSl0aHJvdyBFcnJvcih5KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHkoMzgpKTtyZXR1cm4gdGsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG5cdFx0ZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGU7IH07XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImltcG9ydCBvYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7XG4gIHZhciBrZXksIGk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldO1xuICAgICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5leHBvcnQgdmFyIGlzQnJvd3NlciA9ICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yod2luZG93KSkgPT09IFwib2JqZWN0XCIgJiYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKGRvY3VtZW50KSkgPT09ICdvYmplY3QnICYmIGRvY3VtZW50Lm5vZGVUeXBlID09PSA5O1xuXG5leHBvcnQgZGVmYXVsdCBpc0Jyb3dzZXI7XG4iLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZlwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgaXNJbkJyb3dzZXIgZnJvbSAnaXMtaW4tYnJvd3Nlcic7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuXG52YXIgcGxhaW5PYmplY3RDb25zdHJ1cmN0b3IgPSB7fS5jb25zdHJ1Y3RvcjtcbmZ1bmN0aW9uIGNsb25lU3R5bGUoc3R5bGUpIHtcbiAgaWYgKHN0eWxlID09IG51bGwgfHwgdHlwZW9mIHN0eWxlICE9PSAnb2JqZWN0JykgcmV0dXJuIHN0eWxlO1xuICBpZiAoQXJyYXkuaXNBcnJheShzdHlsZSkpIHJldHVybiBzdHlsZS5tYXAoY2xvbmVTdHlsZSk7XG4gIGlmIChzdHlsZS5jb25zdHJ1Y3RvciAhPT0gcGxhaW5PYmplY3RDb25zdHJ1cmN0b3IpIHJldHVybiBzdHlsZTtcbiAgdmFyIG5ld1N0eWxlID0ge307XG5cbiAgZm9yICh2YXIgbmFtZSBpbiBzdHlsZSkge1xuICAgIG5ld1N0eWxlW25hbWVdID0gY2xvbmVTdHlsZShzdHlsZVtuYW1lXSk7XG4gIH1cblxuICByZXR1cm4gbmV3U3R5bGU7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcnVsZSBpbnN0YW5jZS5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVSdWxlKG5hbWUsIGRlY2wsIG9wdGlvbnMpIHtcbiAgaWYgKG5hbWUgPT09IHZvaWQgMCkge1xuICAgIG5hbWUgPSAndW5uYW1lZCc7XG4gIH1cblxuICB2YXIganNzID0gb3B0aW9ucy5qc3M7XG4gIHZhciBkZWNsQ29weSA9IGNsb25lU3R5bGUoZGVjbCk7XG4gIHZhciBydWxlID0ganNzLnBsdWdpbnMub25DcmVhdGVSdWxlKG5hbWUsIGRlY2xDb3B5LCBvcHRpb25zKTtcbiAgaWYgKHJ1bGUpIHJldHVybiBydWxlOyAvLyBJdCBpcyBhbiBhdC1ydWxlIGFuZCBpdCBoYXMgbm8gaW5zdGFuY2UuXG5cbiAgaWYgKG5hbWVbMF0gPT09ICdAJykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gVW5rbm93biBydWxlIFwiICsgbmFtZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxudmFyIGpvaW4gPSBmdW5jdGlvbiBqb2luKHZhbHVlLCBieSkge1xuICB2YXIgcmVzdWx0ID0gJyc7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykge1xuICAgIC8vIFJlbW92ZSAhaW1wb3J0YW50IGZyb20gdGhlIHZhbHVlLCBpdCB3aWxsIGJlIHJlYWRkZWQgbGF0ZXIuXG4gICAgaWYgKHZhbHVlW2ldID09PSAnIWltcG9ydGFudCcpIGJyZWFrO1xuICAgIGlmIChyZXN1bHQpIHJlc3VsdCArPSBieTtcbiAgICByZXN1bHQgKz0gdmFsdWVbaV07XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhcnJheSB2YWx1ZXMgdG8gc3RyaW5nLlxuICpcbiAqIGBtYXJnaW46IFtbJzVweCcsICcxMHB4J11dYCA+IGBtYXJnaW46IDVweCAxMHB4O2BcbiAqIGBib3JkZXI6IFsnMXB4JywgJzJweCddYCA+IGBib3JkZXI6IDFweCwgMnB4O2BcbiAqIGBtYXJnaW46IFtbJzVweCcsICcxMHB4J10sICchaW1wb3J0YW50J11gID4gYG1hcmdpbjogNXB4IDEwcHggIWltcG9ydGFudDtgXG4gKiBgY29sb3I6IFsncmVkJywgIWltcG9ydGFudF1gID4gYGNvbG9yOiByZWQgIWltcG9ydGFudDtgXG4gKi9cbnZhciB0b0Nzc1ZhbHVlID0gZnVuY3Rpb24gdG9Dc3NWYWx1ZSh2YWx1ZSwgaWdub3JlSW1wb3J0YW50KSB7XG4gIGlmIChpZ25vcmVJbXBvcnRhbnQgPT09IHZvaWQgMCkge1xuICAgIGlnbm9yZUltcG9ydGFudCA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICB2YXIgY3NzVmFsdWUgPSAnJzsgLy8gU3VwcG9ydCBzcGFjZSBzZXBhcmF0ZWQgdmFsdWVzIHZpYSBgW1snNXB4JywgJzEwcHgnXV1gLlxuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlWzBdKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh2YWx1ZVtpXSA9PT0gJyFpbXBvcnRhbnQnKSBicmVhaztcbiAgICAgIGlmIChjc3NWYWx1ZSkgY3NzVmFsdWUgKz0gJywgJztcbiAgICAgIGNzc1ZhbHVlICs9IGpvaW4odmFsdWVbaV0sICcgJyk7XG4gICAgfVxuICB9IGVsc2UgY3NzVmFsdWUgPSBqb2luKHZhbHVlLCAnLCAnKTsgLy8gQWRkICFpbXBvcnRhbnQsIGJlY2F1c2UgaXQgd2FzIGlnbm9yZWQuXG5cblxuICBpZiAoIWlnbm9yZUltcG9ydGFudCAmJiB2YWx1ZVt2YWx1ZS5sZW5ndGggLSAxXSA9PT0gJyFpbXBvcnRhbnQnKSB7XG4gICAgY3NzVmFsdWUgKz0gJyAhaW1wb3J0YW50JztcbiAgfVxuXG4gIHJldHVybiBjc3NWYWx1ZTtcbn07XG5cbi8qKlxuICogSW5kZW50IGEgc3RyaW5nLlxuICogaHR0cDovL2pzcGVyZi5jb20vYXJyYXktam9pbi12cy1mb3JcbiAqL1xuZnVuY3Rpb24gaW5kZW50U3RyKHN0ciwgaW5kZW50KSB7XG4gIHZhciByZXN1bHQgPSAnJztcblxuICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgaW5kZW50OyBpbmRleCsrKSB7XG4gICAgcmVzdWx0ICs9ICcgICc7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0ICsgc3RyO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIFJ1bGUgdG8gQ1NTIHN0cmluZy5cbiAqL1xuXG5cbmZ1bmN0aW9uIHRvQ3NzKHNlbGVjdG9yLCBzdHlsZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAoIXN0eWxlKSByZXR1cm4gcmVzdWx0O1xuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkaW5kZW50ID0gX29wdGlvbnMuaW5kZW50LFxuICAgICAgaW5kZW50ID0gX29wdGlvbnMkaW5kZW50ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkaW5kZW50O1xuICB2YXIgZmFsbGJhY2tzID0gc3R5bGUuZmFsbGJhY2tzO1xuICBpZiAoc2VsZWN0b3IpIGluZGVudCsrOyAvLyBBcHBseSBmYWxsYmFja3MgZmlyc3QuXG5cbiAgaWYgKGZhbGxiYWNrcykge1xuICAgIC8vIEFycmF5IHN5bnRheCB7ZmFsbGJhY2tzOiBbe3Byb3A6IHZhbHVlfV19XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmFsbGJhY2tzKSkge1xuICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGZhbGxiYWNrcy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgdmFyIGZhbGxiYWNrID0gZmFsbGJhY2tzW2luZGV4XTtcblxuICAgICAgICBmb3IgKHZhciBwcm9wIGluIGZhbGxiYWNrKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gZmFsbGJhY2tbcHJvcF07XG5cbiAgICAgICAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkgcmVzdWx0ICs9ICdcXG4nO1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwiXCIgKyBpbmRlbnRTdHIocHJvcCArIFwiOiBcIiArIHRvQ3NzVmFsdWUodmFsdWUpICsgXCI7XCIsIGluZGVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE9iamVjdCBzeW50YXgge2ZhbGxiYWNrczoge3Byb3A6IHZhbHVlfX1cbiAgICAgIGZvciAodmFyIF9wcm9wIGluIGZhbGxiYWNrcykge1xuICAgICAgICB2YXIgX3ZhbHVlID0gZmFsbGJhY2tzW19wcm9wXTtcblxuICAgICAgICBpZiAoX3ZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgICBpZiAocmVzdWx0KSByZXN1bHQgKz0gJ1xcbic7XG4gICAgICAgICAgcmVzdWx0ICs9IFwiXCIgKyBpbmRlbnRTdHIoX3Byb3AgKyBcIjogXCIgKyB0b0Nzc1ZhbHVlKF92YWx1ZSkgKyBcIjtcIiwgaW5kZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIF9wcm9wMiBpbiBzdHlsZSkge1xuICAgIHZhciBfdmFsdWUyID0gc3R5bGVbX3Byb3AyXTtcblxuICAgIGlmIChfdmFsdWUyICE9IG51bGwgJiYgX3Byb3AyICE9PSAnZmFsbGJhY2tzJykge1xuICAgICAgaWYgKHJlc3VsdCkgcmVzdWx0ICs9ICdcXG4nO1xuICAgICAgcmVzdWx0ICs9IFwiXCIgKyBpbmRlbnRTdHIoX3Byb3AyICsgXCI6IFwiICsgdG9Dc3NWYWx1ZShfdmFsdWUyKSArIFwiO1wiLCBpbmRlbnQpO1xuICAgIH1cbiAgfSAvLyBBbGxvdyBlbXB0eSBzdHlsZSBpbiB0aGlzIGNhc2UsIGJlY2F1c2UgcHJvcGVydGllcyB3aWxsIGJlIGFkZGVkIGR5bmFtaWNhbGx5LlxuXG5cbiAgaWYgKCFyZXN1bHQgJiYgIW9wdGlvbnMuYWxsb3dFbXB0eSkgcmV0dXJuIHJlc3VsdDsgLy8gV2hlbiBydWxlIGlzIGJlaW5nIHN0cmluZ2lmaWVkIGJlZm9yZSBzZWxlY3RvciB3YXMgZGVmaW5lZC5cblxuICBpZiAoIXNlbGVjdG9yKSByZXR1cm4gcmVzdWx0O1xuICBpbmRlbnQtLTtcbiAgaWYgKHJlc3VsdCkgcmVzdWx0ID0gXCJcXG5cIiArIHJlc3VsdCArIFwiXFxuXCI7XG4gIHJldHVybiBpbmRlbnRTdHIoc2VsZWN0b3IgKyBcIiB7XCIgKyByZXN1bHQsIGluZGVudCkgKyBpbmRlbnRTdHIoJ30nLCBpbmRlbnQpO1xufVxuXG52YXIgZXNjYXBlUmVnZXggPSAvKFtbXFxdLiMqJD48K349fF46KCksXCInYFxcc10pL2c7XG52YXIgbmF0aXZlRXNjYXBlID0gdHlwZW9mIENTUyAhPT0gJ3VuZGVmaW5lZCcgJiYgQ1NTLmVzY2FwZTtcbnZhciBlc2NhcGUgPSAoZnVuY3Rpb24gKHN0cikge1xuICByZXR1cm4gbmF0aXZlRXNjYXBlID8gbmF0aXZlRXNjYXBlKHN0cikgOiBzdHIucmVwbGFjZShlc2NhcGVSZWdleCwgJ1xcXFwkMScpO1xufSk7XG5cbnZhciBCYXNlU3R5bGVSdWxlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQmFzZVN0eWxlUnVsZShrZXksIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ3N0eWxlJztcbiAgICB0aGlzLmtleSA9IHZvaWQgMDtcbiAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2U7XG4gICAgdGhpcy5zdHlsZSA9IHZvaWQgMDtcbiAgICB0aGlzLnJlbmRlcmVyID0gdm9pZCAwO1xuICAgIHRoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdmFyIHNoZWV0ID0gb3B0aW9ucy5zaGVldCxcbiAgICAgICAgUmVuZGVyZXIgPSBvcHRpb25zLlJlbmRlcmVyO1xuICAgIHRoaXMua2V5ID0ga2V5O1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5zdHlsZSA9IHN0eWxlO1xuICAgIGlmIChzaGVldCkgdGhpcy5yZW5kZXJlciA9IHNoZWV0LnJlbmRlcmVyO2Vsc2UgaWYgKFJlbmRlcmVyKSB0aGlzLnJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKCk7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBvciBzZXQgYSBzdHlsZSBwcm9wZXJ0eS5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gQmFzZVN0eWxlUnVsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnByb3AgPSBmdW5jdGlvbiBwcm9wKG5hbWUsIHZhbHVlLCBvcHRpb25zKSB7XG4gICAgLy8gSXQncyBhIGdldHRlci5cbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHRoaXMuc3R5bGVbbmFtZV07IC8vIERvbid0IGRvIGFueXRoaW5nIGlmIHRoZSB2YWx1ZSBoYXMgbm90IGNoYW5nZWQuXG5cbiAgICB2YXIgZm9yY2UgPSBvcHRpb25zID8gb3B0aW9ucy5mb3JjZSA6IGZhbHNlO1xuICAgIGlmICghZm9yY2UgJiYgdGhpcy5zdHlsZVtuYW1lXSA9PT0gdmFsdWUpIHJldHVybiB0aGlzO1xuICAgIHZhciBuZXdWYWx1ZSA9IHZhbHVlO1xuXG4gICAgaWYgKCFvcHRpb25zIHx8IG9wdGlvbnMucHJvY2VzcyAhPT0gZmFsc2UpIHtcbiAgICAgIG5ld1ZhbHVlID0gdGhpcy5vcHRpb25zLmpzcy5wbHVnaW5zLm9uQ2hhbmdlVmFsdWUodmFsdWUsIG5hbWUsIHRoaXMpO1xuICAgIH1cblxuICAgIHZhciBpc0VtcHR5ID0gbmV3VmFsdWUgPT0gbnVsbCB8fCBuZXdWYWx1ZSA9PT0gZmFsc2U7XG4gICAgdmFyIGlzRGVmaW5lZCA9IG5hbWUgaW4gdGhpcy5zdHlsZTsgLy8gVmFsdWUgaXMgZW1wdHkgYW5kIHdhc24ndCBkZWZpbmVkIGJlZm9yZS5cblxuICAgIGlmIChpc0VtcHR5ICYmICFpc0RlZmluZWQgJiYgIWZvcmNlKSByZXR1cm4gdGhpczsgLy8gV2UgYXJlIGdvaW5nIHRvIHJlbW92ZSB0aGlzIHZhbHVlLlxuXG4gICAgdmFyIHJlbW92ZSA9IGlzRW1wdHkgJiYgaXNEZWZpbmVkO1xuICAgIGlmIChyZW1vdmUpIGRlbGV0ZSB0aGlzLnN0eWxlW25hbWVdO2Vsc2UgdGhpcy5zdHlsZVtuYW1lXSA9IG5ld1ZhbHVlOyAvLyBSZW5kZXJhYmxlIGlzIGRlZmluZWQgaWYgU3R5bGVTaGVldCBvcHRpb24gYGxpbmtgIGlzIHRydWUuXG5cbiAgICBpZiAodGhpcy5yZW5kZXJhYmxlICYmIHRoaXMucmVuZGVyZXIpIHtcbiAgICAgIGlmIChyZW1vdmUpIHRoaXMucmVuZGVyZXIucmVtb3ZlUHJvcGVydHkodGhpcy5yZW5kZXJhYmxlLCBuYW1lKTtlbHNlIHRoaXMucmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5yZW5kZXJhYmxlLCBuYW1lLCBuZXdWYWx1ZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB2YXIgc2hlZXQgPSB0aGlzLm9wdGlvbnMuc2hlZXQ7XG5cbiAgICBpZiAoc2hlZXQgJiYgc2hlZXQuYXR0YWNoZWQpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdbSlNTXSBSdWxlIGlzIG5vdCBsaW5rZWQuIE1pc3Npbmcgc2hlZXQgb3B0aW9uIFwibGluazogdHJ1ZVwiLicpIDogdm9pZCAwO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHJldHVybiBCYXNlU3R5bGVSdWxlO1xufSgpO1xudmFyIFN0eWxlUnVsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0Jhc2VTdHlsZVJ1bGUpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3R5bGVSdWxlLCBfQmFzZVN0eWxlUnVsZSk7XG5cbiAgZnVuY3Rpb24gU3R5bGVSdWxlKGtleSwgc3R5bGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9CYXNlU3R5bGVSdWxlLmNhbGwodGhpcywga2V5LCBzdHlsZSwgb3B0aW9ucykgfHwgdGhpcztcbiAgICBfdGhpcy5zZWxlY3RvclRleHQgPSB2b2lkIDA7XG4gICAgX3RoaXMuaWQgPSB2b2lkIDA7XG4gICAgX3RoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICB2YXIgc2VsZWN0b3IgPSBvcHRpb25zLnNlbGVjdG9yLFxuICAgICAgICBzY29wZWQgPSBvcHRpb25zLnNjb3BlZCxcbiAgICAgICAgc2hlZXQgPSBvcHRpb25zLnNoZWV0LFxuICAgICAgICBnZW5lcmF0ZUlkID0gb3B0aW9ucy5nZW5lcmF0ZUlkO1xuXG4gICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICBfdGhpcy5zZWxlY3RvclRleHQgPSBzZWxlY3RvcjtcbiAgICB9IGVsc2UgaWYgKHNjb3BlZCAhPT0gZmFsc2UpIHtcbiAgICAgIF90aGlzLmlkID0gZ2VuZXJhdGVJZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKSwgc2hlZXQpO1xuICAgICAgX3RoaXMuc2VsZWN0b3JUZXh0ID0gXCIuXCIgKyBlc2NhcGUoX3RoaXMuaWQpO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICAvKipcbiAgICogU2V0IHNlbGVjdG9yIHN0cmluZy5cbiAgICogQXR0ZW50aW9uOiB1c2UgdGhpcyB3aXRoIGNhdXRpb24uIE1vc3QgYnJvd3NlcnMgZGlkbid0IGltcGxlbWVudFxuICAgKiBzZWxlY3RvclRleHQgc2V0dGVyLCBzbyB0aGlzIG1heSByZXN1bHQgaW4gcmVyZW5kZXJpbmcgb2YgZW50aXJlIFN0eWxlIFNoZWV0LlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8yID0gU3R5bGVSdWxlLnByb3RvdHlwZTtcblxuICAvKipcbiAgICogQXBwbHkgcnVsZSB0byBhbiBlbGVtZW50IGlubGluZS5cbiAgICovXG4gIF9wcm90bzIuYXBwbHlUbyA9IGZ1bmN0aW9uIGFwcGx5VG8ocmVuZGVyYWJsZSkge1xuICAgIHZhciByZW5kZXJlciA9IHRoaXMucmVuZGVyZXI7XG5cbiAgICBpZiAocmVuZGVyZXIpIHtcbiAgICAgIHZhciBqc29uID0gdGhpcy50b0pTT04oKTtcblxuICAgICAgZm9yICh2YXIgcHJvcCBpbiBqc29uKSB7XG4gICAgICAgIHJlbmRlcmVyLnNldFByb3BlcnR5KHJlbmRlcmFibGUsIHByb3AsIGpzb25bcHJvcF0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhlIHJ1bGUuXG4gICAqIEZhbGxiYWNrcyBhcmUgbm90IHN1cHBvcnRlZC5cbiAgICogVXNlZnVsIGZvciBpbmxpbmUgc3R5bGVzLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90bzIudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHZhciBqc29uID0ge307XG5cbiAgICBmb3IgKHZhciBwcm9wIGluIHRoaXMuc3R5bGUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXMuc3R5bGVbcHJvcF07XG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JykganNvbltwcm9wXSA9IHZhbHVlO2Vsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSBqc29uW3Byb3BdID0gdG9Dc3NWYWx1ZSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGpzb247XG4gIH1cbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBhIENTUyBzdHJpbmcuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvMi50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICB2YXIgc2hlZXQgPSB0aGlzLm9wdGlvbnMuc2hlZXQ7XG4gICAgdmFyIGxpbmsgPSBzaGVldCA/IHNoZWV0Lm9wdGlvbnMubGluayA6IGZhbHNlO1xuICAgIHZhciBvcHRzID0gbGluayA/IF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBhbGxvd0VtcHR5OiB0cnVlXG4gICAgfSkgOiBvcHRpb25zO1xuICAgIHJldHVybiB0b0Nzcyh0aGlzLnNlbGVjdG9yVGV4dCwgdGhpcy5zdHlsZSwgb3B0cyk7XG4gIH07XG5cbiAgX2NyZWF0ZUNsYXNzKFN0eWxlUnVsZSwgW3tcbiAgICBrZXk6IFwic2VsZWN0b3JcIixcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChzZWxlY3Rvcikge1xuICAgICAgaWYgKHNlbGVjdG9yID09PSB0aGlzLnNlbGVjdG9yVGV4dCkgcmV0dXJuO1xuICAgICAgdGhpcy5zZWxlY3RvclRleHQgPSBzZWxlY3RvcjtcbiAgICAgIHZhciByZW5kZXJlciA9IHRoaXMucmVuZGVyZXIsXG4gICAgICAgICAgcmVuZGVyYWJsZSA9IHRoaXMucmVuZGVyYWJsZTtcbiAgICAgIGlmICghcmVuZGVyYWJsZSB8fCAhcmVuZGVyZXIpIHJldHVybjtcbiAgICAgIHZhciBoYXNDaGFuZ2VkID0gcmVuZGVyZXIuc2V0U2VsZWN0b3IocmVuZGVyYWJsZSwgc2VsZWN0b3IpOyAvLyBJZiBzZWxlY3RvciBzZXR0ZXIgaXMgbm90IGltcGxlbWVudGVkLCByZXJlbmRlciB0aGUgcnVsZS5cblxuICAgICAgaWYgKCFoYXNDaGFuZ2VkKSB7XG4gICAgICAgIHJlbmRlcmVyLnJlcGxhY2VSdWxlKHJlbmRlcmFibGUsIHRoaXMpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgc2VsZWN0b3Igc3RyaW5nLlxuICAgICAqL1xuICAgICxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNlbGVjdG9yVGV4dDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU3R5bGVSdWxlO1xufShCYXNlU3R5bGVSdWxlKTtcbnZhciBwbHVnaW5TdHlsZVJ1bGUgPSB7XG4gIG9uQ3JlYXRlUnVsZTogZnVuY3Rpb24gb25DcmVhdGVSdWxlKG5hbWUsIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgaWYgKG5hbWVbMF0gPT09ICdAJyB8fCBvcHRpb25zLnBhcmVudCAmJiBvcHRpb25zLnBhcmVudC50eXBlID09PSAna2V5ZnJhbWVzJykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBTdHlsZVJ1bGUobmFtZSwgc3R5bGUsIG9wdGlvbnMpO1xuICB9XG59O1xuXG52YXIgZGVmYXVsdFRvU3RyaW5nT3B0aW9ucyA9IHtcbiAgaW5kZW50OiAxLFxuICBjaGlsZHJlbjogdHJ1ZVxufTtcbnZhciBhdFJlZ0V4cCA9IC9AKFtcXHctXSspLztcbi8qKlxuICogQ29uZGl0aW9uYWwgcnVsZSBmb3IgQG1lZGlhLCBAc3VwcG9ydHNcbiAqL1xuXG52YXIgQ29uZGl0aW9uYWxSdWxlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29uZGl0aW9uYWxSdWxlKGtleSwgc3R5bGVzLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ2NvbmRpdGlvbmFsJztcbiAgICB0aGlzLmF0ID0gdm9pZCAwO1xuICAgIHRoaXMua2V5ID0gdm9pZCAwO1xuICAgIHRoaXMucXVlcnkgPSB2b2lkIDA7XG4gICAgdGhpcy5ydWxlcyA9IHZvaWQgMDtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdGhpcy5pc1Byb2Nlc3NlZCA9IGZhbHNlO1xuICAgIHRoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB2YXIgYXRNYXRjaCA9IGtleS5tYXRjaChhdFJlZ0V4cCk7XG4gICAgdGhpcy5hdCA9IGF0TWF0Y2ggPyBhdE1hdGNoWzFdIDogJ3Vua25vd24nOyAvLyBLZXkgbWlnaHQgY29udGFpbiBhIHVuaXF1ZSBzdWZmaXggaW4gY2FzZSB0aGUgYG5hbWVgIHBhc3NlZCBieSB1c2VyIHdhcyBkdXBsaWNhdGUuXG5cbiAgICB0aGlzLnF1ZXJ5ID0gb3B0aW9ucy5uYW1lIHx8IFwiQFwiICsgdGhpcy5hdDtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMucnVsZXMgPSBuZXcgUnVsZUxpc3QoX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIHBhcmVudDogdGhpc1xuICAgIH0pKTtcblxuICAgIGZvciAodmFyIG5hbWUgaW4gc3R5bGVzKSB7XG4gICAgICB0aGlzLnJ1bGVzLmFkZChuYW1lLCBzdHlsZXNbbmFtZV0pO1xuICAgIH1cblxuICAgIHRoaXMucnVsZXMucHJvY2VzcygpO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYSBydWxlLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBDb25kaXRpb25hbFJ1bGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5nZXRSdWxlID0gZnVuY3Rpb24gZ2V0UnVsZShuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZXMuZ2V0KG5hbWUpO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgaW5kZXggb2YgYSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZihydWxlKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZXMuaW5kZXhPZihydWxlKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGFuZCByZWdpc3RlciBydWxlLCBydW4gcGx1Z2lucy5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uYWRkUnVsZSA9IGZ1bmN0aW9uIGFkZFJ1bGUobmFtZSwgc3R5bGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgcnVsZSA9IHRoaXMucnVsZXMuYWRkKG5hbWUsIHN0eWxlLCBvcHRpb25zKTtcbiAgICBpZiAoIXJ1bGUpIHJldHVybiBudWxsO1xuICAgIHRoaXMub3B0aW9ucy5qc3MucGx1Z2lucy5vblByb2Nlc3NSdWxlKHJ1bGUpO1xuICAgIHJldHVybiBydWxlO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSBDU1Mgc3RyaW5nLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0gZGVmYXVsdFRvU3RyaW5nT3B0aW9ucztcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5pbmRlbnQgPT0gbnVsbCkgb3B0aW9ucy5pbmRlbnQgPSBkZWZhdWx0VG9TdHJpbmdPcHRpb25zLmluZGVudDtcbiAgICBpZiAob3B0aW9ucy5jaGlsZHJlbiA9PSBudWxsKSBvcHRpb25zLmNoaWxkcmVuID0gZGVmYXVsdFRvU3RyaW5nT3B0aW9ucy5jaGlsZHJlbjtcblxuICAgIGlmIChvcHRpb25zLmNoaWxkcmVuID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIHRoaXMucXVlcnkgKyBcIiB7fVwiO1xuICAgIH1cblxuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucnVsZXMudG9TdHJpbmcob3B0aW9ucyk7XG4gICAgcmV0dXJuIGNoaWxkcmVuID8gdGhpcy5xdWVyeSArIFwiIHtcXG5cIiArIGNoaWxkcmVuICsgXCJcXG59XCIgOiAnJztcbiAgfTtcblxuICByZXR1cm4gQ29uZGl0aW9uYWxSdWxlO1xufSgpO1xudmFyIGtleVJlZ0V4cCA9IC9AbWVkaWF8QHN1cHBvcnRzXFxzKy87XG52YXIgcGx1Z2luQ29uZGl0aW9uYWxSdWxlID0ge1xuICBvbkNyZWF0ZVJ1bGU6IGZ1bmN0aW9uIG9uQ3JlYXRlUnVsZShrZXksIHN0eWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBrZXlSZWdFeHAudGVzdChrZXkpID8gbmV3IENvbmRpdGlvbmFsUnVsZShrZXksIHN0eWxlcywgb3B0aW9ucykgOiBudWxsO1xuICB9XG59O1xuXG52YXIgZGVmYXVsdFRvU3RyaW5nT3B0aW9ucyQxID0ge1xuICBpbmRlbnQ6IDEsXG4gIGNoaWxkcmVuOiB0cnVlXG59O1xudmFyIG5hbWVSZWdFeHAgPSAvQGtleWZyYW1lc1xccysoW1xcdy1dKykvO1xuLyoqXG4gKiBSdWxlIGZvciBAa2V5ZnJhbWVzXG4gKi9cblxudmFyIEtleWZyYW1lc1J1bGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBLZXlmcmFtZXNSdWxlKGtleSwgZnJhbWVzLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ2tleWZyYW1lcyc7XG4gICAgdGhpcy5hdCA9ICdAa2V5ZnJhbWVzJztcbiAgICB0aGlzLmtleSA9IHZvaWQgMDtcbiAgICB0aGlzLm5hbWUgPSB2b2lkIDA7XG4gICAgdGhpcy5pZCA9IHZvaWQgMDtcbiAgICB0aGlzLnJ1bGVzID0gdm9pZCAwO1xuICAgIHRoaXMub3B0aW9ucyA9IHZvaWQgMDtcbiAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2U7XG4gICAgdGhpcy5yZW5kZXJhYmxlID0gdm9pZCAwO1xuICAgIHZhciBuYW1lTWF0Y2ggPSBrZXkubWF0Y2gobmFtZVJlZ0V4cCk7XG5cbiAgICBpZiAobmFtZU1hdGNoICYmIG5hbWVNYXRjaFsxXSkge1xuICAgICAgdGhpcy5uYW1lID0gbmFtZU1hdGNoWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm5hbWUgPSAnbm9uYW1lJztcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gQmFkIGtleWZyYW1lcyBuYW1lIFwiICsga2V5KSA6IHZvaWQgMDtcbiAgICB9XG5cbiAgICB0aGlzLmtleSA9IHRoaXMudHlwZSArIFwiLVwiICsgdGhpcy5uYW1lO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdmFyIHNjb3BlZCA9IG9wdGlvbnMuc2NvcGVkLFxuICAgICAgICBzaGVldCA9IG9wdGlvbnMuc2hlZXQsXG4gICAgICAgIGdlbmVyYXRlSWQgPSBvcHRpb25zLmdlbmVyYXRlSWQ7XG4gICAgdGhpcy5pZCA9IHNjb3BlZCA9PT0gZmFsc2UgPyB0aGlzLm5hbWUgOiBlc2NhcGUoZ2VuZXJhdGVJZCh0aGlzLCBzaGVldCkpO1xuICAgIHRoaXMucnVsZXMgPSBuZXcgUnVsZUxpc3QoX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIHBhcmVudDogdGhpc1xuICAgIH0pKTtcblxuICAgIGZvciAodmFyIG5hbWUgaW4gZnJhbWVzKSB7XG4gICAgICB0aGlzLnJ1bGVzLmFkZChuYW1lLCBmcmFtZXNbbmFtZV0sIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICAgIHBhcmVudDogdGhpc1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIHRoaXMucnVsZXMucHJvY2VzcygpO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSBDU1Mgc3RyaW5nLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBLZXlmcmFtZXNSdWxlLnByb3RvdHlwZTtcblxuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyhvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IGRlZmF1bHRUb1N0cmluZ09wdGlvbnMkMTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5pbmRlbnQgPT0gbnVsbCkgb3B0aW9ucy5pbmRlbnQgPSBkZWZhdWx0VG9TdHJpbmdPcHRpb25zJDEuaW5kZW50O1xuICAgIGlmIChvcHRpb25zLmNoaWxkcmVuID09IG51bGwpIG9wdGlvbnMuY2hpbGRyZW4gPSBkZWZhdWx0VG9TdHJpbmdPcHRpb25zJDEuY2hpbGRyZW47XG5cbiAgICBpZiAob3B0aW9ucy5jaGlsZHJlbiA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiB0aGlzLmF0ICsgXCIgXCIgKyB0aGlzLmlkICsgXCIge31cIjtcbiAgICB9XG5cbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnJ1bGVzLnRvU3RyaW5nKG9wdGlvbnMpO1xuICAgIGlmIChjaGlsZHJlbikgY2hpbGRyZW4gPSBcIlxcblwiICsgY2hpbGRyZW4gKyBcIlxcblwiO1xuICAgIHJldHVybiB0aGlzLmF0ICsgXCIgXCIgKyB0aGlzLmlkICsgXCIge1wiICsgY2hpbGRyZW4gKyBcIn1cIjtcbiAgfTtcblxuICByZXR1cm4gS2V5ZnJhbWVzUnVsZTtcbn0oKTtcbnZhciBrZXlSZWdFeHAkMSA9IC9Aa2V5ZnJhbWVzXFxzKy87XG52YXIgcmVmUmVnRXhwID0gL1xcJChbXFx3LV0rKS9nO1xuXG52YXIgZmluZFJlZmVyZW5jZWRLZXlmcmFtZSA9IGZ1bmN0aW9uIGZpbmRSZWZlcmVuY2VkS2V5ZnJhbWUodmFsLCBrZXlmcmFtZXMpIHtcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbC5yZXBsYWNlKHJlZlJlZ0V4cCwgZnVuY3Rpb24gKG1hdGNoLCBuYW1lKSB7XG4gICAgICBpZiAobmFtZSBpbiBrZXlmcmFtZXMpIHtcbiAgICAgICAgcmV0dXJuIGtleWZyYW1lc1tuYW1lXTtcbiAgICAgIH1cblxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJbSlNTXSBSZWZlcmVuY2VkIGtleWZyYW1lcyBydWxlIFxcXCJcIiArIG5hbWUgKyBcIlxcXCIgaXMgbm90IGRlZmluZWQuXCIpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHZhbDtcbn07XG4vKipcbiAqIFJlcGxhY2UgdGhlIHJlZmVyZW5jZSBmb3IgYSBhbmltYXRpb24gbmFtZS5cbiAqL1xuXG5cbnZhciByZXBsYWNlUmVmID0gZnVuY3Rpb24gcmVwbGFjZVJlZihzdHlsZSwgcHJvcCwga2V5ZnJhbWVzKSB7XG4gIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BdO1xuICB2YXIgcmVmS2V5ZnJhbWUgPSBmaW5kUmVmZXJlbmNlZEtleWZyYW1lKHZhbHVlLCBrZXlmcmFtZXMpO1xuXG4gIGlmIChyZWZLZXlmcmFtZSAhPT0gdmFsdWUpIHtcbiAgICBzdHlsZVtwcm9wXSA9IHJlZktleWZyYW1lO1xuICB9XG59O1xuXG52YXIgcGx1Z2luID0ge1xuICBvbkNyZWF0ZVJ1bGU6IGZ1bmN0aW9uIG9uQ3JlYXRlUnVsZShrZXksIGZyYW1lcywgb3B0aW9ucykge1xuICAgIHJldHVybiB0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyAmJiBrZXlSZWdFeHAkMS50ZXN0KGtleSkgPyBuZXcgS2V5ZnJhbWVzUnVsZShrZXksIGZyYW1lcywgb3B0aW9ucykgOiBudWxsO1xuICB9LFxuICAvLyBBbmltYXRpb24gbmFtZSByZWYgcmVwbGFjZXIuXG4gIG9uUHJvY2Vzc1N0eWxlOiBmdW5jdGlvbiBvblByb2Nlc3NTdHlsZShzdHlsZSwgcnVsZSwgc2hlZXQpIHtcbiAgICBpZiAocnVsZS50eXBlICE9PSAnc3R5bGUnIHx8ICFzaGVldCkgcmV0dXJuIHN0eWxlO1xuICAgIGlmICgnYW5pbWF0aW9uLW5hbWUnIGluIHN0eWxlKSByZXBsYWNlUmVmKHN0eWxlLCAnYW5pbWF0aW9uLW5hbWUnLCBzaGVldC5rZXlmcmFtZXMpO1xuICAgIGlmICgnYW5pbWF0aW9uJyBpbiBzdHlsZSkgcmVwbGFjZVJlZihzdHlsZSwgJ2FuaW1hdGlvbicsIHNoZWV0LmtleWZyYW1lcyk7XG4gICAgcmV0dXJuIHN0eWxlO1xuICB9LFxuICBvbkNoYW5nZVZhbHVlOiBmdW5jdGlvbiBvbkNoYW5nZVZhbHVlKHZhbCwgcHJvcCwgcnVsZSkge1xuICAgIHZhciBzaGVldCA9IHJ1bGUub3B0aW9ucy5zaGVldDtcblxuICAgIGlmICghc2hlZXQpIHtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuXG4gICAgc3dpdGNoIChwcm9wKSB7XG4gICAgICBjYXNlICdhbmltYXRpb24nOlxuICAgICAgICByZXR1cm4gZmluZFJlZmVyZW5jZWRLZXlmcmFtZSh2YWwsIHNoZWV0LmtleWZyYW1lcyk7XG5cbiAgICAgIGNhc2UgJ2FuaW1hdGlvbi1uYW1lJzpcbiAgICAgICAgcmV0dXJuIGZpbmRSZWZlcmVuY2VkS2V5ZnJhbWUodmFsLCBzaGVldC5rZXlmcmFtZXMpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfVxufTtcblxudmFyIEtleWZyYW1lUnVsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0Jhc2VTdHlsZVJ1bGUpIHtcbiAgX2luaGVyaXRzTG9vc2UoS2V5ZnJhbWVSdWxlLCBfQmFzZVN0eWxlUnVsZSk7XG5cbiAgZnVuY3Rpb24gS2V5ZnJhbWVSdWxlKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9CYXNlU3R5bGVSdWxlLmNhbGwuYXBwbHkoX0Jhc2VTdHlsZVJ1bGUsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gS2V5ZnJhbWVSdWxlLnByb3RvdHlwZTtcblxuICAvKipcbiAgICogR2VuZXJhdGVzIGEgQ1NTIHN0cmluZy5cbiAgICovXG4gIF9wcm90by50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICB2YXIgc2hlZXQgPSB0aGlzLm9wdGlvbnMuc2hlZXQ7XG4gICAgdmFyIGxpbmsgPSBzaGVldCA/IHNoZWV0Lm9wdGlvbnMubGluayA6IGZhbHNlO1xuICAgIHZhciBvcHRzID0gbGluayA/IF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBhbGxvd0VtcHR5OiB0cnVlXG4gICAgfSkgOiBvcHRpb25zO1xuICAgIHJldHVybiB0b0Nzcyh0aGlzLmtleSwgdGhpcy5zdHlsZSwgb3B0cyk7XG4gIH07XG5cbiAgcmV0dXJuIEtleWZyYW1lUnVsZTtcbn0oQmFzZVN0eWxlUnVsZSk7XG52YXIgcGx1Z2luS2V5ZnJhbWVSdWxlID0ge1xuICBvbkNyZWF0ZVJ1bGU6IGZ1bmN0aW9uIG9uQ3JlYXRlUnVsZShrZXksIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMucGFyZW50ICYmIG9wdGlvbnMucGFyZW50LnR5cGUgPT09ICdrZXlmcmFtZXMnKSB7XG4gICAgICByZXR1cm4gbmV3IEtleWZyYW1lUnVsZShrZXksIHN0eWxlLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxudmFyIEZvbnRGYWNlUnVsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEZvbnRGYWNlUnVsZShrZXksIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ2ZvbnQtZmFjZSc7XG4gICAgdGhpcy5hdCA9ICdAZm9udC1mYWNlJztcbiAgICB0aGlzLmtleSA9IHZvaWQgMDtcbiAgICB0aGlzLnN0eWxlID0gdm9pZCAwO1xuICAgIHRoaXMub3B0aW9ucyA9IHZvaWQgMDtcbiAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2U7XG4gICAgdGhpcy5yZW5kZXJhYmxlID0gdm9pZCAwO1xuICAgIHRoaXMua2V5ID0ga2V5O1xuICAgIHRoaXMuc3R5bGUgPSBzdHlsZTtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICB9XG4gIC8qKlxuICAgKiBHZW5lcmF0ZXMgYSBDU1Mgc3RyaW5nLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBGb250RmFjZVJ1bGUucHJvdG90eXBlO1xuXG4gIF9wcm90by50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnN0eWxlKSkge1xuICAgICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5zdHlsZS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgc3RyICs9IHRvQ3NzKHRoaXMuYXQsIHRoaXMuc3R5bGVbaW5kZXhdKTtcbiAgICAgICAgaWYgKHRoaXMuc3R5bGVbaW5kZXggKyAxXSkgc3RyICs9ICdcXG4nO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cblxuICAgIHJldHVybiB0b0Nzcyh0aGlzLmF0LCB0aGlzLnN0eWxlLCBvcHRpb25zKTtcbiAgfTtcblxuICByZXR1cm4gRm9udEZhY2VSdWxlO1xufSgpO1xudmFyIGtleVJlZ0V4cCQyID0gL0Bmb250LWZhY2UvO1xudmFyIHBsdWdpbkZvbnRGYWNlUnVsZSA9IHtcbiAgb25DcmVhdGVSdWxlOiBmdW5jdGlvbiBvbkNyZWF0ZVJ1bGUoa2V5LCBzdHlsZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBrZXlSZWdFeHAkMi50ZXN0KGtleSkgPyBuZXcgRm9udEZhY2VSdWxlKGtleSwgc3R5bGUsIG9wdGlvbnMpIDogbnVsbDtcbiAgfVxufTtcblxudmFyIFZpZXdwb3J0UnVsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFZpZXdwb3J0UnVsZShrZXksIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ3ZpZXdwb3J0JztcbiAgICB0aGlzLmF0ID0gJ0B2aWV3cG9ydCc7XG4gICAgdGhpcy5rZXkgPSB2b2lkIDA7XG4gICAgdGhpcy5zdHlsZSA9IHZvaWQgMDtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdGhpcy5pc1Byb2Nlc3NlZCA9IGZhbHNlO1xuICAgIHRoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB0aGlzLnN0eWxlID0gc3R5bGU7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICAvKipcbiAgICogR2VuZXJhdGVzIGEgQ1NTIHN0cmluZy5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gVmlld3BvcnRSdWxlLnByb3RvdHlwZTtcblxuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRvQ3NzKHRoaXMua2V5LCB0aGlzLnN0eWxlLCBvcHRpb25zKTtcbiAgfTtcblxuICByZXR1cm4gVmlld3BvcnRSdWxlO1xufSgpO1xudmFyIHBsdWdpblZpZXdwb3J0UnVsZSA9IHtcbiAgb25DcmVhdGVSdWxlOiBmdW5jdGlvbiBvbkNyZWF0ZVJ1bGUoa2V5LCBzdHlsZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBrZXkgPT09ICdAdmlld3BvcnQnIHx8IGtleSA9PT0gJ0AtbXMtdmlld3BvcnQnID8gbmV3IFZpZXdwb3J0UnVsZShrZXksIHN0eWxlLCBvcHRpb25zKSA6IG51bGw7XG4gIH1cbn07XG5cbnZhciBTaW1wbGVSdWxlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2ltcGxlUnVsZShrZXksIHZhbHVlLCBvcHRpb25zKSB7XG4gICAgdGhpcy50eXBlID0gJ3NpbXBsZSc7XG4gICAgdGhpcy5rZXkgPSB2b2lkIDA7XG4gICAgdGhpcy52YWx1ZSA9IHZvaWQgMDtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdGhpcy5pc1Byb2Nlc3NlZCA9IGZhbHNlO1xuICAgIHRoaXMucmVuZGVyYWJsZSA9IHZvaWQgMDtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICAvKipcbiAgICogR2VuZXJhdGVzIGEgQ1NTIHN0cmluZy5cbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuXG5cbiAgdmFyIF9wcm90byA9IFNpbXBsZVJ1bGUucHJvdG90eXBlO1xuXG4gIF9wcm90by50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSkge1xuICAgICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy52YWx1ZS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgc3RyICs9IHRoaXMua2V5ICsgXCIgXCIgKyB0aGlzLnZhbHVlW2luZGV4XSArIFwiO1wiO1xuICAgICAgICBpZiAodGhpcy52YWx1ZVtpbmRleCArIDFdKSBzdHIgKz0gJ1xcbic7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMua2V5ICsgXCIgXCIgKyB0aGlzLnZhbHVlICsgXCI7XCI7XG4gIH07XG5cbiAgcmV0dXJuIFNpbXBsZVJ1bGU7XG59KCk7XG52YXIga2V5c01hcCA9IHtcbiAgJ0BjaGFyc2V0JzogdHJ1ZSxcbiAgJ0BpbXBvcnQnOiB0cnVlLFxuICAnQG5hbWVzcGFjZSc6IHRydWVcbn07XG52YXIgcGx1Z2luU2ltcGxlUnVsZSA9IHtcbiAgb25DcmVhdGVSdWxlOiBmdW5jdGlvbiBvbkNyZWF0ZVJ1bGUoa2V5LCB2YWx1ZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBrZXkgaW4ga2V5c01hcCA/IG5ldyBTaW1wbGVSdWxlKGtleSwgdmFsdWUsIG9wdGlvbnMpIDogbnVsbDtcbiAgfVxufTtcblxudmFyIHBsdWdpbnMgPSBbcGx1Z2luU3R5bGVSdWxlLCBwbHVnaW5Db25kaXRpb25hbFJ1bGUsIHBsdWdpbiwgcGx1Z2luS2V5ZnJhbWVSdWxlLCBwbHVnaW5Gb250RmFjZVJ1bGUsIHBsdWdpblZpZXdwb3J0UnVsZSwgcGx1Z2luU2ltcGxlUnVsZV07XG5cbnZhciBkZWZhdWx0VXBkYXRlT3B0aW9ucyA9IHtcbiAgcHJvY2VzczogdHJ1ZVxufTtcbnZhciBmb3JjZVVwZGF0ZU9wdGlvbnMgPSB7XG4gIGZvcmNlOiB0cnVlLFxuICBwcm9jZXNzOiB0cnVlXG4gIC8qKlxuICAgKiBDb250YWlucyBydWxlcyBvYmplY3RzIGFuZCBhbGxvd3MgYWRkaW5nL3JlbW92aW5nIGV0Yy5cbiAgICogSXMgdXNlZCBmb3IgZS5nLiBieSBgU3R5bGVTaGVldGAgb3IgYENvbmRpdGlvbmFsUnVsZWAuXG4gICAqL1xuXG59O1xuXG52YXIgUnVsZUxpc3QgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICAvLyBSdWxlcyByZWdpc3RyeSBmb3IgYWNjZXNzIGJ5IC5nZXQoKSBtZXRob2QuXG4gIC8vIEl0IGNvbnRhaW5zIHRoZSBzYW1lIHJ1bGUgcmVnaXN0ZXJlZCBieSBuYW1lIGFuZCBieSBzZWxlY3Rvci5cbiAgLy8gT3JpZ2luYWwgc3R5bGVzIG9iamVjdC5cbiAgLy8gVXNlZCB0byBlbnN1cmUgY29ycmVjdCBydWxlcyBvcmRlci5cbiAgZnVuY3Rpb24gUnVsZUxpc3Qob3B0aW9ucykge1xuICAgIHRoaXMubWFwID0ge307XG4gICAgdGhpcy5yYXcgPSB7fTtcbiAgICB0aGlzLmluZGV4ID0gW107XG4gICAgdGhpcy5jb3VudGVyID0gMDtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdGhpcy5jbGFzc2VzID0gdm9pZCAwO1xuICAgIHRoaXMua2V5ZnJhbWVzID0gdm9pZCAwO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5jbGFzc2VzID0gb3B0aW9ucy5jbGFzc2VzO1xuICAgIHRoaXMua2V5ZnJhbWVzID0gb3B0aW9ucy5rZXlmcmFtZXM7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhbmQgcmVnaXN0ZXIgcnVsZS5cbiAgICpcbiAgICogV2lsbCBub3QgcmVuZGVyIGFmdGVyIFN0eWxlIFNoZWV0IHdhcyByZW5kZXJlZCB0aGUgZmlyc3QgdGltZS5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gUnVsZUxpc3QucHJvdG90eXBlO1xuXG4gIF9wcm90by5hZGQgPSBmdW5jdGlvbiBhZGQobmFtZSwgZGVjbCwgcnVsZU9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXMkb3B0aW9ucyA9IHRoaXMub3B0aW9ucyxcbiAgICAgICAgcGFyZW50ID0gX3RoaXMkb3B0aW9ucy5wYXJlbnQsXG4gICAgICAgIHNoZWV0ID0gX3RoaXMkb3B0aW9ucy5zaGVldCxcbiAgICAgICAganNzID0gX3RoaXMkb3B0aW9ucy5qc3MsXG4gICAgICAgIFJlbmRlcmVyID0gX3RoaXMkb3B0aW9ucy5SZW5kZXJlcixcbiAgICAgICAgZ2VuZXJhdGVJZCA9IF90aGlzJG9wdGlvbnMuZ2VuZXJhdGVJZCxcbiAgICAgICAgc2NvcGVkID0gX3RoaXMkb3B0aW9ucy5zY29wZWQ7XG5cbiAgICB2YXIgb3B0aW9ucyA9IF9leHRlbmRzKHtcbiAgICAgIGNsYXNzZXM6IHRoaXMuY2xhc3NlcyxcbiAgICAgIHBhcmVudDogcGFyZW50LFxuICAgICAgc2hlZXQ6IHNoZWV0LFxuICAgICAganNzOiBqc3MsXG4gICAgICBSZW5kZXJlcjogUmVuZGVyZXIsXG4gICAgICBnZW5lcmF0ZUlkOiBnZW5lcmF0ZUlkLFxuICAgICAgc2NvcGVkOiBzY29wZWQsXG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAga2V5ZnJhbWVzOiB0aGlzLmtleWZyYW1lcyxcbiAgICAgIHNlbGVjdG9yOiB1bmRlZmluZWRcbiAgICB9LCBydWxlT3B0aW9ucyk7IC8vIFdoZW4gdXNlciB1c2VzIC5jcmVhdGVTdHlsZVNoZWV0KCksIGR1cGxpY2F0ZSBuYW1lcyBhcmUgbm90IHBvc3NpYmxlLCBidXRcbiAgICAvLyBgc2hlZXQuYWRkUnVsZSgpYCBvcGVucyB0aGUgZG9vciBmb3IgYW55IGR1cGxpY2F0ZSBydWxlIG5hbWUuIFdoZW4gdGhpcyBoYXBwZW5zXG4gICAgLy8gd2UgbmVlZCB0byBtYWtlIHRoZSBrZXkgdW5pcXVlIHdpdGhpbiB0aGlzIFJ1bGVMaXN0IGluc3RhbmNlIHNjb3BlLlxuXG5cbiAgICB2YXIga2V5ID0gbmFtZTtcblxuICAgIGlmIChuYW1lIGluIHRoaXMucmF3KSB7XG4gICAgICBrZXkgPSBuYW1lICsgXCItZFwiICsgdGhpcy5jb3VudGVyKys7XG4gICAgfSAvLyBXZSBuZWVkIHRvIHNhdmUgdGhlIG9yaWdpbmFsIGRlY2wgYmVmb3JlIGNyZWF0aW5nIHRoZSBydWxlXG4gICAgLy8gYmVjYXVzZSBjYWNoZSBwbHVnaW4gbmVlZHMgdG8gdXNlIGl0IGFzIGEga2V5IHRvIHJldHVybiBhIGNhY2hlZCBydWxlLlxuXG5cbiAgICB0aGlzLnJhd1trZXldID0gZGVjbDtcblxuICAgIGlmIChrZXkgaW4gdGhpcy5jbGFzc2VzKSB7XG4gICAgICAvLyBFLmcuIHJ1bGVzIGluc2lkZSBvZiBAbWVkaWEgY29udGFpbmVyXG4gICAgICBvcHRpb25zLnNlbGVjdG9yID0gXCIuXCIgKyBlc2NhcGUodGhpcy5jbGFzc2VzW2tleV0pO1xuICAgIH1cblxuICAgIHZhciBydWxlID0gY3JlYXRlUnVsZShrZXksIGRlY2wsIG9wdGlvbnMpO1xuICAgIGlmICghcnVsZSkgcmV0dXJuIG51bGw7XG4gICAgdGhpcy5yZWdpc3RlcihydWxlKTtcbiAgICB2YXIgaW5kZXggPSBvcHRpb25zLmluZGV4ID09PSB1bmRlZmluZWQgPyB0aGlzLmluZGV4Lmxlbmd0aCA6IG9wdGlvbnMuaW5kZXg7XG4gICAgdGhpcy5pbmRleC5zcGxpY2UoaW5kZXgsIDAsIHJ1bGUpO1xuICAgIHJldHVybiBydWxlO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5nZXQgPSBmdW5jdGlvbiBnZXQobmFtZSkge1xuICAgIHJldHVybiB0aGlzLm1hcFtuYW1lXTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlIGEgcnVsZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8ucmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKHJ1bGUpIHtcbiAgICB0aGlzLnVucmVnaXN0ZXIocnVsZSk7XG4gICAgZGVsZXRlIHRoaXMucmF3W3J1bGUua2V5XTtcbiAgICB0aGlzLmluZGV4LnNwbGljZSh0aGlzLmluZGV4LmluZGV4T2YocnVsZSksIDEpO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgaW5kZXggb2YgYSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZihydWxlKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5kZXguaW5kZXhPZihydWxlKTtcbiAgfVxuICAvKipcbiAgICogUnVuIGBvblByb2Nlc3NSdWxlKClgIHBsdWdpbnMgb24gZXZlcnkgcnVsZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8ucHJvY2VzcyA9IGZ1bmN0aW9uIHByb2Nlc3MoKSB7XG4gICAgdmFyIHBsdWdpbnMgPSB0aGlzLm9wdGlvbnMuanNzLnBsdWdpbnM7IC8vIFdlIG5lZWQgdG8gY2xvbmUgYXJyYXkgYmVjYXVzZSBpZiB3ZSBtb2RpZnkgdGhlIGluZGV4IHNvbWV3aGVyZSBlbHNlIGR1cmluZyBhIGxvb3BcbiAgICAvLyB3ZSBlbmQgdXAgd2l0aCB2ZXJ5IGhhcmQtdG8tdHJhY2stZG93biBzaWRlIGVmZmVjdHMuXG5cbiAgICB0aGlzLmluZGV4LnNsaWNlKDApLmZvckVhY2gocGx1Z2lucy5vblByb2Nlc3NSdWxlLCBwbHVnaW5zKTtcbiAgfVxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBydWxlIGluIGAubWFwYCwgYC5jbGFzc2VzYCBhbmQgYC5rZXlmcmFtZXNgIG1hcHMuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnJlZ2lzdGVyID0gZnVuY3Rpb24gcmVnaXN0ZXIocnVsZSkge1xuICAgIHRoaXMubWFwW3J1bGUua2V5XSA9IHJ1bGU7XG5cbiAgICBpZiAocnVsZSBpbnN0YW5jZW9mIFN0eWxlUnVsZSkge1xuICAgICAgdGhpcy5tYXBbcnVsZS5zZWxlY3Rvcl0gPSBydWxlO1xuICAgICAgaWYgKHJ1bGUuaWQpIHRoaXMuY2xhc3Nlc1tydWxlLmtleV0gPSBydWxlLmlkO1xuICAgIH0gZWxzZSBpZiAocnVsZSBpbnN0YW5jZW9mIEtleWZyYW1lc1J1bGUgJiYgdGhpcy5rZXlmcmFtZXMpIHtcbiAgICAgIHRoaXMua2V5ZnJhbWVzW3J1bGUubmFtZV0gPSBydWxlLmlkO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogVW5yZWdpc3RlciBhIHJ1bGUuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnVucmVnaXN0ZXIgPSBmdW5jdGlvbiB1bnJlZ2lzdGVyKHJ1bGUpIHtcbiAgICBkZWxldGUgdGhpcy5tYXBbcnVsZS5rZXldO1xuXG4gICAgaWYgKHJ1bGUgaW5zdGFuY2VvZiBTdHlsZVJ1bGUpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLm1hcFtydWxlLnNlbGVjdG9yXTtcbiAgICAgIGRlbGV0ZSB0aGlzLmNsYXNzZXNbcnVsZS5rZXldO1xuICAgIH0gZWxzZSBpZiAocnVsZSBpbnN0YW5jZW9mIEtleWZyYW1lc1J1bGUpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLmtleWZyYW1lc1tydWxlLm5hbWVdO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogVXBkYXRlIHRoZSBmdW5jdGlvbiB2YWx1ZXMgd2l0aCBhIG5ldyBkYXRhLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgdmFyIG5hbWU7XG4gICAgdmFyIGRhdGE7XG4gICAgdmFyIG9wdGlvbnM7XG5cbiAgICBpZiAodHlwZW9mIChhcmd1bWVudHMubGVuZ3RoIDw9IDAgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMF0pID09PSAnc3RyaW5nJykge1xuICAgICAgbmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXTsgLy8gJEZsb3dGaXhNZVtpbnZhbGlkLXR1cGxlLWluZGV4XVxuXG4gICAgICBkYXRhID0gYXJndW1lbnRzLmxlbmd0aCA8PSAxID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzFdOyAvLyAkRmxvd0ZpeE1lW2ludmFsaWQtdHVwbGUtaW5kZXhdXG5cbiAgICAgIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDIgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMl07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMF07IC8vICRGbG93Rml4TWVbaW52YWxpZC10dXBsZS1pbmRleF1cblxuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1sxXTtcbiAgICAgIG5hbWUgPSBudWxsO1xuICAgIH1cblxuICAgIGlmIChuYW1lKSB7XG4gICAgICB0aGlzLnVwZGF0ZU9uZSh0aGlzLm1hcFtuYW1lXSwgZGF0YSwgb3B0aW9ucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmluZGV4Lmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICB0aGlzLnVwZGF0ZU9uZSh0aGlzLmluZGV4W2luZGV4XSwgZGF0YSwgb3B0aW9ucyk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBFeGVjdXRlIHBsdWdpbnMsIHVwZGF0ZSBydWxlIHByb3BzLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by51cGRhdGVPbmUgPSBmdW5jdGlvbiB1cGRhdGVPbmUocnVsZSwgZGF0YSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBkZWZhdWx0VXBkYXRlT3B0aW9ucztcbiAgICB9XG5cbiAgICB2YXIgX3RoaXMkb3B0aW9uczIgPSB0aGlzLm9wdGlvbnMsXG4gICAgICAgIHBsdWdpbnMgPSBfdGhpcyRvcHRpb25zMi5qc3MucGx1Z2lucyxcbiAgICAgICAgc2hlZXQgPSBfdGhpcyRvcHRpb25zMi5zaGVldDsgLy8gSXQgaXMgYSBydWxlcyBjb250YWluZXIgbGlrZSBmb3IgZS5nLiBDb25kaXRpb25hbFJ1bGUuXG5cbiAgICBpZiAocnVsZS5ydWxlcyBpbnN0YW5jZW9mIFJ1bGVMaXN0KSB7XG4gICAgICBydWxlLnJ1bGVzLnVwZGF0ZShkYXRhLCBvcHRpb25zKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgc3R5bGVSdWxlID0gcnVsZTtcbiAgICB2YXIgc3R5bGUgPSBzdHlsZVJ1bGUuc3R5bGU7XG4gICAgcGx1Z2lucy5vblVwZGF0ZShkYXRhLCBydWxlLCBzaGVldCwgb3B0aW9ucyk7IC8vIFdlIHJlbHkgb24gYSBuZXcgYHN0eWxlYCByZWYgaW4gY2FzZSBpdCB3YXMgbXV0YXRlZCBkdXJpbmcgb25VcGRhdGUgaG9vay5cblxuICAgIGlmIChvcHRpb25zLnByb2Nlc3MgJiYgc3R5bGUgJiYgc3R5bGUgIT09IHN0eWxlUnVsZS5zdHlsZSkge1xuICAgICAgLy8gV2UgbmVlZCB0byBydW4gdGhlIHBsdWdpbnMgaW4gY2FzZSBuZXcgYHN0eWxlYCByZWxpZXMgb24gc3ludGF4IHBsdWdpbnMuXG4gICAgICBwbHVnaW5zLm9uUHJvY2Vzc1N0eWxlKHN0eWxlUnVsZS5zdHlsZSwgc3R5bGVSdWxlLCBzaGVldCk7IC8vIFVwZGF0ZSBhbmQgYWRkIHByb3BzLlxuXG4gICAgICBmb3IgKHZhciBwcm9wIGluIHN0eWxlUnVsZS5zdHlsZSkge1xuICAgICAgICB2YXIgbmV4dFZhbHVlID0gc3R5bGVSdWxlLnN0eWxlW3Byb3BdO1xuICAgICAgICB2YXIgcHJldlZhbHVlID0gc3R5bGVbcHJvcF07IC8vIFdlIG5lZWQgdG8gdXNlIGBmb3JjZTogdHJ1ZWAgYmVjYXVzZSBgcnVsZS5zdHlsZWAgaGFzIGJlZW4gdXBkYXRlZCBkdXJpbmcgb25VcGRhdGUgaG9vaywgc28gYHJ1bGUucHJvcCgpYCB3aWxsIG5vdCB1cGRhdGUgdGhlIENTU09NIHJ1bGUuXG4gICAgICAgIC8vIFdlIGRvIHRoaXMgY29tcGFyaXNvbiB0byBhdm9pZCB1bm5lZWRlZCBgcnVsZS5wcm9wKClgIGNhbGxzLCBzaW5jZSB3ZSBoYXZlIHRoZSBvbGQgYHN0eWxlYCBvYmplY3QgaGVyZS5cblxuICAgICAgICBpZiAobmV4dFZhbHVlICE9PSBwcmV2VmFsdWUpIHtcbiAgICAgICAgICBzdHlsZVJ1bGUucHJvcChwcm9wLCBuZXh0VmFsdWUsIGZvcmNlVXBkYXRlT3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgIH0gLy8gUmVtb3ZlIHByb3BzLlxuXG5cbiAgICAgIGZvciAodmFyIF9wcm9wIGluIHN0eWxlKSB7XG4gICAgICAgIHZhciBfbmV4dFZhbHVlID0gc3R5bGVSdWxlLnN0eWxlW19wcm9wXTtcbiAgICAgICAgdmFyIF9wcmV2VmFsdWUgPSBzdHlsZVtfcHJvcF07IC8vIFdlIG5lZWQgdG8gdXNlIGBmb3JjZTogdHJ1ZWAgYmVjYXVzZSBgcnVsZS5zdHlsZWAgaGFzIGJlZW4gdXBkYXRlZCBkdXJpbmcgb25VcGRhdGUgaG9vaywgc28gYHJ1bGUucHJvcCgpYCB3aWxsIG5vdCB1cGRhdGUgdGhlIENTU09NIHJ1bGUuXG4gICAgICAgIC8vIFdlIGRvIHRoaXMgY29tcGFyaXNvbiB0byBhdm9pZCB1bm5lZWRlZCBgcnVsZS5wcm9wKClgIGNhbGxzLCBzaW5jZSB3ZSBoYXZlIHRoZSBvbGQgYHN0eWxlYCBvYmplY3QgaGVyZS5cblxuICAgICAgICBpZiAoX25leHRWYWx1ZSA9PSBudWxsICYmIF9uZXh0VmFsdWUgIT09IF9wcmV2VmFsdWUpIHtcbiAgICAgICAgICBzdHlsZVJ1bGUucHJvcChfcHJvcCwgbnVsbCwgZm9yY2VVcGRhdGVPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipcbiAgICogQ29udmVydCBydWxlcyB0byBhIENTUyBzdHJpbmcuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcob3B0aW9ucykge1xuICAgIHZhciBzdHIgPSAnJztcbiAgICB2YXIgc2hlZXQgPSB0aGlzLm9wdGlvbnMuc2hlZXQ7XG4gICAgdmFyIGxpbmsgPSBzaGVldCA/IHNoZWV0Lm9wdGlvbnMubGluayA6IGZhbHNlO1xuXG4gICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuaW5kZXgubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB2YXIgcnVsZSA9IHRoaXMuaW5kZXhbaW5kZXhdO1xuICAgICAgdmFyIGNzcyA9IHJ1bGUudG9TdHJpbmcob3B0aW9ucyk7IC8vIE5vIG5lZWQgdG8gcmVuZGVyIGFuIGVtcHR5IHJ1bGUuXG5cbiAgICAgIGlmICghY3NzICYmICFsaW5rKSBjb250aW51ZTtcbiAgICAgIGlmIChzdHIpIHN0ciArPSAnXFxuJztcbiAgICAgIHN0ciArPSBjc3M7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICByZXR1cm4gUnVsZUxpc3Q7XG59KCk7XG5cbnZhciBTdHlsZVNoZWV0ID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3R5bGVTaGVldChzdHlsZXMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSB2b2lkIDA7XG4gICAgdGhpcy5kZXBsb3llZCA9IHZvaWQgMDtcbiAgICB0aGlzLmF0dGFjaGVkID0gdm9pZCAwO1xuICAgIHRoaXMucnVsZXMgPSB2b2lkIDA7XG4gICAgdGhpcy5yZW5kZXJlciA9IHZvaWQgMDtcbiAgICB0aGlzLmNsYXNzZXMgPSB2b2lkIDA7XG4gICAgdGhpcy5rZXlmcmFtZXMgPSB2b2lkIDA7XG4gICAgdGhpcy5xdWV1ZSA9IHZvaWQgMDtcbiAgICB0aGlzLmF0dGFjaGVkID0gZmFsc2U7XG4gICAgdGhpcy5kZXBsb3llZCA9IGZhbHNlO1xuICAgIHRoaXMuY2xhc3NlcyA9IHt9O1xuICAgIHRoaXMua2V5ZnJhbWVzID0ge307XG4gICAgdGhpcy5vcHRpb25zID0gX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIHNoZWV0OiB0aGlzLFxuICAgICAgcGFyZW50OiB0aGlzLFxuICAgICAgY2xhc3NlczogdGhpcy5jbGFzc2VzLFxuICAgICAga2V5ZnJhbWVzOiB0aGlzLmtleWZyYW1lc1xuICAgIH0pO1xuXG4gICAgaWYgKG9wdGlvbnMuUmVuZGVyZXIpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgb3B0aW9ucy5SZW5kZXJlcih0aGlzKTtcbiAgICB9XG5cbiAgICB0aGlzLnJ1bGVzID0gbmV3IFJ1bGVMaXN0KHRoaXMub3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBuYW1lIGluIHN0eWxlcykge1xuICAgICAgdGhpcy5ydWxlcy5hZGQobmFtZSwgc3R5bGVzW25hbWVdKTtcbiAgICB9XG5cbiAgICB0aGlzLnJ1bGVzLnByb2Nlc3MoKTtcbiAgfVxuICAvKipcbiAgICogQXR0YWNoIHJlbmRlcmFibGUgdG8gdGhlIHJlbmRlciB0cmVlLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBTdHlsZVNoZWV0LnByb3RvdHlwZTtcblxuICBfcHJvdG8uYXR0YWNoID0gZnVuY3Rpb24gYXR0YWNoKCkge1xuICAgIGlmICh0aGlzLmF0dGFjaGVkKSByZXR1cm4gdGhpcztcbiAgICBpZiAodGhpcy5yZW5kZXJlcikgdGhpcy5yZW5kZXJlci5hdHRhY2goKTtcbiAgICB0aGlzLmF0dGFjaGVkID0gdHJ1ZTsgLy8gT3JkZXIgaXMgaW1wb3J0YW50LCBiZWNhdXNlIHdlIGNhbid0IHVzZSBpbnNlcnRSdWxlIEFQSSBpZiBzdHlsZSBlbGVtZW50IGlzIG5vdCBhdHRhY2hlZC5cblxuICAgIGlmICghdGhpcy5kZXBsb3llZCkgdGhpcy5kZXBsb3koKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogUmVtb3ZlIHJlbmRlcmFibGUgZnJvbSByZW5kZXIgdHJlZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uZGV0YWNoID0gZnVuY3Rpb24gZGV0YWNoKCkge1xuICAgIGlmICghdGhpcy5hdHRhY2hlZCkgcmV0dXJuIHRoaXM7XG4gICAgaWYgKHRoaXMucmVuZGVyZXIpIHRoaXMucmVuZGVyZXIuZGV0YWNoKCk7XG4gICAgdGhpcy5hdHRhY2hlZCA9IGZhbHNlO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBBZGQgYSBydWxlIHRvIHRoZSBjdXJyZW50IHN0eWxlc2hlZXQuXG4gICAqIFdpbGwgaW5zZXJ0IGEgcnVsZSBhbHNvIGFmdGVyIHRoZSBzdHlsZXNoZWV0IGhhcyBiZWVuIHJlbmRlcmVkIGZpcnN0IHRpbWUuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmFkZFJ1bGUgPSBmdW5jdGlvbiBhZGRSdWxlKG5hbWUsIGRlY2wsIG9wdGlvbnMpIHtcbiAgICB2YXIgcXVldWUgPSB0aGlzLnF1ZXVlOyAvLyBQbHVnaW5zIGNhbiBjcmVhdGUgcnVsZXMuXG4gICAgLy8gSW4gb3JkZXIgdG8gcHJlc2VydmUgdGhlIHJpZ2h0IG9yZGVyLCB3ZSBuZWVkIHRvIHF1ZXVlIGFsbCBgLmFkZFJ1bGVgIGNhbGxzLFxuICAgIC8vIHdoaWNoIGhhcHBlbiBhZnRlciB0aGUgZmlyc3QgYHJ1bGVzLmFkZCgpYCBjYWxsLlxuXG4gICAgaWYgKHRoaXMuYXR0YWNoZWQgJiYgIXF1ZXVlKSB0aGlzLnF1ZXVlID0gW107XG4gICAgdmFyIHJ1bGUgPSB0aGlzLnJ1bGVzLmFkZChuYW1lLCBkZWNsLCBvcHRpb25zKTtcbiAgICBpZiAoIXJ1bGUpIHJldHVybiBudWxsO1xuICAgIHRoaXMub3B0aW9ucy5qc3MucGx1Z2lucy5vblByb2Nlc3NSdWxlKHJ1bGUpO1xuXG4gICAgaWYgKHRoaXMuYXR0YWNoZWQpIHtcbiAgICAgIGlmICghdGhpcy5kZXBsb3llZCkgcmV0dXJuIHJ1bGU7IC8vIERvbid0IGluc2VydCBydWxlIGRpcmVjdGx5IGlmIHRoZXJlIGlzIG5vIHN0cmluZ2lmaWVkIHZlcnNpb24geWV0LlxuICAgICAgLy8gSXQgd2lsbCBiZSBpbnNlcnRlZCBhbGwgdG9nZXRoZXIgd2hlbiAuYXR0YWNoIGlzIGNhbGxlZC5cblxuICAgICAgaWYgKHF1ZXVlKSBxdWV1ZS5wdXNoKHJ1bGUpO2Vsc2Uge1xuICAgICAgICB0aGlzLmluc2VydFJ1bGUocnVsZSk7XG5cbiAgICAgICAgaWYgKHRoaXMucXVldWUpIHtcbiAgICAgICAgICB0aGlzLnF1ZXVlLmZvckVhY2godGhpcy5pbnNlcnRSdWxlLCB0aGlzKTtcbiAgICAgICAgICB0aGlzLnF1ZXVlID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcnVsZTtcbiAgICB9IC8vIFdlIGNhbid0IGFkZCBydWxlcyB0byBhIGRldGFjaGVkIHN0eWxlIG5vZGUuXG4gICAgLy8gV2Ugd2lsbCByZWRlcGxveSB0aGUgc2hlZXQgb25jZSB1c2VyIHdpbGwgYXR0YWNoIGl0LlxuXG5cbiAgICB0aGlzLmRlcGxveWVkID0gZmFsc2U7XG4gICAgcmV0dXJuIHJ1bGU7XG4gIH1cbiAgLyoqXG4gICAqIEluc2VydCBydWxlIGludG8gdGhlIFN0eWxlU2hlZXRcbiAgICovXG4gIDtcblxuICBfcHJvdG8uaW5zZXJ0UnVsZSA9IGZ1bmN0aW9uIGluc2VydFJ1bGUocnVsZSkge1xuICAgIGlmICh0aGlzLnJlbmRlcmVyKSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLmluc2VydFJ1bGUocnVsZSk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgYW5kIGFkZCBydWxlcy5cbiAgICogV2lsbCByZW5kZXIgYWxzbyBhZnRlciBTdHlsZSBTaGVldCB3YXMgcmVuZGVyZWQgdGhlIGZpcnN0IHRpbWUuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmFkZFJ1bGVzID0gZnVuY3Rpb24gYWRkUnVsZXMoc3R5bGVzLCBvcHRpb25zKSB7XG4gICAgdmFyIGFkZGVkID0gW107XG5cbiAgICBmb3IgKHZhciBuYW1lIGluIHN0eWxlcykge1xuICAgICAgdmFyIHJ1bGUgPSB0aGlzLmFkZFJ1bGUobmFtZSwgc3R5bGVzW25hbWVdLCBvcHRpb25zKTtcbiAgICAgIGlmIChydWxlKSBhZGRlZC5wdXNoKHJ1bGUpO1xuICAgIH1cblxuICAgIHJldHVybiBhZGRlZDtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgcnVsZSBieSBuYW1lLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5nZXRSdWxlID0gZnVuY3Rpb24gZ2V0UnVsZShuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZXMuZ2V0KG5hbWUpO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgYSBydWxlIGJ5IG5hbWUuXG4gICAqIFJldHVybnMgYHRydWVgOiBpZiBydWxlIGhhcyBiZWVuIGRlbGV0ZWQgZnJvbSB0aGUgRE9NLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5kZWxldGVSdWxlID0gZnVuY3Rpb24gZGVsZXRlUnVsZShuYW1lKSB7XG4gICAgdmFyIHJ1bGUgPSB0eXBlb2YgbmFtZSA9PT0gJ29iamVjdCcgPyBuYW1lIDogdGhpcy5ydWxlcy5nZXQobmFtZSk7XG5cbiAgICBpZiAoIXJ1bGUgfHwgLy8gU3R5bGUgc2hlZXQgd2FzIGNyZWF0ZWQgd2l0aG91dCBsaW5rOiB0cnVlIGFuZCBhdHRhY2hlZCwgaW4gdGhpcyBjYXNlIHdlXG4gICAgLy8gd29uJ3QgYmUgYWJsZSB0byByZW1vdmUgdGhlIENTUyBydWxlIGZyb20gdGhlIERPTS5cbiAgICB0aGlzLmF0dGFjaGVkICYmICFydWxlLnJlbmRlcmFibGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB0aGlzLnJ1bGVzLnJlbW92ZShydWxlKTtcblxuICAgIGlmICh0aGlzLmF0dGFjaGVkICYmIHJ1bGUucmVuZGVyYWJsZSAmJiB0aGlzLnJlbmRlcmVyKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZW5kZXJlci5kZWxldGVSdWxlKHJ1bGUucmVuZGVyYWJsZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBpbmRleCBvZiBhIHJ1bGUuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmluZGV4T2YgPSBmdW5jdGlvbiBpbmRleE9mKHJ1bGUpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlcy5pbmRleE9mKHJ1bGUpO1xuICB9XG4gIC8qKlxuICAgKiBEZXBsb3kgcHVyZSBDU1Mgc3RyaW5nIHRvIGEgcmVuZGVyYWJsZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uZGVwbG95ID0gZnVuY3Rpb24gZGVwbG95KCkge1xuICAgIGlmICh0aGlzLnJlbmRlcmVyKSB0aGlzLnJlbmRlcmVyLmRlcGxveSgpO1xuICAgIHRoaXMuZGVwbG95ZWQgPSB0cnVlO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBVcGRhdGUgdGhlIGZ1bmN0aW9uIHZhbHVlcyB3aXRoIGEgbmV3IGRhdGEuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgICB2YXIgX3RoaXMkcnVsZXM7XG5cbiAgICAoX3RoaXMkcnVsZXMgPSB0aGlzLnJ1bGVzKS51cGRhdGUuYXBwbHkoX3RoaXMkcnVsZXMsIGFyZ3VtZW50cyk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogVXBkYXRlcyBhIHNpbmdsZSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by51cGRhdGVPbmUgPSBmdW5jdGlvbiB1cGRhdGVPbmUocnVsZSwgZGF0YSwgb3B0aW9ucykge1xuICAgIHRoaXMucnVsZXMudXBkYXRlT25lKHJ1bGUsIGRhdGEsIG9wdGlvbnMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IHJ1bGVzIHRvIGEgQ1NTIHN0cmluZy5cbiAgICovXG4gIDtcblxuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZXMudG9TdHJpbmcob3B0aW9ucyk7XG4gIH07XG5cbiAgcmV0dXJuIFN0eWxlU2hlZXQ7XG59KCk7XG5cbnZhciBQbHVnaW5zUmVnaXN0cnkgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBQbHVnaW5zUmVnaXN0cnkoKSB7XG4gICAgdGhpcy5wbHVnaW5zID0ge1xuICAgICAgaW50ZXJuYWw6IFtdLFxuICAgICAgZXh0ZXJuYWw6IFtdXG4gICAgfTtcbiAgICB0aGlzLnJlZ2lzdHJ5ID0gdm9pZCAwO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFBsdWdpbnNSZWdpc3RyeS5wcm90b3R5cGU7XG5cbiAgLyoqXG4gICAqIENhbGwgYG9uQ3JlYXRlUnVsZWAgaG9va3MgYW5kIHJldHVybiBhbiBvYmplY3QgaWYgcmV0dXJuZWQgYnkgYSBob29rLlxuICAgKi9cbiAgX3Byb3RvLm9uQ3JlYXRlUnVsZSA9IGZ1bmN0aW9uIG9uQ3JlYXRlUnVsZShuYW1lLCBkZWNsLCBvcHRpb25zKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnJlZ2lzdHJ5Lm9uQ3JlYXRlUnVsZS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHJ1bGUgPSB0aGlzLnJlZ2lzdHJ5Lm9uQ3JlYXRlUnVsZVtpXShuYW1lLCBkZWNsLCBvcHRpb25zKTtcbiAgICAgIGlmIChydWxlKSByZXR1cm4gcnVsZTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvKipcbiAgICogQ2FsbCBgb25Qcm9jZXNzUnVsZWAgaG9va3MuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLm9uUHJvY2Vzc1J1bGUgPSBmdW5jdGlvbiBvblByb2Nlc3NSdWxlKHJ1bGUpIHtcbiAgICBpZiAocnVsZS5pc1Byb2Nlc3NlZCkgcmV0dXJuO1xuICAgIHZhciBzaGVldCA9IHJ1bGUub3B0aW9ucy5zaGVldDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yZWdpc3RyeS5vblByb2Nlc3NSdWxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnJlZ2lzdHJ5Lm9uUHJvY2Vzc1J1bGVbaV0ocnVsZSwgc2hlZXQpO1xuICAgIH1cblxuICAgIGlmIChydWxlLnN0eWxlKSB0aGlzLm9uUHJvY2Vzc1N0eWxlKHJ1bGUuc3R5bGUsIHJ1bGUsIHNoZWV0KTtcbiAgICBydWxlLmlzUHJvY2Vzc2VkID0gdHJ1ZTtcbiAgfVxuICAvKipcbiAgICogQ2FsbCBgb25Qcm9jZXNzU3R5bGVgIGhvb2tzLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5vblByb2Nlc3NTdHlsZSA9IGZ1bmN0aW9uIG9uUHJvY2Vzc1N0eWxlKHN0eWxlLCBydWxlLCBzaGVldCkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yZWdpc3RyeS5vblByb2Nlc3NTdHlsZS5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgICBydWxlLnN0eWxlID0gdGhpcy5yZWdpc3RyeS5vblByb2Nlc3NTdHlsZVtpXShydWxlLnN0eWxlLCBydWxlLCBzaGVldCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDYWxsIGBvblByb2Nlc3NTaGVldGAgaG9va3MuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLm9uUHJvY2Vzc1NoZWV0ID0gZnVuY3Rpb24gb25Qcm9jZXNzU2hlZXQoc2hlZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVnaXN0cnkub25Qcm9jZXNzU2hlZXQubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMucmVnaXN0cnkub25Qcm9jZXNzU2hlZXRbaV0oc2hlZXQpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQ2FsbCBgb25VcGRhdGVgIGhvb2tzLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5vblVwZGF0ZSA9IGZ1bmN0aW9uIG9uVXBkYXRlKGRhdGEsIHJ1bGUsIHNoZWV0LCBvcHRpb25zKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnJlZ2lzdHJ5Lm9uVXBkYXRlLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnJlZ2lzdHJ5Lm9uVXBkYXRlW2ldKGRhdGEsIHJ1bGUsIHNoZWV0LCBvcHRpb25zKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIENhbGwgYG9uQ2hhbmdlVmFsdWVgIGhvb2tzLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5vbkNoYW5nZVZhbHVlID0gZnVuY3Rpb24gb25DaGFuZ2VWYWx1ZSh2YWx1ZSwgcHJvcCwgcnVsZSkge1xuICAgIHZhciBwcm9jZXNzZWRWYWx1ZSA9IHZhbHVlO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnJlZ2lzdHJ5Lm9uQ2hhbmdlVmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgIHByb2Nlc3NlZFZhbHVlID0gdGhpcy5yZWdpc3RyeS5vbkNoYW5nZVZhbHVlW2ldKHByb2Nlc3NlZFZhbHVlLCBwcm9wLCBydWxlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvY2Vzc2VkVmFsdWU7XG4gIH1cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgcGx1Z2luLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by51c2UgPSBmdW5jdGlvbiB1c2UobmV3UGx1Z2luLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgcXVldWU6ICdleHRlcm5hbCdcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIHBsdWdpbnMgPSB0aGlzLnBsdWdpbnNbb3B0aW9ucy5xdWV1ZV07IC8vIEF2b2lkcyBhcHBseWluZyBzYW1lIHBsdWdpbiB0d2ljZSwgYXQgbGVhc3QgYmFzZWQgb24gcmVmLlxuXG4gICAgaWYgKHBsdWdpbnMuaW5kZXhPZihuZXdQbHVnaW4pICE9PSAtMSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHBsdWdpbnMucHVzaChuZXdQbHVnaW4pO1xuICAgIHRoaXMucmVnaXN0cnkgPSBbXS5jb25jYXQodGhpcy5wbHVnaW5zLmV4dGVybmFsLCB0aGlzLnBsdWdpbnMuaW50ZXJuYWwpLnJlZHVjZShmdW5jdGlvbiAocmVnaXN0cnksIHBsdWdpbikge1xuICAgICAgZm9yICh2YXIgbmFtZSBpbiBwbHVnaW4pIHtcbiAgICAgICAgaWYgKG5hbWUgaW4gcmVnaXN0cnkpIHtcbiAgICAgICAgICByZWdpc3RyeVtuYW1lXS5wdXNoKHBsdWdpbltuYW1lXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJbSlNTXSBVbmtub3duIGhvb2sgXFxcIlwiICsgbmFtZSArIFwiXFxcIi5cIikgOiB2b2lkIDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlZ2lzdHJ5O1xuICAgIH0sIHtcbiAgICAgIG9uQ3JlYXRlUnVsZTogW10sXG4gICAgICBvblByb2Nlc3NSdWxlOiBbXSxcbiAgICAgIG9uUHJvY2Vzc1N0eWxlOiBbXSxcbiAgICAgIG9uUHJvY2Vzc1NoZWV0OiBbXSxcbiAgICAgIG9uQ2hhbmdlVmFsdWU6IFtdLFxuICAgICAgb25VcGRhdGU6IFtdXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFBsdWdpbnNSZWdpc3RyeTtcbn0oKTtcblxuLyoqXG4gKiBTaGVldHMgcmVnaXN0cnkgdG8gYWNjZXNzIHRoZW0gYWxsIGF0IG9uZSBwbGFjZS5cbiAqL1xudmFyIFNoZWV0c1JlZ2lzdHJ5ID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2hlZXRzUmVnaXN0cnkoKSB7XG4gICAgdGhpcy5yZWdpc3RyeSA9IFtdO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFNoZWV0c1JlZ2lzdHJ5LnByb3RvdHlwZTtcblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBTdHlsZSBTaGVldC5cbiAgICovXG4gIF9wcm90by5hZGQgPSBmdW5jdGlvbiBhZGQoc2hlZXQpIHtcbiAgICB2YXIgcmVnaXN0cnkgPSB0aGlzLnJlZ2lzdHJ5O1xuICAgIHZhciBpbmRleCA9IHNoZWV0Lm9wdGlvbnMuaW5kZXg7XG4gICAgaWYgKHJlZ2lzdHJ5LmluZGV4T2Yoc2hlZXQpICE9PSAtMSkgcmV0dXJuO1xuXG4gICAgaWYgKHJlZ2lzdHJ5Lmxlbmd0aCA9PT0gMCB8fCBpbmRleCA+PSB0aGlzLmluZGV4KSB7XG4gICAgICByZWdpc3RyeS5wdXNoKHNoZWV0KTtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIEZpbmQgYSBwb3NpdGlvbi5cblxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RyeS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHJlZ2lzdHJ5W2ldLm9wdGlvbnMuaW5kZXggPiBpbmRleCkge1xuICAgICAgICByZWdpc3RyeS5zcGxpY2UoaSwgMCwgc2hlZXQpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZXNldCB0aGUgcmVnaXN0cnkuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnJlc2V0ID0gZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgdGhpcy5yZWdpc3RyeSA9IFtdO1xuICB9XG4gIC8qKlxuICAgKiBSZW1vdmUgYSBTdHlsZSBTaGVldC5cbiAgICovXG4gIDtcblxuICBfcHJvdG8ucmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKHNoZWV0KSB7XG4gICAgdmFyIGluZGV4ID0gdGhpcy5yZWdpc3RyeS5pbmRleE9mKHNoZWV0KTtcbiAgICB0aGlzLnJlZ2lzdHJ5LnNwbGljZShpbmRleCwgMSk7XG4gIH1cbiAgLyoqXG4gICAqIENvbnZlcnQgYWxsIGF0dGFjaGVkIHNoZWV0cyB0byBhIENTUyBzdHJpbmcuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoX3RlbXApIHtcbiAgICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgICBhdHRhY2hlZCA9IF9yZWYuYXR0YWNoZWQsXG4gICAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJhdHRhY2hlZFwiXSk7XG5cbiAgICB2YXIgY3NzID0gJyc7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVnaXN0cnkubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzaGVldCA9IHRoaXMucmVnaXN0cnlbaV07XG5cbiAgICAgIGlmIChhdHRhY2hlZCAhPSBudWxsICYmIHNoZWV0LmF0dGFjaGVkICE9PSBhdHRhY2hlZCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNzcykgY3NzICs9ICdcXG4nO1xuICAgICAgY3NzICs9IHNoZWV0LnRvU3RyaW5nKG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHJldHVybiBjc3M7XG4gIH07XG5cbiAgX2NyZWF0ZUNsYXNzKFNoZWV0c1JlZ2lzdHJ5LCBbe1xuICAgIGtleTogXCJpbmRleFwiLFxuXG4gICAgLyoqXG4gICAgICogQ3VycmVudCBoaWdoZXN0IGluZGV4IG51bWJlci5cbiAgICAgKi9cbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlZ2lzdHJ5Lmxlbmd0aCA9PT0gMCA/IDAgOiB0aGlzLnJlZ2lzdHJ5W3RoaXMucmVnaXN0cnkubGVuZ3RoIC0gMV0ub3B0aW9ucy5pbmRleDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2hlZXRzUmVnaXN0cnk7XG59KCk7XG5cbi8qKlxuICogVGhpcyBpcyBhIGdsb2JhbCBzaGVldHMgcmVnaXN0cnkuIE9ubHkgRG9tUmVuZGVyZXIgd2lsbCBhZGQgc2hlZXRzIHRvIGl0LlxuICogT24gdGhlIHNlcnZlciBvbmUgc2hvdWxkIHVzZSBhbiBvd24gU2hlZXRzUmVnaXN0cnkgaW5zdGFuY2UgYW5kIGFkZCB0aGVcbiAqIHNoZWV0cyB0byBpdCwgYmVjYXVzZSB5b3UgbmVlZCB0byBtYWtlIHN1cmUgdG8gY3JlYXRlIGEgbmV3IHJlZ2lzdHJ5IGZvclxuICogZWFjaCByZXF1ZXN0IGluIG9yZGVyIHRvIG5vdCBsZWFrIHNoZWV0cyBhY3Jvc3MgcmVxdWVzdHMuXG4gKi9cblxudmFyIHJlZ2lzdHJ5ID0gbmV3IFNoZWV0c1JlZ2lzdHJ5KCk7XG5cbi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbFRoaXMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGggPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGYgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG52YXIgbnMgPSAnMmYxYWNjNmMzYTYwNmIwODJlNWVlZjVlNTQ0MTRmZmInO1xuaWYgKGdsb2JhbFRoaXNbbnNdID09IG51bGwpIGdsb2JhbFRoaXNbbnNdID0gMDsgLy8gQnVuZGxlIG1heSBjb250YWluIG11bHRpcGxlIEpTUyB2ZXJzaW9ucyBhdCB0aGUgc2FtZSB0aW1lLiBJbiBvcmRlciB0byBpZGVudGlmeVxuLy8gdGhlIGN1cnJlbnQgdmVyc2lvbiB3aXRoIGp1c3Qgb25lIHNob3J0IG51bWJlciBhbmQgdXNlIGl0IGZvciBjbGFzc2VzIGdlbmVyYXRpb25cbi8vIHdlIHVzZSBhIGNvdW50ZXIuIEFsc28gaXQgaXMgbW9yZSBhY2N1cmF0ZSwgYmVjYXVzZSB1c2VyIGNhbiBtYW51YWxseSByZWV2YWx1YXRlXG4vLyB0aGUgbW9kdWxlLlxuXG52YXIgbW9kdWxlSWQgPSBnbG9iYWxUaGlzW25zXSsrO1xuXG52YXIgbWF4UnVsZXMgPSAxZTEwO1xuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB3aGljaCBnZW5lcmF0ZXMgdW5pcXVlIGNsYXNzIG5hbWVzIGJhc2VkIG9uIGNvdW50ZXJzLlxuICogV2hlbiBuZXcgZ2VuZXJhdG9yIGZ1bmN0aW9uIGlzIGNyZWF0ZWQsIHJ1bGUgY291bnRlciBpcyByZXNldGVkLlxuICogV2UgbmVlZCB0byByZXNldCB0aGUgcnVsZSBjb3VudGVyIGZvciBTU1IgZm9yIGVhY2ggcmVxdWVzdC5cbiAqL1xudmFyIGNyZWF0ZUdlbmVyYXRlSWQgPSBmdW5jdGlvbiBjcmVhdGVHZW5lcmF0ZUlkKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBydWxlQ291bnRlciA9IDA7XG4gIHJldHVybiBmdW5jdGlvbiAocnVsZSwgc2hlZXQpIHtcbiAgICBydWxlQ291bnRlciArPSAxO1xuXG4gICAgaWYgKHJ1bGVDb3VudGVyID4gbWF4UnVsZXMpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gWW91IG1pZ2h0IGhhdmUgYSBtZW1vcnkgbGVhay4gUnVsZSBjb3VudGVyIGlzIGF0IFwiICsgcnVsZUNvdW50ZXIgKyBcIi5cIikgOiB2b2lkIDA7XG4gICAgfVxuXG4gICAgdmFyIGpzc0lkID0gJyc7XG4gICAgdmFyIHByZWZpeCA9ICcnO1xuXG4gICAgaWYgKHNoZWV0KSB7XG4gICAgICBpZiAoc2hlZXQub3B0aW9ucy5jbGFzc05hbWVQcmVmaXgpIHtcbiAgICAgICAgcHJlZml4ID0gc2hlZXQub3B0aW9ucy5jbGFzc05hbWVQcmVmaXg7XG4gICAgICB9XG5cbiAgICAgIGlmIChzaGVldC5vcHRpb25zLmpzcy5pZCAhPSBudWxsKSB7XG4gICAgICAgIGpzc0lkID0gU3RyaW5nKHNoZWV0Lm9wdGlvbnMuanNzLmlkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5taW5pZnkpIHtcbiAgICAgIC8vIFVzaW5nIFwiY1wiIGJlY2F1c2UgYSBudW1iZXIgY2FuJ3QgYmUgdGhlIGZpcnN0IGNoYXIgaW4gYSBjbGFzcyBuYW1lLlxuICAgICAgcmV0dXJuIFwiXCIgKyAocHJlZml4IHx8ICdjJykgKyBtb2R1bGVJZCArIGpzc0lkICsgcnVsZUNvdW50ZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByZWZpeCArIHJ1bGUua2V5ICsgXCItXCIgKyBtb2R1bGVJZCArIChqc3NJZCA/IFwiLVwiICsganNzSWQgOiAnJykgKyBcIi1cIiArIHJ1bGVDb3VudGVyO1xuICB9O1xufTtcblxuLyoqXG4gKiBDYWNoZSB0aGUgdmFsdWUgZnJvbSB0aGUgZmlyc3QgdGltZSBhIGZ1bmN0aW9uIGlzIGNhbGxlZC5cbiAqL1xudmFyIG1lbW9pemUgPSBmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciB2YWx1ZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXZhbHVlKSB2YWx1ZSA9IGZuKCk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xufTtcblxuLyoqXG4gKiBHZXQgYSBzdHlsZSBwcm9wZXJ0eSB2YWx1ZS5cbiAqL1xudmFyIGdldFByb3BlcnR5VmFsdWUgPSBmdW5jdGlvbiBnZXRQcm9wZXJ0eVZhbHVlKGNzc1J1bGUsIHByb3ApIHtcbiAgdHJ5IHtcbiAgICAvLyBTdXBwb3J0IENTU1RPTS5cbiAgICBpZiAoY3NzUnVsZS5hdHRyaWJ1dGVTdHlsZU1hcCkge1xuICAgICAgcmV0dXJuIGNzc1J1bGUuYXR0cmlidXRlU3R5bGVNYXAuZ2V0KHByb3ApO1xuICAgIH1cblxuICAgIHJldHVybiBjc3NSdWxlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUocHJvcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIElFIG1heSB0aHJvdyBpZiBwcm9wZXJ0eSBpcyB1bmtub3duLlxuICAgIHJldHVybiAnJztcbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgYSBzdHlsZSBwcm9wZXJ0eS5cbiAqL1xudmFyIHNldFByb3BlcnR5ID0gZnVuY3Rpb24gc2V0UHJvcGVydHkoY3NzUnVsZSwgcHJvcCwgdmFsdWUpIHtcbiAgdHJ5IHtcbiAgICB2YXIgY3NzVmFsdWUgPSB2YWx1ZTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgY3NzVmFsdWUgPSB0b0Nzc1ZhbHVlKHZhbHVlLCB0cnVlKTtcblxuICAgICAgaWYgKHZhbHVlW3ZhbHVlLmxlbmd0aCAtIDFdID09PSAnIWltcG9ydGFudCcpIHtcbiAgICAgICAgY3NzUnVsZS5zdHlsZS5zZXRQcm9wZXJ0eShwcm9wLCBjc3NWYWx1ZSwgJ2ltcG9ydGFudCcpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IC8vIFN1cHBvcnQgQ1NTVE9NLlxuXG5cbiAgICBpZiAoY3NzUnVsZS5hdHRyaWJ1dGVTdHlsZU1hcCkge1xuICAgICAgY3NzUnVsZS5hdHRyaWJ1dGVTdHlsZU1hcC5zZXQocHJvcCwgY3NzVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjc3NSdWxlLnN0eWxlLnNldFByb3BlcnR5KHByb3AsIGNzc1ZhbHVlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIElFIG1heSB0aHJvdyBpZiBwcm9wZXJ0eSBpcyB1bmtub3duLlxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYSBzdHlsZSBwcm9wZXJ0eS5cbiAqL1xudmFyIHJlbW92ZVByb3BlcnR5ID0gZnVuY3Rpb24gcmVtb3ZlUHJvcGVydHkoY3NzUnVsZSwgcHJvcCkge1xuICB0cnkge1xuICAgIC8vIFN1cHBvcnQgQ1NTVE9NLlxuICAgIGlmIChjc3NSdWxlLmF0dHJpYnV0ZVN0eWxlTWFwKSB7XG4gICAgICBjc3NSdWxlLmF0dHJpYnV0ZVN0eWxlTWFwLmRlbGV0ZShwcm9wKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3NzUnVsZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShwcm9wKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gRE9NRXhjZXB0aW9uIFxcXCJcIiArIGVyci5tZXNzYWdlICsgXCJcXFwiIHdhcyB0aHJvd24uIFRyaWVkIHRvIHJlbW92ZSBwcm9wZXJ0eSBcXFwiXCIgKyBwcm9wICsgXCJcXFwiLlwiKSA6IHZvaWQgMDtcbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgdGhlIHNlbGVjdG9yLlxuICovXG52YXIgc2V0U2VsZWN0b3IgPSBmdW5jdGlvbiBzZXRTZWxlY3Rvcihjc3NSdWxlLCBzZWxlY3RvclRleHQpIHtcbiAgY3NzUnVsZS5zZWxlY3RvclRleHQgPSBzZWxlY3RvclRleHQ7IC8vIFJldHVybiBmYWxzZSBpZiBzZXR0ZXIgd2FzIG5vdCBzdWNjZXNzZnVsLlxuICAvLyBDdXJyZW50bHkgd29ya3MgaW4gY2hyb21lIG9ubHkuXG5cbiAgcmV0dXJuIGNzc1J1bGUuc2VsZWN0b3JUZXh0ID09PSBzZWxlY3RvclRleHQ7XG59O1xuLyoqXG4gKiBHZXRzIHRoZSBgaGVhZGAgZWxlbWVudCB1cG9uIHRoZSBmaXJzdCBjYWxsIGFuZCBjYWNoZXMgaXQuXG4gKiBXZSBhc3N1bWUgaXQgY2FuJ3QgYmUgbnVsbC5cbiAqL1xuXG5cbnZhciBnZXRIZWFkID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkJyk7XG59KTtcbi8qKlxuICogRmluZCBhdHRhY2hlZCBzaGVldCB3aXRoIGFuIGluZGV4IGhpZ2hlciB0aGFuIHRoZSBwYXNzZWQgb25lLlxuICovXG5cbmZ1bmN0aW9uIGZpbmRIaWdoZXJTaGVldChyZWdpc3RyeSwgb3B0aW9ucykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZ2lzdHJ5Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNoZWV0ID0gcmVnaXN0cnlbaV07XG5cbiAgICBpZiAoc2hlZXQuYXR0YWNoZWQgJiYgc2hlZXQub3B0aW9ucy5pbmRleCA+IG9wdGlvbnMuaW5kZXggJiYgc2hlZXQub3B0aW9ucy5pbnNlcnRpb25Qb2ludCA9PT0gb3B0aW9ucy5pbnNlcnRpb25Qb2ludCkge1xuICAgICAgcmV0dXJuIHNoZWV0O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuLyoqXG4gKiBGaW5kIGF0dGFjaGVkIHNoZWV0IHdpdGggdGhlIGhpZ2hlc3QgaW5kZXguXG4gKi9cblxuXG5mdW5jdGlvbiBmaW5kSGlnaGVzdFNoZWV0KHJlZ2lzdHJ5LCBvcHRpb25zKSB7XG4gIGZvciAodmFyIGkgPSByZWdpc3RyeS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciBzaGVldCA9IHJlZ2lzdHJ5W2ldO1xuXG4gICAgaWYgKHNoZWV0LmF0dGFjaGVkICYmIHNoZWV0Lm9wdGlvbnMuaW5zZXJ0aW9uUG9pbnQgPT09IG9wdGlvbnMuaW5zZXJ0aW9uUG9pbnQpIHtcbiAgICAgIHJldHVybiBzaGVldDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbi8qKlxuICogRmluZCBhIGNvbW1lbnQgd2l0aCBcImpzc1wiIGluc2lkZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGZpbmRDb21tZW50Tm9kZSh0ZXh0KSB7XG4gIHZhciBoZWFkID0gZ2V0SGVhZCgpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZC5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIG5vZGUgPSBoZWFkLmNoaWxkTm9kZXNbaV07XG5cbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAmJiBub2RlLm5vZGVWYWx1ZS50cmltKCkgPT09IHRleHQpIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG4vKipcbiAqIEZpbmQgYSBub2RlIGJlZm9yZSB3aGljaCB3ZSBjYW4gaW5zZXJ0IHRoZSBzaGVldC5cbiAqL1xuZnVuY3Rpb24gZmluZFByZXZOb2RlKG9wdGlvbnMpIHtcbiAgdmFyIHJlZ2lzdHJ5JDEgPSByZWdpc3RyeS5yZWdpc3RyeTtcblxuICBpZiAocmVnaXN0cnkkMS5sZW5ndGggPiAwKSB7XG4gICAgLy8gVHJ5IHRvIGluc2VydCBiZWZvcmUgdGhlIG5leHQgaGlnaGVyIHNoZWV0LlxuICAgIHZhciBzaGVldCA9IGZpbmRIaWdoZXJTaGVldChyZWdpc3RyeSQxLCBvcHRpb25zKTtcblxuICAgIGlmIChzaGVldCAmJiBzaGVldC5yZW5kZXJlcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGFyZW50OiBzaGVldC5yZW5kZXJlci5lbGVtZW50LnBhcmVudE5vZGUsXG4gICAgICAgIG5vZGU6IHNoZWV0LnJlbmRlcmVyLmVsZW1lbnRcbiAgICAgIH07XG4gICAgfSAvLyBPdGhlcndpc2UgaW5zZXJ0IGFmdGVyIHRoZSBsYXN0IGF0dGFjaGVkLlxuXG5cbiAgICBzaGVldCA9IGZpbmRIaWdoZXN0U2hlZXQocmVnaXN0cnkkMSwgb3B0aW9ucyk7XG5cbiAgICBpZiAoc2hlZXQgJiYgc2hlZXQucmVuZGVyZXIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmVudDogc2hlZXQucmVuZGVyZXIuZWxlbWVudC5wYXJlbnROb2RlLFxuICAgICAgICBub2RlOiBzaGVldC5yZW5kZXJlci5lbGVtZW50Lm5leHRTaWJsaW5nXG4gICAgICB9O1xuICAgIH1cbiAgfSAvLyBUcnkgdG8gZmluZCBhIGNvbW1lbnQgcGxhY2Vob2xkZXIgaWYgcmVnaXN0cnkgaXMgZW1wdHkuXG5cblxuICB2YXIgaW5zZXJ0aW9uUG9pbnQgPSBvcHRpb25zLmluc2VydGlvblBvaW50O1xuXG4gIGlmIChpbnNlcnRpb25Qb2ludCAmJiB0eXBlb2YgaW5zZXJ0aW9uUG9pbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFyIGNvbW1lbnQgPSBmaW5kQ29tbWVudE5vZGUoaW5zZXJ0aW9uUG9pbnQpO1xuXG4gICAgaWYgKGNvbW1lbnQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhcmVudDogY29tbWVudC5wYXJlbnROb2RlLFxuICAgICAgICBub2RlOiBjb21tZW50Lm5leHRTaWJsaW5nXG4gICAgICB9O1xuICAgIH0gLy8gSWYgdXNlciBzcGVjaWZpZXMgYW4gaW5zZXJ0aW9uIHBvaW50IGFuZCBpdCBjYW4ndCBiZSBmb3VuZCBpbiB0aGUgZG9jdW1lbnQgLVxuICAgIC8vIGJhZCBzcGVjaWZpY2l0eSBpc3N1ZXMgbWF5IGFwcGVhci5cblxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJbSlNTXSBJbnNlcnRpb24gcG9pbnQgXFxcIlwiICsgaW5zZXJ0aW9uUG9pbnQgKyBcIlxcXCIgbm90IGZvdW5kLlwiKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogSW5zZXJ0IHN0eWxlIGVsZW1lbnQgaW50byB0aGUgRE9NLlxuICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGUoc3R5bGUsIG9wdGlvbnMpIHtcbiAgdmFyIGluc2VydGlvblBvaW50ID0gb3B0aW9ucy5pbnNlcnRpb25Qb2ludDtcbiAgdmFyIG5leHROb2RlID0gZmluZFByZXZOb2RlKG9wdGlvbnMpO1xuXG4gIGlmIChuZXh0Tm9kZSAhPT0gZmFsc2UgJiYgbmV4dE5vZGUucGFyZW50KSB7XG4gICAgbmV4dE5vZGUucGFyZW50Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dE5vZGUubm9kZSk7XG4gICAgcmV0dXJuO1xuICB9IC8vIFdvcmtzIHdpdGggaWZyYW1lcyBhbmQgYW55IG5vZGUgdHlwZXMuXG5cblxuICBpZiAoaW5zZXJ0aW9uUG9pbnQgJiYgdHlwZW9mIGluc2VydGlvblBvaW50Lm5vZGVUeXBlID09PSAnbnVtYmVyJykge1xuICAgIC8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQxMzI4NzI4L2ZvcmNlLWNhc3RpbmctaW4tZmxvd1xuICAgIHZhciBpbnNlcnRpb25Qb2ludEVsZW1lbnQgPSBpbnNlcnRpb25Qb2ludDtcbiAgICB2YXIgcGFyZW50Tm9kZSA9IGluc2VydGlvblBvaW50RWxlbWVudC5wYXJlbnROb2RlO1xuICAgIGlmIChwYXJlbnROb2RlKSBwYXJlbnROb2RlLmluc2VydEJlZm9yZShzdHlsZSwgaW5zZXJ0aW9uUG9pbnRFbGVtZW50Lm5leHRTaWJsaW5nKTtlbHNlIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdbSlNTXSBJbnNlcnRpb24gcG9pbnQgaXMgbm90IGluIHRoZSBET00uJykgOiB2b2lkIDA7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZ2V0SGVhZCgpLmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbi8qKlxuICogUmVhZCBqc3Mgbm9uY2Ugc2V0dGluZyBmcm9tIHRoZSBwYWdlIGlmIHRoZSB1c2VyIGhhcyBzZXQgaXQuXG4gKi9cblxuXG52YXIgZ2V0Tm9uY2UgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcbiAgdmFyIG5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW3Byb3BlcnR5PVwiY3NwLW5vbmNlXCJdJyk7XG4gIHJldHVybiBub2RlID8gbm9kZS5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKSA6IG51bGw7XG59KTtcblxudmFyIF9pbnNlcnRSdWxlID0gZnVuY3Rpb24gaW5zZXJ0UnVsZShjb250YWluZXIsIHJ1bGUsIGluZGV4KSB7XG4gIHRyeSB7XG4gICAgaWYgKCdpbnNlcnRSdWxlJyBpbiBjb250YWluZXIpIHtcbiAgICAgIHZhciBjID0gY29udGFpbmVyO1xuICAgICAgYy5pbnNlcnRSdWxlKHJ1bGUsIGluZGV4KTtcbiAgICB9IC8vIEtleWZyYW1lcyBydWxlLlxuICAgIGVsc2UgaWYgKCdhcHBlbmRSdWxlJyBpbiBjb250YWluZXIpIHtcbiAgICAgICAgdmFyIF9jID0gY29udGFpbmVyO1xuXG4gICAgICAgIF9jLmFwcGVuZFJ1bGUocnVsZSk7XG4gICAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gXCIgKyBlcnIubWVzc2FnZSkgOiB2b2lkIDA7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGNvbnRhaW5lci5jc3NSdWxlc1tpbmRleF07XG59O1xuXG52YXIgZ2V0VmFsaWRSdWxlSW5zZXJ0aW9uSW5kZXggPSBmdW5jdGlvbiBnZXRWYWxpZFJ1bGVJbnNlcnRpb25JbmRleChjb250YWluZXIsIGluZGV4KSB7XG4gIHZhciBtYXhJbmRleCA9IGNvbnRhaW5lci5jc3NSdWxlcy5sZW5ndGg7IC8vIEluIGNhc2UgcHJldmlvdXMgaW5zZXJ0aW9uIGZhaWxzLCBwYXNzZWQgaW5kZXggbWlnaHQgYmUgd3JvbmdcblxuICBpZiAoaW5kZXggPT09IHVuZGVmaW5lZCB8fCBpbmRleCA+IG1heEluZGV4KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgcmV0dXJuIG1heEluZGV4O1xuICB9XG5cbiAgcmV0dXJuIGluZGV4O1xufTtcblxudmFyIGNyZWF0ZVN0eWxlID0gZnVuY3Rpb24gY3JlYXRlU3R5bGUoKSB7XG4gIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7IC8vIFdpdGhvdXQgaXQsIElFIHdpbGwgaGF2ZSBhIGJyb2tlbiBzb3VyY2Ugb3JkZXIgc3BlY2lmaWNpdHkgaWYgd2VcbiAgLy8gaW5zZXJ0IHJ1bGVzIGFmdGVyIHdlIGluc2VydCB0aGUgc3R5bGUgdGFnLlxuICAvLyBJdCBzZWVtcyB0byBraWNrLW9mZiB0aGUgc291cmNlIG9yZGVyIHNwZWNpZmljaXR5IGFsZ29yaXRobS5cblxuICBlbC50ZXh0Q29udGVudCA9ICdcXG4nO1xuICByZXR1cm4gZWw7XG59O1xuXG52YXIgRG9tUmVuZGVyZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICAvLyBIVE1MU3R5bGVFbGVtZW50IG5lZWRzIGZpeGluZyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmxvdy9pc3N1ZXMvMjY5NlxuICAvLyBXaWxsIGJlIGVtcHR5IGlmIGxpbms6IHRydWUgb3B0aW9uIGlzIG5vdCBzZXQsIGJlY2F1c2VcbiAgLy8gaXQgaXMgb25seSBmb3IgdXNlIHRvZ2V0aGVyIHdpdGggaW5zZXJ0UnVsZSBBUEkuXG4gIGZ1bmN0aW9uIERvbVJlbmRlcmVyKHNoZWV0KSB7XG4gICAgdGhpcy5nZXRQcm9wZXJ0eVZhbHVlID0gZ2V0UHJvcGVydHlWYWx1ZTtcbiAgICB0aGlzLnNldFByb3BlcnR5ID0gc2V0UHJvcGVydHk7XG4gICAgdGhpcy5yZW1vdmVQcm9wZXJ0eSA9IHJlbW92ZVByb3BlcnR5O1xuICAgIHRoaXMuc2V0U2VsZWN0b3IgPSBzZXRTZWxlY3RvcjtcbiAgICB0aGlzLmVsZW1lbnQgPSB2b2lkIDA7XG4gICAgdGhpcy5zaGVldCA9IHZvaWQgMDtcbiAgICB0aGlzLmhhc0luc2VydGVkUnVsZXMgPSBmYWxzZTtcbiAgICB0aGlzLmNzc1J1bGVzID0gW107XG4gICAgLy8gVGhlcmUgaXMgbm8gc2hlZXQgd2hlbiB0aGUgcmVuZGVyZXIgaXMgdXNlZCBmcm9tIGEgc3RhbmRhbG9uZSBTdHlsZVJ1bGUuXG4gICAgaWYgKHNoZWV0KSByZWdpc3RyeS5hZGQoc2hlZXQpO1xuICAgIHRoaXMuc2hlZXQgPSBzaGVldDtcblxuICAgIHZhciBfcmVmID0gdGhpcy5zaGVldCA/IHRoaXMuc2hlZXQub3B0aW9ucyA6IHt9LFxuICAgICAgICBtZWRpYSA9IF9yZWYubWVkaWEsXG4gICAgICAgIG1ldGEgPSBfcmVmLm1ldGEsXG4gICAgICAgIGVsZW1lbnQgPSBfcmVmLmVsZW1lbnQ7XG5cbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50IHx8IGNyZWF0ZVN0eWxlKCk7XG4gICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1qc3MnLCAnJyk7XG4gICAgaWYgKG1lZGlhKSB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgICBpZiAobWV0YSkgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1tZXRhJywgbWV0YSk7XG4gICAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgICBpZiAobm9uY2UpIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgbm9uY2UpO1xuICB9XG4gIC8qKlxuICAgKiBJbnNlcnQgc3R5bGUgZWxlbWVudCBpbnRvIHJlbmRlciB0cmVlLlxuICAgKi9cblxuXG4gIHZhciBfcHJvdG8gPSBEb21SZW5kZXJlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmF0dGFjaCA9IGZ1bmN0aW9uIGF0dGFjaCgpIHtcbiAgICAvLyBJbiB0aGUgY2FzZSB0aGUgZWxlbWVudCBub2RlIGlzIGV4dGVybmFsIGFuZCBpdCBpcyBhbHJlYWR5IGluIHRoZSBET00uXG4gICAgaWYgKHRoaXMuZWxlbWVudC5wYXJlbnROb2RlIHx8ICF0aGlzLnNoZWV0KSByZXR1cm47XG4gICAgaW5zZXJ0U3R5bGUodGhpcy5lbGVtZW50LCB0aGlzLnNoZWV0Lm9wdGlvbnMpOyAvLyBXaGVuIHJ1bGVzIGFyZSBpbnNlcnRlZCB1c2luZyBgaW5zZXJ0UnVsZWAgQVBJLCBhZnRlciBgc2hlZXQuZGV0YWNoKCkuYXR0YWNoKClgXG4gICAgLy8gbW9zdCBicm93c2VycyBjcmVhdGUgYSBuZXcgQ1NTU3R5bGVTaGVldCwgZXhjZXB0IG9mIGFsbCBJRXMuXG5cbiAgICB2YXIgZGVwbG95ZWQgPSBCb29sZWFuKHRoaXMuc2hlZXQgJiYgdGhpcy5zaGVldC5kZXBsb3llZCk7XG5cbiAgICBpZiAodGhpcy5oYXNJbnNlcnRlZFJ1bGVzICYmIGRlcGxveWVkKSB7XG4gICAgICB0aGlzLmhhc0luc2VydGVkUnVsZXMgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVwbG95KCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBSZW1vdmUgc3R5bGUgZWxlbWVudCBmcm9tIHJlbmRlciB0cmVlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5kZXRhY2ggPSBmdW5jdGlvbiBkZXRhY2goKSB7XG4gICAgaWYgKCF0aGlzLnNoZWV0KSByZXR1cm47XG4gICAgdmFyIHBhcmVudE5vZGUgPSB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICBpZiAocGFyZW50Tm9kZSkgcGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpOyAvLyBJbiB0aGUgbW9zdCBicm93c2VycywgcnVsZXMgaW5zZXJ0ZWQgdXNpbmcgaW5zZXJ0UnVsZSgpIEFQSSB3aWxsIGJlIGxvc3Qgd2hlbiBzdHlsZSBlbGVtZW50IGlzIHJlbW92ZWQuXG4gICAgLy8gVGhvdWdoIElFIHdpbGwga2VlcCB0aGVtIGFuZCB3ZSBuZWVkIGEgY29uc2lzdGVudCBiZWhhdmlvci5cblxuICAgIGlmICh0aGlzLnNoZWV0Lm9wdGlvbnMubGluaykge1xuICAgICAgdGhpcy5jc3NSdWxlcyA9IFtdO1xuICAgICAgdGhpcy5lbGVtZW50LnRleHRDb250ZW50ID0gJ1xcbic7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBJbmplY3QgQ1NTIHN0cmluZyBpbnRvIGVsZW1lbnQuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmRlcGxveSA9IGZ1bmN0aW9uIGRlcGxveSgpIHtcbiAgICB2YXIgc2hlZXQgPSB0aGlzLnNoZWV0O1xuICAgIGlmICghc2hlZXQpIHJldHVybjtcblxuICAgIGlmIChzaGVldC5vcHRpb25zLmxpbmspIHtcbiAgICAgIHRoaXMuaW5zZXJ0UnVsZXMoc2hlZXQucnVsZXMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuZWxlbWVudC50ZXh0Q29udGVudCA9IFwiXFxuXCIgKyBzaGVldC50b1N0cmluZygpICsgXCJcXG5cIjtcbiAgfVxuICAvKipcbiAgICogSW5zZXJ0IFJ1bGVMaXN0IGludG8gYW4gZWxlbWVudC5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhydWxlcywgbmF0aXZlUGFyZW50KSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5pbmRleC5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5pbnNlcnRSdWxlKHJ1bGVzLmluZGV4W2ldLCBpLCBuYXRpdmVQYXJlbnQpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogSW5zZXJ0IGEgcnVsZSBpbnRvIGVsZW1lbnQuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmluc2VydFJ1bGUgPSBmdW5jdGlvbiBpbnNlcnRSdWxlKHJ1bGUsIGluZGV4LCBuYXRpdmVQYXJlbnQpIHtcbiAgICBpZiAobmF0aXZlUGFyZW50ID09PSB2b2lkIDApIHtcbiAgICAgIG5hdGl2ZVBhcmVudCA9IHRoaXMuZWxlbWVudC5zaGVldDtcbiAgICB9XG5cbiAgICBpZiAocnVsZS5ydWxlcykge1xuICAgICAgdmFyIHBhcmVudCA9IHJ1bGU7XG4gICAgICB2YXIgbGF0ZXN0TmF0aXZlUGFyZW50ID0gbmF0aXZlUGFyZW50O1xuXG4gICAgICBpZiAocnVsZS50eXBlID09PSAnY29uZGl0aW9uYWwnIHx8IHJ1bGUudHlwZSA9PT0gJ2tleWZyYW1lcycpIHtcbiAgICAgICAgdmFyIF9pbnNlcnRpb25JbmRleCA9IGdldFZhbGlkUnVsZUluc2VydGlvbkluZGV4KG5hdGl2ZVBhcmVudCwgaW5kZXgpOyAvLyBXZSBuZWVkIHRvIHJlbmRlciB0aGUgY29udGFpbmVyIHdpdGhvdXQgY2hpbGRyZW4gZmlyc3QuXG5cblxuICAgICAgICBsYXRlc3ROYXRpdmVQYXJlbnQgPSBfaW5zZXJ0UnVsZShuYXRpdmVQYXJlbnQsIHBhcmVudC50b1N0cmluZyh7XG4gICAgICAgICAgY2hpbGRyZW46IGZhbHNlXG4gICAgICAgIH0pLCBfaW5zZXJ0aW9uSW5kZXgpO1xuXG4gICAgICAgIGlmIChsYXRlc3ROYXRpdmVQYXJlbnQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5yZWZDc3NSdWxlKHJ1bGUsIF9pbnNlcnRpb25JbmRleCwgbGF0ZXN0TmF0aXZlUGFyZW50KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pbnNlcnRSdWxlcyhwYXJlbnQucnVsZXMsIGxhdGVzdE5hdGl2ZVBhcmVudCk7XG4gICAgICByZXR1cm4gbGF0ZXN0TmF0aXZlUGFyZW50O1xuICAgIH1cblxuICAgIHZhciBydWxlU3RyID0gcnVsZS50b1N0cmluZygpO1xuICAgIGlmICghcnVsZVN0cikgcmV0dXJuIGZhbHNlO1xuICAgIHZhciBpbnNlcnRpb25JbmRleCA9IGdldFZhbGlkUnVsZUluc2VydGlvbkluZGV4KG5hdGl2ZVBhcmVudCwgaW5kZXgpO1xuXG4gICAgdmFyIG5hdGl2ZVJ1bGUgPSBfaW5zZXJ0UnVsZShuYXRpdmVQYXJlbnQsIHJ1bGVTdHIsIGluc2VydGlvbkluZGV4KTtcblxuICAgIGlmIChuYXRpdmVSdWxlID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHRoaXMuaGFzSW5zZXJ0ZWRSdWxlcyA9IHRydWU7XG4gICAgdGhpcy5yZWZDc3NSdWxlKHJ1bGUsIGluc2VydGlvbkluZGV4LCBuYXRpdmVSdWxlKTtcbiAgICByZXR1cm4gbmF0aXZlUnVsZTtcbiAgfTtcblxuICBfcHJvdG8ucmVmQ3NzUnVsZSA9IGZ1bmN0aW9uIHJlZkNzc1J1bGUocnVsZSwgaW5kZXgsIGNzc1J1bGUpIHtcbiAgICBydWxlLnJlbmRlcmFibGUgPSBjc3NSdWxlOyAvLyBXZSBvbmx5IHdhbnQgdG8gcmVmZXJlbmNlIHRoZSB0b3AgbGV2ZWwgcnVsZXMsIGRlbGV0ZVJ1bGUgQVBJIGRvZXNuJ3Qgc3VwcG9ydCByZW1vdmluZyBuZXN0ZWQgcnVsZXNcbiAgICAvLyBsaWtlIHJ1bGVzIGluc2lkZSBtZWRpYSBxdWVyaWVzIG9yIGtleWZyYW1lc1xuXG4gICAgaWYgKHJ1bGUub3B0aW9ucy5wYXJlbnQgaW5zdGFuY2VvZiBTdHlsZVNoZWV0KSB7XG4gICAgICB0aGlzLmNzc1J1bGVzW2luZGV4XSA9IGNzc1J1bGU7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgYSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5kZWxldGVSdWxlID0gZnVuY3Rpb24gZGVsZXRlUnVsZShjc3NSdWxlKSB7XG4gICAgdmFyIHNoZWV0ID0gdGhpcy5lbGVtZW50LnNoZWV0O1xuICAgIHZhciBpbmRleCA9IHRoaXMuaW5kZXhPZihjc3NSdWxlKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gICAgc2hlZXQuZGVsZXRlUnVsZShpbmRleCk7XG4gICAgdGhpcy5jc3NSdWxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgaW5kZXggb2YgYSBDU1MgUnVsZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uaW5kZXhPZiA9IGZ1bmN0aW9uIGluZGV4T2YoY3NzUnVsZSkge1xuICAgIHJldHVybiB0aGlzLmNzc1J1bGVzLmluZGV4T2YoY3NzUnVsZSk7XG4gIH1cbiAgLyoqXG4gICAqIEdlbmVyYXRlIGEgbmV3IENTUyBydWxlIGFuZCByZXBsYWNlIHRoZSBleGlzdGluZyBvbmUuXG4gICAqXG4gICAqIE9ubHkgdXNlZCBmb3Igc29tZSBvbGQgYnJvd3NlcnMgYmVjYXVzZSB0aGV5IGNhbid0IHNldCBhIHNlbGVjdG9yLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5yZXBsYWNlUnVsZSA9IGZ1bmN0aW9uIHJlcGxhY2VSdWxlKGNzc1J1bGUsIHJ1bGUpIHtcbiAgICB2YXIgaW5kZXggPSB0aGlzLmluZGV4T2YoY3NzUnVsZSk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICAgIHRoaXMuZWxlbWVudC5zaGVldC5kZWxldGVSdWxlKGluZGV4KTtcbiAgICB0aGlzLmNzc1J1bGVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0UnVsZShydWxlLCBpbmRleCk7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBhbGwgcnVsZXMgZWxlbWVudHMuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmdldFJ1bGVzID0gZnVuY3Rpb24gZ2V0UnVsZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zaGVldC5jc3NSdWxlcztcbiAgfTtcblxuICByZXR1cm4gRG9tUmVuZGVyZXI7XG59KCk7XG5cbnZhciBpbnN0YW5jZUNvdW50ZXIgPSAwO1xuXG52YXIgSnNzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gSnNzKG9wdGlvbnMpIHtcbiAgICB0aGlzLmlkID0gaW5zdGFuY2VDb3VudGVyKys7XG4gICAgdGhpcy52ZXJzaW9uID0gXCIxMC41LjFcIjtcbiAgICB0aGlzLnBsdWdpbnMgPSBuZXcgUGx1Z2luc1JlZ2lzdHJ5KCk7XG4gICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgaWQ6IHtcbiAgICAgICAgbWluaWZ5OiBmYWxzZVxuICAgICAgfSxcbiAgICAgIGNyZWF0ZUdlbmVyYXRlSWQ6IGNyZWF0ZUdlbmVyYXRlSWQsXG4gICAgICBSZW5kZXJlcjogaXNJbkJyb3dzZXIgPyBEb21SZW5kZXJlciA6IG51bGwsXG4gICAgICBwbHVnaW5zOiBbXVxuICAgIH07XG4gICAgdGhpcy5nZW5lcmF0ZUlkID0gY3JlYXRlR2VuZXJhdGVJZCh7XG4gICAgICBtaW5pZnk6IGZhbHNlXG4gICAgfSk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsdWdpbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMucGx1Z2lucy51c2UocGx1Z2luc1tpXSwge1xuICAgICAgICBxdWV1ZTogJ2ludGVybmFsJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXR1cChvcHRpb25zKTtcbiAgfVxuICAvKipcbiAgICogUHJlcGFyZXMgdmFyaW91cyBvcHRpb25zLCBhcHBsaWVzIHBsdWdpbnMuXG4gICAqIFNob3VsZCBub3QgYmUgdXNlZCB0d2ljZSBvbiB0aGUgc2FtZSBpbnN0YW5jZSwgYmVjYXVzZSB0aGVyZSBpcyBubyBwbHVnaW5zXG4gICAqIGRlZHVwbGljYXRpb24gbG9naWMuXG4gICAqL1xuXG5cbiAgdmFyIF9wcm90byA9IEpzcy5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnNldHVwID0gZnVuY3Rpb24gc2V0dXAob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5jcmVhdGVHZW5lcmF0ZUlkKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuY3JlYXRlR2VuZXJhdGVJZCA9IG9wdGlvbnMuY3JlYXRlR2VuZXJhdGVJZDtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5pZCkge1xuICAgICAgdGhpcy5vcHRpb25zLmlkID0gX2V4dGVuZHMoe30sIHRoaXMub3B0aW9ucy5pZCwgb3B0aW9ucy5pZCk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuY3JlYXRlR2VuZXJhdGVJZCB8fCBvcHRpb25zLmlkKSB7XG4gICAgICB0aGlzLmdlbmVyYXRlSWQgPSB0aGlzLm9wdGlvbnMuY3JlYXRlR2VuZXJhdGVJZCh0aGlzLm9wdGlvbnMuaWQpO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmluc2VydGlvblBvaW50ICE9IG51bGwpIHRoaXMub3B0aW9ucy5pbnNlcnRpb25Qb2ludCA9IG9wdGlvbnMuaW5zZXJ0aW9uUG9pbnQ7XG5cbiAgICBpZiAoJ1JlbmRlcmVyJyBpbiBvcHRpb25zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuUmVuZGVyZXIgPSBvcHRpb25zLlJlbmRlcmVyO1xuICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1zcHJlYWRcblxuXG4gICAgaWYgKG9wdGlvbnMucGx1Z2lucykgdGhpcy51c2UuYXBwbHkodGhpcywgb3B0aW9ucy5wbHVnaW5zKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGEgU3R5bGUgU2hlZXQuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmNyZWF0ZVN0eWxlU2hlZXQgPSBmdW5jdGlvbiBjcmVhdGVTdHlsZVNoZWV0KHN0eWxlcywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgICBpbmRleCA9IF9vcHRpb25zLmluZGV4O1xuXG4gICAgaWYgKHR5cGVvZiBpbmRleCAhPT0gJ251bWJlcicpIHtcbiAgICAgIGluZGV4ID0gcmVnaXN0cnkuaW5kZXggPT09IDAgPyAwIDogcmVnaXN0cnkuaW5kZXggKyAxO1xuICAgIH1cblxuICAgIHZhciBzaGVldCA9IG5ldyBTdHlsZVNoZWV0KHN0eWxlcywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIGpzczogdGhpcyxcbiAgICAgIGdlbmVyYXRlSWQ6IG9wdGlvbnMuZ2VuZXJhdGVJZCB8fCB0aGlzLmdlbmVyYXRlSWQsXG4gICAgICBpbnNlcnRpb25Qb2ludDogdGhpcy5vcHRpb25zLmluc2VydGlvblBvaW50LFxuICAgICAgUmVuZGVyZXI6IHRoaXMub3B0aW9ucy5SZW5kZXJlcixcbiAgICAgIGluZGV4OiBpbmRleFxuICAgIH0pKTtcbiAgICB0aGlzLnBsdWdpbnMub25Qcm9jZXNzU2hlZXQoc2hlZXQpO1xuICAgIHJldHVybiBzaGVldDtcbiAgfVxuICAvKipcbiAgICogRGV0YWNoIHRoZSBTdHlsZSBTaGVldCBhbmQgcmVtb3ZlIGl0IGZyb20gdGhlIHJlZ2lzdHJ5LlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5yZW1vdmVTdHlsZVNoZWV0ID0gZnVuY3Rpb24gcmVtb3ZlU3R5bGVTaGVldChzaGVldCkge1xuICAgIHNoZWV0LmRldGFjaCgpO1xuICAgIHJlZ2lzdHJ5LnJlbW92ZShzaGVldCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIHJ1bGUgd2l0aG91dCBhIFN0eWxlIFNoZWV0LlxuICAgKiBbRGVwcmVjYXRlZF0gd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24uXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmNyZWF0ZVJ1bGUgPSBmdW5jdGlvbiBjcmVhdGVSdWxlJDEobmFtZSwgc3R5bGUsIG9wdGlvbnMpIHtcbiAgICBpZiAoc3R5bGUgPT09IHZvaWQgMCkge1xuICAgICAgc3R5bGUgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgLy8gRW5hYmxlIHJ1bGUgd2l0aG91dCBuYW1lIGZvciBpbmxpbmUgc3R5bGVzLlxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhbGxdXG4gICAgICByZXR1cm4gdGhpcy5jcmVhdGVSdWxlKHVuZGVmaW5lZCwgbmFtZSwgc3R5bGUpO1xuICAgIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdHlwZV1cblxuXG4gICAgdmFyIHJ1bGVPcHRpb25zID0gX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBqc3M6IHRoaXMsXG4gICAgICBSZW5kZXJlcjogdGhpcy5vcHRpb25zLlJlbmRlcmVyXG4gICAgfSk7XG5cbiAgICBpZiAoIXJ1bGVPcHRpb25zLmdlbmVyYXRlSWQpIHJ1bGVPcHRpb25zLmdlbmVyYXRlSWQgPSB0aGlzLmdlbmVyYXRlSWQ7XG4gICAgaWYgKCFydWxlT3B0aW9ucy5jbGFzc2VzKSBydWxlT3B0aW9ucy5jbGFzc2VzID0ge307XG4gICAgaWYgKCFydWxlT3B0aW9ucy5rZXlmcmFtZXMpIHJ1bGVPcHRpb25zLmtleWZyYW1lcyA9IHt9O1xuXG4gICAgdmFyIHJ1bGUgPSBjcmVhdGVSdWxlKG5hbWUsIHN0eWxlLCBydWxlT3B0aW9ucyk7XG5cbiAgICBpZiAocnVsZSkgdGhpcy5wbHVnaW5zLm9uUHJvY2Vzc1J1bGUocnVsZSk7XG4gICAgcmV0dXJuIHJ1bGU7XG4gIH1cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIHBsdWdpbi4gUGFzc2VkIGZ1bmN0aW9uIHdpbGwgYmUgaW52b2tlZCB3aXRoIGEgcnVsZSBpbnN0YW5jZS5cbiAgICovXG4gIDtcblxuICBfcHJvdG8udXNlID0gZnVuY3Rpb24gdXNlKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcGx1Z2lucyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIHBsdWdpbnNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcGx1Z2lucy5mb3JFYWNoKGZ1bmN0aW9uIChwbHVnaW4pIHtcbiAgICAgIF90aGlzLnBsdWdpbnMudXNlKHBsdWdpbik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgcmV0dXJuIEpzcztcbn0oKTtcblxuLyoqXG4gKiBFeHRyYWN0cyBhIHN0eWxlcyBvYmplY3Qgd2l0aCBvbmx5IHByb3BzIHRoYXQgY29udGFpbiBmdW5jdGlvbiB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIGdldER5bmFtaWNTdHlsZXMoc3R5bGVzKSB7XG4gIHZhciB0byA9IG51bGw7XG5cbiAgZm9yICh2YXIga2V5IGluIHN0eWxlcykge1xuICAgIHZhciB2YWx1ZSA9IHN0eWxlc1trZXldO1xuICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG4gICAgaWYgKHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGlmICghdG8pIHRvID0ge307XG4gICAgICB0b1trZXldID0gdmFsdWU7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHZhciBleHRyYWN0ZWQgPSBnZXREeW5hbWljU3R5bGVzKHZhbHVlKTtcblxuICAgICAgaWYgKGV4dHJhY3RlZCkge1xuICAgICAgICBpZiAoIXRvKSB0byA9IHt9O1xuICAgICAgICB0b1trZXldID0gZXh0cmFjdGVkO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0bztcbn1cblxuLyoqXG4gKiBTaGVldHNNYW5hZ2VyIGlzIGxpa2UgYSBXZWFrTWFwIHdoaWNoIGlzIGRlc2lnbmVkIHRvIGNvdW50IFN0eWxlU2hlZXRcbiAqIGluc3RhbmNlcyBhbmQgYXR0YWNoL2RldGFjaCBhdXRvbWF0aWNhbGx5LlxuICovXG52YXIgU2hlZXRzTWFuYWdlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNoZWV0c01hbmFnZXIoKSB7XG4gICAgdGhpcy5sZW5ndGggPSAwO1xuICAgIHRoaXMuc2hlZXRzID0gbmV3IFdlYWtNYXAoKTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTaGVldHNNYW5hZ2VyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZ2V0ID0gZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgIHZhciBlbnRyeSA9IHRoaXMuc2hlZXRzLmdldChrZXkpO1xuICAgIHJldHVybiBlbnRyeSAmJiBlbnRyeS5zaGVldDtcbiAgfTtcblxuICBfcHJvdG8uYWRkID0gZnVuY3Rpb24gYWRkKGtleSwgc2hlZXQpIHtcbiAgICBpZiAodGhpcy5zaGVldHMuaGFzKGtleSkpIHJldHVybjtcbiAgICB0aGlzLmxlbmd0aCsrO1xuICAgIHRoaXMuc2hlZXRzLnNldChrZXksIHtcbiAgICAgIHNoZWV0OiBzaGVldCxcbiAgICAgIHJlZnM6IDBcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8ubWFuYWdlID0gZnVuY3Rpb24gbWFuYWdlKGtleSkge1xuICAgIHZhciBlbnRyeSA9IHRoaXMuc2hlZXRzLmdldChrZXkpO1xuXG4gICAgaWYgKGVudHJ5KSB7XG4gICAgICBpZiAoZW50cnkucmVmcyA9PT0gMCkge1xuICAgICAgICBlbnRyeS5zaGVldC5hdHRhY2goKTtcbiAgICAgIH1cblxuICAgICAgZW50cnkucmVmcysrO1xuICAgICAgcmV0dXJuIGVudHJ5LnNoZWV0O1xuICAgIH1cblxuICAgIHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gU2hlZXRzTWFuYWdlcjogY2FuJ3QgZmluZCBzaGVldCB0byBtYW5hZ2VcIik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfTtcblxuICBfcHJvdG8udW5tYW5hZ2UgPSBmdW5jdGlvbiB1bm1hbmFnZShrZXkpIHtcbiAgICB2YXIgZW50cnkgPSB0aGlzLnNoZWV0cy5nZXQoa2V5KTtcblxuICAgIGlmIChlbnRyeSkge1xuICAgICAgaWYgKGVudHJ5LnJlZnMgPiAwKSB7XG4gICAgICAgIGVudHJ5LnJlZnMtLTtcbiAgICAgICAgaWYgKGVudHJ5LnJlZnMgPT09IDApIGVudHJ5LnNoZWV0LmRldGFjaCgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB3YXJuaW5nKGZhbHNlLCBcIlNoZWV0c01hbmFnZXI6IGNhbid0IGZpbmQgc2hlZXQgdG8gdW5tYW5hZ2VcIik7XG4gICAgfVxuICB9O1xuXG4gIF9jcmVhdGVDbGFzcyhTaGVldHNNYW5hZ2VyLCBbe1xuICAgIGtleTogXCJzaXplXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sZW5ndGg7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNoZWV0c01hbmFnZXI7XG59KCk7XG5cbi8qKlxuICogQSBiZXR0ZXIgYWJzdHJhY3Rpb24gb3ZlciBDU1MuXG4gKlxuICogQGNvcHlyaWdodCBPbGVnIElzb25lbiAoU2xvYm9kc2tvaSkgLyBJc29uZW4gMjAxNC1wcmVzZW50XG4gKiBAd2Vic2l0ZSBodHRwczovL2dpdGh1Yi5jb20vY3NzaW5qcy9qc3NcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5cbi8qKlxuICogRXhwb3J0IGEgY29uc3RhbnQgaW5kaWNhdGluZyBpZiB0aGlzIGJyb3dzZXIgaGFzIENTU1RPTSBzdXBwb3J0LlxuICogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL3VwZGF0ZXMvMjAxOC8wMy9jc3NvbVxuICovXG52YXIgaGFzQ1NTVE9NU3VwcG9ydCA9IHR5cGVvZiBDU1MgPT09ICdvYmplY3QnICYmIENTUyAhPSBudWxsICYmICdudW1iZXInIGluIENTUztcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBvZiBKc3MuXG4gKi9cblxudmFyIGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgSnNzKG9wdGlvbnMpO1xufTtcbi8qKlxuICogQSBnbG9iYWwgSnNzIGluc3RhbmNlLlxuICovXG5cbnZhciBqc3MgPSBjcmVhdGUoKTtcblxuZXhwb3J0IGRlZmF1bHQganNzO1xuZXhwb3J0IHsgUnVsZUxpc3QsIFNoZWV0c01hbmFnZXIsIFNoZWV0c1JlZ2lzdHJ5LCBjcmVhdGUsIGNyZWF0ZUdlbmVyYXRlSWQsIGNyZWF0ZVJ1bGUsIGdldER5bmFtaWNTdHlsZXMsIGhhc0NTU1RPTVN1cHBvcnQsIHJlZ2lzdHJ5IGFzIHNoZWV0cywgdG9Dc3NWYWx1ZSB9O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgeyBnZXREaXNwbGF5TmFtZSB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZXJnZUNsYXNzZXMoKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGJhc2VDbGFzc2VzID0gb3B0aW9ucy5iYXNlQ2xhc3NlcyxcbiAgICAgIG5ld0NsYXNzZXMgPSBvcHRpb25zLm5ld0NsYXNzZXMsXG4gICAgICBDb21wb25lbnQgPSBvcHRpb25zLkNvbXBvbmVudDtcblxuICBpZiAoIW5ld0NsYXNzZXMpIHtcbiAgICByZXR1cm4gYmFzZUNsYXNzZXM7XG4gIH1cblxuICB2YXIgbmV4dENsYXNzZXMgPSBfZXh0ZW5kcyh7fSwgYmFzZUNsYXNzZXMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKHR5cGVvZiBuZXdDbGFzc2VzID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc29sZS5lcnJvcihbXCJNYXRlcmlhbC1VSTogVGhlIHZhbHVlIGBcIi5jb25jYXQobmV3Q2xhc3NlcywgXCJgIFwiKSArIFwicHJvdmlkZWQgdG8gdGhlIGNsYXNzZXMgcHJvcCBvZiBcIi5jb25jYXQoZ2V0RGlzcGxheU5hbWUoQ29tcG9uZW50KSwgXCIgaXMgaW5jb3JyZWN0LlwiKSwgJ1lvdSBtaWdodCB3YW50IHRvIHVzZSB0aGUgY2xhc3NOYW1lIHByb3AgaW5zdGVhZC4nXS5qb2luKCdcXG4nKSk7XG4gICAgICByZXR1cm4gYmFzZUNsYXNzZXM7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMobmV3Q2xhc3NlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghYmFzZUNsYXNzZXNba2V5XSAmJiBuZXdDbGFzc2VzW2tleV0pIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihbXCJNYXRlcmlhbC1VSTogVGhlIGtleSBgXCIuY29uY2F0KGtleSwgXCJgIFwiKSArIFwicHJvdmlkZWQgdG8gdGhlIGNsYXNzZXMgcHJvcCBpcyBub3QgaW1wbGVtZW50ZWQgaW4gXCIuY29uY2F0KGdldERpc3BsYXlOYW1lKENvbXBvbmVudCksIFwiLlwiKSwgXCJZb3UgY2FuIG9ubHkgb3ZlcnJpZGUgb25lIG9mIHRoZSBmb2xsb3dpbmc6IFwiLmNvbmNhdChPYmplY3Qua2V5cyhiYXNlQ2xhc3Nlcykuam9pbignLCcpLCBcIi5cIildLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5ld0NsYXNzZXNba2V5XSAmJiB0eXBlb2YgbmV3Q2xhc3Nlc1trZXldICE9PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFtcIk1hdGVyaWFsLVVJOiBUaGUga2V5IGBcIi5jb25jYXQoa2V5LCBcImAgXCIpICsgXCJwcm92aWRlZCB0byB0aGUgY2xhc3NlcyBwcm9wIGlzIG5vdCB2YWxpZCBmb3IgXCIuY29uY2F0KGdldERpc3BsYXlOYW1lKENvbXBvbmVudCksIFwiLlwiKSwgXCJZb3UgbmVlZCB0byBwcm92aWRlIGEgbm9uIGVtcHR5IHN0cmluZyBpbnN0ZWFkIG9mOiBcIi5jb25jYXQobmV3Q2xhc3Nlc1trZXldLCBcIi5cIildLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobmV3Q2xhc3Nlc1trZXldKSB7XG4gICAgICBuZXh0Q2xhc3Nlc1trZXldID0gXCJcIi5jb25jYXQoYmFzZUNsYXNzZXNba2V5XSwgXCIgXCIpLmNvbmNhdChuZXdDbGFzc2VzW2tleV0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBuZXh0Q2xhc3Nlcztcbn0iLCIvLyBVc2VkIGh0dHBzOi8vZ2l0aHViLmNvbS90aGlua2xvb3AvbXVsdGkta2V5LWNhY2hlIGFzIGluc3BpcmF0aW9uXG52YXIgbXVsdGlLZXlTdG9yZSA9IHtcbiAgc2V0OiBmdW5jdGlvbiBzZXQoY2FjaGUsIGtleTEsIGtleTIsIHZhbHVlKSB7XG4gICAgdmFyIHN1YkNhY2hlID0gY2FjaGUuZ2V0KGtleTEpO1xuXG4gICAgaWYgKCFzdWJDYWNoZSkge1xuICAgICAgc3ViQ2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgICBjYWNoZS5zZXQoa2V5MSwgc3ViQ2FjaGUpO1xuICAgIH1cblxuICAgIHN1YkNhY2hlLnNldChrZXkyLCB2YWx1ZSk7XG4gIH0sXG4gIGdldDogZnVuY3Rpb24gZ2V0KGNhY2hlLCBrZXkxLCBrZXkyKSB7XG4gICAgdmFyIHN1YkNhY2hlID0gY2FjaGUuZ2V0KGtleTEpO1xuICAgIHJldHVybiBzdWJDYWNoZSA/IHN1YkNhY2hlLmdldChrZXkyKSA6IHVuZGVmaW5lZDtcbiAgfSxcbiAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKGNhY2hlLCBrZXkxLCBrZXkyKSB7XG4gICAgdmFyIHN1YkNhY2hlID0gY2FjaGUuZ2V0KGtleTEpO1xuICAgIHN1YkNhY2hlLmRlbGV0ZShrZXkyKTtcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IG11bHRpS2V5U3RvcmU7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbnZhciBUaGVtZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBUaGVtZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnVGhlbWVDb250ZXh0Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGhlbWVDb250ZXh0OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGhlbWVDb250ZXh0IGZyb20gJy4vVGhlbWVDb250ZXh0JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICB2YXIgdGhlbWUgPSBSZWFjdC51c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICBSZWFjdC51c2VEZWJ1Z1ZhbHVlKHRoZW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aGVtZTtcbn0iLCJ2YXIgaGFzU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xuZXhwb3J0IGRlZmF1bHQgaGFzU3ltYm9sID8gU3ltYm9sLmZvcignbXVpLm5lc3RlZCcpIDogJ19fVEhFTUVfTkVTVEVEX18nOyIsImltcG9ydCBuZXN0ZWQgZnJvbSAnLi4vVGhlbWVQcm92aWRlci9uZXN0ZWQnO1xuLyoqXG4gKiBUaGlzIGlzIHRoZSBsaXN0IG9mIHRoZSBzdHlsZSBydWxlIG5hbWUgd2UgdXNlIGFzIGRyb3AgaW4gcmVwbGFjZW1lbnQgZm9yIHRoZSBidWlsdC1pblxuICogcHNldWRvIGNsYXNzZXMgKDpjaGVja2VkLCA6ZGlzYWJsZWQsIDpmb2N1c2VkLCBldGMuKS5cbiAqXG4gKiBXaHkgZG8gdGhleSBleGlzdCBpbiB0aGUgZmlyc3QgcGxhY2U/XG4gKiBUaGVzZSBjbGFzc2VzIGFyZSB1c2VkIGF0IGEgc3BlY2lmaWNpdHkgb2YgMi5cbiAqIEl0IGFsbG93cyB0aGVtIHRvIG92ZXJyaWRlIHByZXZpb3VzbHkgZGVmaW5pZWQgc3R5bGVzIGFzIHdlbGwgYXNcbiAqIGJlaW5nIHVudG91Y2hlZCBieSBzaW1wbGUgdXNlciBvdmVycmlkZXMuXG4gKi9cblxudmFyIHBzZXVkb0NsYXNzZXMgPSBbJ2NoZWNrZWQnLCAnZGlzYWJsZWQnLCAnZXJyb3InLCAnZm9jdXNlZCcsICdmb2N1c1Zpc2libGUnLCAncmVxdWlyZWQnLCAnZXhwYW5kZWQnLCAnc2VsZWN0ZWQnXTsgLy8gUmV0dXJucyBhIGZ1bmN0aW9uIHdoaWNoIGdlbmVyYXRlcyB1bmlxdWUgY2xhc3MgbmFtZXMgYmFzZWQgb24gY291bnRlcnMuXG4vLyBXaGVuIG5ldyBnZW5lcmF0b3IgZnVuY3Rpb24gaXMgY3JlYXRlZCwgcnVsZSBjb3VudGVyIGlzIHJlc2V0LlxuLy8gV2UgbmVlZCB0byByZXNldCB0aGUgcnVsZSBjb3VudGVyIGZvciBTU1IgZm9yIGVhY2ggcmVxdWVzdC5cbi8vXG4vLyBJdCdzIGluc3BpcmVkIGJ5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vY3NzaW5qcy9qc3MvYmxvYi80ZTZhMDVkZDNmN2I2NTcyZmRkM2FiMjE2ODYxZDllNDQ2YzIwMzMxL3NyYy91dGlscy9jcmVhdGVHZW5lcmF0ZUNsYXNzTmFtZS5qc1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVHZW5lcmF0ZUNsYXNzTmFtZSgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICB2YXIgX29wdGlvbnMkZGlzYWJsZUdsb2JhID0gb3B0aW9ucy5kaXNhYmxlR2xvYmFsLFxuICAgICAgZGlzYWJsZUdsb2JhbCA9IF9vcHRpb25zJGRpc2FibGVHbG9iYSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRkaXNhYmxlR2xvYmEsXG4gICAgICBfb3B0aW9ucyRwcm9kdWN0aW9uUHIgPSBvcHRpb25zLnByb2R1Y3Rpb25QcmVmaXgsXG4gICAgICBwcm9kdWN0aW9uUHJlZml4ID0gX29wdGlvbnMkcHJvZHVjdGlvblByID09PSB2b2lkIDAgPyAnanNzJyA6IF9vcHRpb25zJHByb2R1Y3Rpb25QcixcbiAgICAgIF9vcHRpb25zJHNlZWQgPSBvcHRpb25zLnNlZWQsXG4gICAgICBzZWVkID0gX29wdGlvbnMkc2VlZCA9PT0gdm9pZCAwID8gJycgOiBfb3B0aW9ucyRzZWVkO1xuICB2YXIgc2VlZFByZWZpeCA9IHNlZWQgPT09ICcnID8gJycgOiBcIlwiLmNvbmNhdChzZWVkLCBcIi1cIik7XG4gIHZhciBydWxlQ291bnRlciA9IDA7XG5cbiAgdmFyIGdldE5leHRDb3VudGVySWQgPSBmdW5jdGlvbiBnZXROZXh0Q291bnRlcklkKCkge1xuICAgIHJ1bGVDb3VudGVyICs9IDE7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHJ1bGVDb3VudGVyID49IDFlMTApIHtcbiAgICAgICAgY29uc29sZS53YXJuKFsnTWF0ZXJpYWwtVUk6IFlvdSBtaWdodCBoYXZlIGEgbWVtb3J5IGxlYWsuJywgJ1RoZSBydWxlQ291bnRlciBpcyBub3Qgc3VwcG9zZWQgdG8gZ3JvdyB0aGF0IG11Y2guJ10uam9pbignJykpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBydWxlQ291bnRlcjtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24gKHJ1bGUsIHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgbmFtZSA9IHN0eWxlU2hlZXQub3B0aW9ucy5uYW1lOyAvLyBJcyBhIGdsb2JhbCBzdGF0aWMgTVVJIHN0eWxlP1xuXG4gICAgaWYgKG5hbWUgJiYgbmFtZS5pbmRleE9mKCdNdWknKSA9PT0gMCAmJiAhc3R5bGVTaGVldC5vcHRpb25zLmxpbmsgJiYgIWRpc2FibGVHbG9iYWwpIHtcbiAgICAgIC8vIFdlIGNhbiB1c2UgYSBzaG9ydGhhbmQgY2xhc3MgbmFtZSwgd2UgbmV2ZXIgdXNlIHRoZSBrZXlzIHRvIHN0eWxlIHRoZSBjb21wb25lbnRzLlxuICAgICAgaWYgKHBzZXVkb0NsYXNzZXMuaW5kZXhPZihydWxlLmtleSkgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBcIk11aS1cIi5jb25jYXQocnVsZS5rZXkpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJlZml4ID0gXCJcIi5jb25jYXQoc2VlZFByZWZpeCkuY29uY2F0KG5hbWUsIFwiLVwiKS5jb25jYXQocnVsZS5rZXkpO1xuXG4gICAgICBpZiAoIXN0eWxlU2hlZXQub3B0aW9ucy50aGVtZVtuZXN0ZWRdIHx8IHNlZWQgIT09ICcnKSB7XG4gICAgICAgIHJldHVybiBwcmVmaXg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIlwiLmNvbmNhdChwcmVmaXgsIFwiLVwiKS5jb25jYXQoZ2V0TmV4dENvdW50ZXJJZCgpKTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHNlZWRQcmVmaXgpLmNvbmNhdChwcm9kdWN0aW9uUHJlZml4KS5jb25jYXQoZ2V0TmV4dENvdW50ZXJJZCgpKTtcbiAgICB9XG5cbiAgICB2YXIgc3VmZml4ID0gXCJcIi5jb25jYXQocnVsZS5rZXksIFwiLVwiKS5jb25jYXQoZ2V0TmV4dENvdW50ZXJJZCgpKTsgLy8gSGVscCB3aXRoIGRlYnVnZ2FiaWxpdHkuXG5cbiAgICBpZiAoc3R5bGVTaGVldC5vcHRpb25zLmNsYXNzTmFtZVByZWZpeCkge1xuICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHNlZWRQcmVmaXgpLmNvbmNhdChzdHlsZVNoZWV0Lm9wdGlvbnMuY2xhc3NOYW1lUHJlZml4LCBcIi1cIikuY29uY2F0KHN1ZmZpeCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCIuY29uY2F0KHNlZWRQcmVmaXgpLmNvbmNhdChzdWZmaXgpO1xuICB9O1xufSIsImltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgeyBjcmVhdGVSdWxlIH0gZnJvbSAnanNzJztcblxudmFyIG5vdyA9IERhdGUubm93KCk7XG52YXIgZm5WYWx1ZXNOcyA9IFwiZm5WYWx1ZXNcIiArIG5vdztcbnZhciBmblJ1bGVOcyA9IFwiZm5TdHlsZVwiICsgKytub3c7XG5cbnZhciBmdW5jdGlvblBsdWdpbiA9IGZ1bmN0aW9uIGZ1bmN0aW9uUGx1Z2luKCkge1xuICByZXR1cm4ge1xuICAgIG9uQ3JlYXRlUnVsZTogZnVuY3Rpb24gb25DcmVhdGVSdWxlKG5hbWUsIGRlY2wsIG9wdGlvbnMpIHtcbiAgICAgIGlmICh0eXBlb2YgZGVjbCAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIG51bGw7XG4gICAgICB2YXIgcnVsZSA9IGNyZWF0ZVJ1bGUobmFtZSwge30sIG9wdGlvbnMpO1xuICAgICAgcnVsZVtmblJ1bGVOc10gPSBkZWNsO1xuICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgfSxcbiAgICBvblByb2Nlc3NTdHlsZTogZnVuY3Rpb24gb25Qcm9jZXNzU3R5bGUoc3R5bGUsIHJ1bGUpIHtcbiAgICAgIC8vIFdlIG5lZWQgdG8gZXh0cmFjdCBmdW5jdGlvbiB2YWx1ZXMgZnJvbSB0aGUgZGVjbGFyYXRpb24sIHNvIHRoYXQgd2UgY2FuIGtlZXAgY29yZSB1bmF3YXJlIG9mIHRoZW0uXG4gICAgICAvLyBXZSBuZWVkIHRvIGRvIHRoYXQgb25seSBvbmNlLlxuICAgICAgLy8gV2UgZG9uJ3QgbmVlZCB0byBleHRyYWN0IGZ1bmN0aW9ucyBvbiBlYWNoIHN0eWxlIHVwZGF0ZSwgc2luY2UgdGhpcyBjYW4gaGFwcGVuIG9ubHkgb25jZS5cbiAgICAgIC8vIFdlIGRvbid0IHN1cHBvcnQgZnVuY3Rpb24gdmFsdWVzIGluc2lkZSBvZiBmdW5jdGlvbiBydWxlcy5cbiAgICAgIGlmIChmblZhbHVlc05zIGluIHJ1bGUgfHwgZm5SdWxlTnMgaW4gcnVsZSkgcmV0dXJuIHN0eWxlO1xuICAgICAgdmFyIGZuVmFsdWVzID0ge307XG5cbiAgICAgIGZvciAodmFyIHByb3AgaW4gc3R5bGUpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gc3R5bGVbcHJvcF07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdmdW5jdGlvbicpIGNvbnRpbnVlO1xuICAgICAgICBkZWxldGUgc3R5bGVbcHJvcF07XG4gICAgICAgIGZuVmFsdWVzW3Byb3BdID0gdmFsdWU7XG4gICAgICB9IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuXG5cbiAgICAgIHJ1bGVbZm5WYWx1ZXNOc10gPSBmblZhbHVlcztcbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9LFxuICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShkYXRhLCBydWxlLCBzaGVldCwgb3B0aW9ucykge1xuICAgICAgdmFyIHN0eWxlUnVsZSA9IHJ1bGU7IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuXG4gICAgICB2YXIgZm5SdWxlID0gc3R5bGVSdWxlW2ZuUnVsZU5zXTsgLy8gSWYgd2UgaGF2ZSBhIHN0eWxlIGZ1bmN0aW9uLCB0aGUgZW50aXJlIHJ1bGUgaXMgZHluYW1pYyBhbmQgc3R5bGUgb2JqZWN0XG4gICAgICAvLyB3aWxsIGJlIHJldHVybmVkIGZyb20gdGhhdCBmdW5jdGlvbi5cblxuICAgICAgaWYgKGZuUnVsZSkge1xuICAgICAgICAvLyBFbXB0eSBvYmplY3Qgd2lsbCByZW1vdmUgYWxsIGN1cnJlbnRseSBkZWZpbmVkIHByb3BzXG4gICAgICAgIC8vIGluIGNhc2UgZnVuY3Rpb24gcnVsZSByZXR1cm5zIGEgZmFsc3kgdmFsdWUuXG4gICAgICAgIHN0eWxlUnVsZS5zdHlsZSA9IGZuUnVsZShkYXRhKSB8fCB7fTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICBmb3IgKHZhciBwcm9wIGluIHN0eWxlUnVsZS5zdHlsZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzdHlsZVJ1bGUuc3R5bGVbcHJvcF0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ1tKU1NdIEZ1bmN0aW9uIHZhbHVlcyBpbnNpZGUgZnVuY3Rpb24gcnVsZXMgYXJlIG5vdCBzdXBwb3J0ZWQuJykgOiB2b2lkIDA7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cblxuXG4gICAgICB2YXIgZm5WYWx1ZXMgPSBzdHlsZVJ1bGVbZm5WYWx1ZXNOc107IC8vIElmIHdlIGhhdmUgYSBmbiB2YWx1ZXMgbWFwLCBpdCBpcyBhIHJ1bGUgd2l0aCBmdW5jdGlvbiB2YWx1ZXMuXG5cbiAgICAgIGlmIChmblZhbHVlcykge1xuICAgICAgICBmb3IgKHZhciBfcHJvcCBpbiBmblZhbHVlcykge1xuICAgICAgICAgIHN0eWxlUnVsZS5wcm9wKF9wcm9wLCBmblZhbHVlc1tfcHJvcF0oZGF0YSksIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb25QbHVnaW47XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgeyBSdWxlTGlzdCB9IGZyb20gJ2pzcyc7XG5cbnZhciBhdCA9ICdAZ2xvYmFsJztcbnZhciBhdFByZWZpeCA9ICdAZ2xvYmFsICc7XG5cbnZhciBHbG9iYWxDb250YWluZXJSdWxlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gR2xvYmFsQ29udGFpbmVyUnVsZShrZXksIHN0eWxlcywgb3B0aW9ucykge1xuICAgIHRoaXMudHlwZSA9ICdnbG9iYWwnO1xuICAgIHRoaXMuYXQgPSBhdDtcbiAgICB0aGlzLnJ1bGVzID0gdm9pZCAwO1xuICAgIHRoaXMub3B0aW9ucyA9IHZvaWQgMDtcbiAgICB0aGlzLmtleSA9IHZvaWQgMDtcbiAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2U7XG4gICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLnJ1bGVzID0gbmV3IFJ1bGVMaXN0KF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBwYXJlbnQ6IHRoaXNcbiAgICB9KSk7XG5cbiAgICBmb3IgKHZhciBzZWxlY3RvciBpbiBzdHlsZXMpIHtcbiAgICAgIHRoaXMucnVsZXMuYWRkKHNlbGVjdG9yLCBzdHlsZXNbc2VsZWN0b3JdKTtcbiAgICB9XG5cbiAgICB0aGlzLnJ1bGVzLnByb2Nlc3MoKTtcbiAgfVxuICAvKipcbiAgICogR2V0IGEgcnVsZS5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gR2xvYmFsQ29udGFpbmVyUnVsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmdldFJ1bGUgPSBmdW5jdGlvbiBnZXRSdWxlKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlcy5nZXQobmFtZSk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhbmQgcmVnaXN0ZXIgcnVsZSwgcnVuIHBsdWdpbnMuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmFkZFJ1bGUgPSBmdW5jdGlvbiBhZGRSdWxlKG5hbWUsIHN0eWxlLCBvcHRpb25zKSB7XG4gICAgdmFyIHJ1bGUgPSB0aGlzLnJ1bGVzLmFkZChuYW1lLCBzdHlsZSwgb3B0aW9ucyk7XG4gICAgaWYgKHJ1bGUpIHRoaXMub3B0aW9ucy5qc3MucGx1Z2lucy5vblByb2Nlc3NSdWxlKHJ1bGUpO1xuICAgIHJldHVybiBydWxlO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgaW5kZXggb2YgYSBydWxlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZihydWxlKSB7XG4gICAgcmV0dXJuIHRoaXMucnVsZXMuaW5kZXhPZihydWxlKTtcbiAgfVxuICAvKipcbiAgICogR2VuZXJhdGVzIGEgQ1NTIHN0cmluZy5cbiAgICovXG4gIDtcblxuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlcy50b1N0cmluZygpO1xuICB9O1xuXG4gIHJldHVybiBHbG9iYWxDb250YWluZXJSdWxlO1xufSgpO1xuXG52YXIgR2xvYmFsUHJlZml4ZWRSdWxlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gR2xvYmFsUHJlZml4ZWRSdWxlKGtleSwgc3R5bGUsIG9wdGlvbnMpIHtcbiAgICB0aGlzLnR5cGUgPSAnZ2xvYmFsJztcbiAgICB0aGlzLmF0ID0gYXQ7XG4gICAgdGhpcy5vcHRpb25zID0gdm9pZCAwO1xuICAgIHRoaXMucnVsZSA9IHZvaWQgMDtcbiAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2U7XG4gICAgdGhpcy5rZXkgPSB2b2lkIDA7XG4gICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB2YXIgc2VsZWN0b3IgPSBrZXkuc3Vic3RyKGF0UHJlZml4Lmxlbmd0aCk7XG4gICAgdGhpcy5ydWxlID0gb3B0aW9ucy5qc3MuY3JlYXRlUnVsZShzZWxlY3Rvciwgc3R5bGUsIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBwYXJlbnQ6IHRoaXNcbiAgICB9KSk7XG4gIH1cblxuICB2YXIgX3Byb3RvMiA9IEdsb2JhbFByZWZpeGVkUnVsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvMi50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlID8gdGhpcy5ydWxlLnRvU3RyaW5nKG9wdGlvbnMpIDogJyc7XG4gIH07XG5cbiAgcmV0dXJuIEdsb2JhbFByZWZpeGVkUnVsZTtcbn0oKTtcblxudmFyIHNlcGFyYXRvclJlZ0V4cCA9IC9cXHMqLFxccyovZztcblxuZnVuY3Rpb24gYWRkU2NvcGUoc2VsZWN0b3IsIHNjb3BlKSB7XG4gIHZhciBwYXJ0cyA9IHNlbGVjdG9yLnNwbGl0KHNlcGFyYXRvclJlZ0V4cCk7XG4gIHZhciBzY29wZWQgPSAnJztcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgc2NvcGVkICs9IHNjb3BlICsgXCIgXCIgKyBwYXJ0c1tpXS50cmltKCk7XG4gICAgaWYgKHBhcnRzW2kgKyAxXSkgc2NvcGVkICs9ICcsICc7XG4gIH1cblxuICByZXR1cm4gc2NvcGVkO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVOZXN0ZWRHbG9iYWxDb250YWluZXJSdWxlKHJ1bGUsIHNoZWV0KSB7XG4gIHZhciBvcHRpb25zID0gcnVsZS5vcHRpb25zLFxuICAgICAgc3R5bGUgPSBydWxlLnN0eWxlO1xuICB2YXIgcnVsZXMgPSBzdHlsZSA/IHN0eWxlW2F0XSA6IG51bGw7XG4gIGlmICghcnVsZXMpIHJldHVybjtcblxuICBmb3IgKHZhciBuYW1lIGluIHJ1bGVzKSB7XG4gICAgc2hlZXQuYWRkUnVsZShuYW1lLCBydWxlc1tuYW1lXSwgX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIHNlbGVjdG9yOiBhZGRTY29wZShuYW1lLCBydWxlLnNlbGVjdG9yKVxuICAgIH0pKTtcbiAgfVxuXG4gIGRlbGV0ZSBzdHlsZVthdF07XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByZWZpeGVkR2xvYmFsUnVsZShydWxlLCBzaGVldCkge1xuICB2YXIgb3B0aW9ucyA9IHJ1bGUub3B0aW9ucyxcbiAgICAgIHN0eWxlID0gcnVsZS5zdHlsZTtcblxuICBmb3IgKHZhciBwcm9wIGluIHN0eWxlKSB7XG4gICAgaWYgKHByb3BbMF0gIT09ICdAJyB8fCBwcm9wLnN1YnN0cigwLCBhdC5sZW5ndGgpICE9PSBhdCkgY29udGludWU7XG4gICAgdmFyIHNlbGVjdG9yID0gYWRkU2NvcGUocHJvcC5zdWJzdHIoYXQubGVuZ3RoKSwgcnVsZS5zZWxlY3Rvcik7XG4gICAgc2hlZXQuYWRkUnVsZShzZWxlY3Rvciwgc3R5bGVbcHJvcF0sIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBzZWxlY3Rvcjogc2VsZWN0b3JcbiAgICB9KSk7XG4gICAgZGVsZXRlIHN0eWxlW3Byb3BdO1xuICB9XG59XG4vKipcbiAqIENvbnZlcnQgbmVzdGVkIHJ1bGVzIHRvIHNlcGFyYXRlLCByZW1vdmUgdGhlbSBmcm9tIG9yaWdpbmFsIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge1J1bGV9IHJ1bGVcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBqc3NHbG9iYWwoKSB7XG4gIGZ1bmN0aW9uIG9uQ3JlYXRlUnVsZShuYW1lLCBzdHlsZXMsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW5hbWUpIHJldHVybiBudWxsO1xuXG4gICAgaWYgKG5hbWUgPT09IGF0KSB7XG4gICAgICByZXR1cm4gbmV3IEdsb2JhbENvbnRhaW5lclJ1bGUobmFtZSwgc3R5bGVzLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZVswXSA9PT0gJ0AnICYmIG5hbWUuc3Vic3RyKDAsIGF0UHJlZml4Lmxlbmd0aCkgPT09IGF0UHJlZml4KSB7XG4gICAgICByZXR1cm4gbmV3IEdsb2JhbFByZWZpeGVkUnVsZShuYW1lLCBzdHlsZXMsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHZhciBwYXJlbnQgPSBvcHRpb25zLnBhcmVudDtcblxuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIGlmIChwYXJlbnQudHlwZSA9PT0gJ2dsb2JhbCcgfHwgcGFyZW50Lm9wdGlvbnMucGFyZW50ICYmIHBhcmVudC5vcHRpb25zLnBhcmVudC50eXBlID09PSAnZ2xvYmFsJykge1xuICAgICAgICBvcHRpb25zLnNjb3BlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvcHRpb25zLnNjb3BlZCA9PT0gZmFsc2UpIHtcbiAgICAgIG9wdGlvbnMuc2VsZWN0b3IgPSBuYW1lO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gb25Qcm9jZXNzUnVsZShydWxlLCBzaGVldCkge1xuICAgIGlmIChydWxlLnR5cGUgIT09ICdzdHlsZScgfHwgIXNoZWV0KSByZXR1cm47XG4gICAgaGFuZGxlTmVzdGVkR2xvYmFsQ29udGFpbmVyUnVsZShydWxlLCBzaGVldCk7XG4gICAgaGFuZGxlUHJlZml4ZWRHbG9iYWxSdWxlKHJ1bGUsIHNoZWV0KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgb25DcmVhdGVSdWxlOiBvbkNyZWF0ZVJ1bGUsXG4gICAgb25Qcm9jZXNzUnVsZTogb25Qcm9jZXNzUnVsZVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBqc3NHbG9iYWw7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgc2VwYXJhdG9yUmVnRXhwID0gL1xccyosXFxzKi9nO1xudmFyIHBhcmVudFJlZ0V4cCA9IC8mL2c7XG52YXIgcmVmUmVnRXhwID0gL1xcJChbXFx3LV0rKS9nO1xuLyoqXG4gKiBDb252ZXJ0IG5lc3RlZCBydWxlcyB0byBzZXBhcmF0ZSwgcmVtb3ZlIHRoZW0gZnJvbSBvcmlnaW5hbCBzdHlsZXMuXG4gKlxuICogQHBhcmFtIHtSdWxlfSBydWxlXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGpzc05lc3RlZCgpIHtcbiAgLy8gR2V0IGEgZnVuY3Rpb24gdG8gYmUgdXNlZCBmb3IgJHJlZiByZXBsYWNlbWVudC5cbiAgZnVuY3Rpb24gZ2V0UmVwbGFjZVJlZihjb250YWluZXIsIHNoZWV0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtYXRjaCwga2V5KSB7XG4gICAgICB2YXIgcnVsZSA9IGNvbnRhaW5lci5nZXRSdWxlKGtleSkgfHwgc2hlZXQgJiYgc2hlZXQuZ2V0UnVsZShrZXkpO1xuXG4gICAgICBpZiAocnVsZSkge1xuICAgICAgICBydWxlID0gcnVsZTtcbiAgICAgICAgcmV0dXJuIHJ1bGUuc2VsZWN0b3I7XG4gICAgICB9XG5cbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiW0pTU10gQ291bGQgbm90IGZpbmQgdGhlIHJlZmVyZW5jZWQgcnVsZSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaW4gXFxcIlwiICsgKGNvbnRhaW5lci5vcHRpb25zLm1ldGEgfHwgY29udGFpbmVyLnRvU3RyaW5nKCkpICsgXCJcXFwiLlwiKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBrZXk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2VQYXJlbnRSZWZzKG5lc3RlZFByb3AsIHBhcmVudFByb3ApIHtcbiAgICB2YXIgcGFyZW50U2VsZWN0b3JzID0gcGFyZW50UHJvcC5zcGxpdChzZXBhcmF0b3JSZWdFeHApO1xuICAgIHZhciBuZXN0ZWRTZWxlY3RvcnMgPSBuZXN0ZWRQcm9wLnNwbGl0KHNlcGFyYXRvclJlZ0V4cCk7XG4gICAgdmFyIHJlc3VsdCA9ICcnO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJlbnRTZWxlY3RvcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwYXJlbnQgPSBwYXJlbnRTZWxlY3RvcnNbaV07XG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbmVzdGVkU2VsZWN0b3JzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHZhciBuZXN0ZWQgPSBuZXN0ZWRTZWxlY3RvcnNbal07XG4gICAgICAgIGlmIChyZXN1bHQpIHJlc3VsdCArPSAnLCAnOyAvLyBSZXBsYWNlIGFsbCAmIGJ5IHRoZSBwYXJlbnQgb3IgcHJlZml4ICYgd2l0aCB0aGUgcGFyZW50LlxuXG4gICAgICAgIHJlc3VsdCArPSBuZXN0ZWQuaW5kZXhPZignJicpICE9PSAtMSA/IG5lc3RlZC5yZXBsYWNlKHBhcmVudFJlZ0V4cCwgcGFyZW50KSA6IHBhcmVudCArIFwiIFwiICsgbmVzdGVkO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRPcHRpb25zKHJ1bGUsIGNvbnRhaW5lciwgcHJldk9wdGlvbnMpIHtcbiAgICAvLyBPcHRpb25zIGhhcyBiZWVuIGFscmVhZHkgY3JlYXRlZCwgbm93IHdlIG9ubHkgaW5jcmVhc2UgaW5kZXguXG4gICAgaWYgKHByZXZPcHRpb25zKSByZXR1cm4gX2V4dGVuZHMoe30sIHByZXZPcHRpb25zLCB7XG4gICAgICBpbmRleDogcHJldk9wdGlvbnMuaW5kZXggKyAxIC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuXG4gICAgfSk7XG4gICAgdmFyIG5lc3RpbmdMZXZlbCA9IHJ1bGUub3B0aW9ucy5uZXN0aW5nTGV2ZWw7XG4gICAgbmVzdGluZ0xldmVsID0gbmVzdGluZ0xldmVsID09PSB1bmRlZmluZWQgPyAxIDogbmVzdGluZ0xldmVsICsgMTtcblxuICAgIHZhciBvcHRpb25zID0gX2V4dGVuZHMoe30sIHJ1bGUub3B0aW9ucywge1xuICAgICAgbmVzdGluZ0xldmVsOiBuZXN0aW5nTGV2ZWwsXG4gICAgICBpbmRleDogY29udGFpbmVyLmluZGV4T2YocnVsZSkgKyAxIC8vIFdlIGRvbid0IG5lZWQgdGhlIHBhcmVudCBuYW1lIHRvIGJlIHNldCBvcHRpb25zIGZvciBjaGxpZC5cblxuICAgIH0pO1xuXG4gICAgZGVsZXRlIG9wdGlvbnMubmFtZTtcbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uUHJvY2Vzc1N0eWxlKHN0eWxlLCBydWxlLCBzaGVldCkge1xuICAgIGlmIChydWxlLnR5cGUgIT09ICdzdHlsZScpIHJldHVybiBzdHlsZTtcbiAgICB2YXIgc3R5bGVSdWxlID0gcnVsZTtcbiAgICB2YXIgY29udGFpbmVyID0gc3R5bGVSdWxlLm9wdGlvbnMucGFyZW50O1xuICAgIHZhciBvcHRpb25zO1xuICAgIHZhciByZXBsYWNlUmVmO1xuXG4gICAgZm9yICh2YXIgcHJvcCBpbiBzdHlsZSkge1xuICAgICAgdmFyIGlzTmVzdGVkID0gcHJvcC5pbmRleE9mKCcmJykgIT09IC0xO1xuICAgICAgdmFyIGlzTmVzdGVkQ29uZGl0aW9uYWwgPSBwcm9wWzBdID09PSAnQCc7XG4gICAgICBpZiAoIWlzTmVzdGVkICYmICFpc05lc3RlZENvbmRpdGlvbmFsKSBjb250aW51ZTtcbiAgICAgIG9wdGlvbnMgPSBnZXRPcHRpb25zKHN0eWxlUnVsZSwgY29udGFpbmVyLCBvcHRpb25zKTtcblxuICAgICAgaWYgKGlzTmVzdGVkKSB7XG4gICAgICAgIHZhciBzZWxlY3RvciA9IHJlcGxhY2VQYXJlbnRSZWZzKHByb3AsIHN0eWxlUnVsZS5zZWxlY3Rvcik7IC8vIExhemlseSBjcmVhdGUgdGhlIHJlZiByZXBsYWNlciBmdW5jdGlvbiBqdXN0IG9uY2UgZm9yXG4gICAgICAgIC8vIGFsbCBuZXN0ZWQgcnVsZXMgd2l0aGluIHRoZSBzaGVldC5cblxuICAgICAgICBpZiAoIXJlcGxhY2VSZWYpIHJlcGxhY2VSZWYgPSBnZXRSZXBsYWNlUmVmKGNvbnRhaW5lciwgc2hlZXQpOyAvLyBSZXBsYWNlIGFsbCAkcmVmcy5cblxuICAgICAgICBzZWxlY3RvciA9IHNlbGVjdG9yLnJlcGxhY2UocmVmUmVnRXhwLCByZXBsYWNlUmVmKTtcbiAgICAgICAgY29udGFpbmVyLmFkZFJ1bGUoc2VsZWN0b3IsIHN0eWxlW3Byb3BdLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvclxuICAgICAgICB9KSk7XG4gICAgICB9IGVsc2UgaWYgKGlzTmVzdGVkQ29uZGl0aW9uYWwpIHtcbiAgICAgICAgLy8gUGxhY2UgY29uZGl0aW9uYWwgcmlnaHQgYWZ0ZXIgdGhlIHBhcmVudCBydWxlIHRvIGVuc3VyZSByaWdodCBvcmRlcmluZy5cbiAgICAgICAgY29udGFpbmVyLmFkZFJ1bGUocHJvcCwge30sIG9wdGlvbnMpIC8vIEZsb3cgZXhwZWN0cyBtb3JlIG9wdGlvbnMgYnV0IHRoZXkgYXJlbid0IHJlcXVpcmVkXG4gICAgICAgIC8vIEFuZCBmbG93IGRvZXNuJ3Qga25vdyB0aGlzIHdpbGwgYWx3YXlzIGJlIGEgU3R5bGVSdWxlIHdoaWNoIGhhcyB0aGUgYWRkUnVsZSBtZXRob2RcbiAgICAgICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdXNlXVxuICAgICAgICAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICAgICAgLmFkZFJ1bGUoc3R5bGVSdWxlLmtleSwgc3R5bGVbcHJvcF0sIHtcbiAgICAgICAgICBzZWxlY3Rvcjogc3R5bGVSdWxlLnNlbGVjdG9yXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBkZWxldGUgc3R5bGVbcHJvcF07XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBvblByb2Nlc3NTdHlsZTogb25Qcm9jZXNzU3R5bGVcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQganNzTmVzdGVkO1xuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2dcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS9cbnZhciBjYWNoZSA9IHt9XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcilcbiAgcmV0dXJuIChjYWNoZVtuYW1lXSA9IG1zUGF0dGVybi50ZXN0KGhOYW1lKSA/ICctJyArIGhOYW1lIDogaE5hbWUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGh5cGhlbmF0ZVN0eWxlTmFtZVxuIiwiaW1wb3J0IGh5cGhlbmF0ZSBmcm9tICdoeXBoZW5hdGUtc3R5bGUtbmFtZSc7XG5cbi8qKlxuICogQ29udmVydCBjYW1lbCBjYXNlZCBwcm9wZXJ0eSBuYW1lcyB0byBkYXNoIHNlcGFyYXRlZC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gc3R5bGVcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xuXG5mdW5jdGlvbiBjb252ZXJ0Q2FzZShzdHlsZSkge1xuICB2YXIgY29udmVydGVkID0ge307XG5cbiAgZm9yICh2YXIgcHJvcCBpbiBzdHlsZSkge1xuICAgIHZhciBrZXkgPSBwcm9wLmluZGV4T2YoJy0tJykgPT09IDAgPyBwcm9wIDogaHlwaGVuYXRlKHByb3ApO1xuICAgIGNvbnZlcnRlZFtrZXldID0gc3R5bGVbcHJvcF07XG4gIH1cblxuICBpZiAoc3R5bGUuZmFsbGJhY2tzKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc3R5bGUuZmFsbGJhY2tzKSkgY29udmVydGVkLmZhbGxiYWNrcyA9IHN0eWxlLmZhbGxiYWNrcy5tYXAoY29udmVydENhc2UpO2Vsc2UgY29udmVydGVkLmZhbGxiYWNrcyA9IGNvbnZlcnRDYXNlKHN0eWxlLmZhbGxiYWNrcyk7XG4gIH1cblxuICByZXR1cm4gY29udmVydGVkO1xufVxuLyoqXG4gKiBBbGxvdyBjYW1lbCBjYXNlZCBwcm9wZXJ0eSBuYW1lcyBieSBjb252ZXJ0aW5nIHRoZW0gYmFjayB0byBkYXNoZXJpemVkLlxuICpcbiAqIEBwYXJhbSB7UnVsZX0gcnVsZVxuICovXG5cblxuZnVuY3Rpb24gY2FtZWxDYXNlKCkge1xuICBmdW5jdGlvbiBvblByb2Nlc3NTdHlsZShzdHlsZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgICAgLy8gSGFuZGxlIHJ1bGVzIGxpa2UgQGZvbnQtZmFjZSwgd2hpY2ggY2FuIGhhdmUgbXVsdGlwbGUgc3R5bGVzIGluIGFuIGFycmF5XG4gICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgc3R5bGUubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIHN0eWxlW2luZGV4XSA9IGNvbnZlcnRDYXNlKHN0eWxlW2luZGV4XSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29udmVydENhc2Uoc3R5bGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25DaGFuZ2VWYWx1ZSh2YWx1ZSwgcHJvcCwgcnVsZSkge1xuICAgIGlmIChwcm9wLmluZGV4T2YoJy0tJykgPT09IDApIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICB2YXIgaHlwaGVuYXRlZFByb3AgPSBoeXBoZW5hdGUocHJvcCk7IC8vIFRoZXJlIHdhcyBubyBjYW1lbCBjYXNlIGluIHBsYWNlXG5cbiAgICBpZiAocHJvcCA9PT0gaHlwaGVuYXRlZFByb3ApIHJldHVybiB2YWx1ZTtcbiAgICBydWxlLnByb3AoaHlwaGVuYXRlZFByb3AsIHZhbHVlKTsgLy8gQ29yZSB3aWxsIGlnbm9yZSB0aGF0IHByb3BlcnR5IHZhbHVlIHdlIHNldCB0aGUgcHJvcGVyIG9uZSBhYm92ZS5cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBvblByb2Nlc3NTdHlsZTogb25Qcm9jZXNzU3R5bGUsXG4gICAgb25DaGFuZ2VWYWx1ZTogb25DaGFuZ2VWYWx1ZVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjYW1lbENhc2U7XG4iLCJpbXBvcnQgeyBoYXNDU1NUT01TdXBwb3J0IH0gZnJvbSAnanNzJztcblxudmFyIHB4ID0gaGFzQ1NTVE9NU3VwcG9ydCAmJiBDU1MgPyBDU1MucHggOiAncHgnO1xudmFyIG1zID0gaGFzQ1NTVE9NU3VwcG9ydCAmJiBDU1MgPyBDU1MubXMgOiAnbXMnO1xudmFyIHBlcmNlbnQgPSBoYXNDU1NUT01TdXBwb3J0ICYmIENTUyA/IENTUy5wZXJjZW50IDogJyUnO1xuLyoqXG4gKiBHZW5lcmF0ZWQganNzLXBsdWdpbi1kZWZhdWx0LXVuaXQgQ1NTIHByb3BlcnR5IHVuaXRzXG4gKlxuICogQHR5cGUgb2JqZWN0XG4gKi9cblxudmFyIGRlZmF1bHRVbml0cyA9IHtcbiAgLy8gQW5pbWF0aW9uIHByb3BlcnRpZXNcbiAgJ2FuaW1hdGlvbi1kZWxheSc6IG1zLFxuICAnYW5pbWF0aW9uLWR1cmF0aW9uJzogbXMsXG4gIC8vIEJhY2tncm91bmQgcHJvcGVydGllc1xuICAnYmFja2dyb3VuZC1wb3NpdGlvbic6IHB4LFxuICAnYmFja2dyb3VuZC1wb3NpdGlvbi14JzogcHgsXG4gICdiYWNrZ3JvdW5kLXBvc2l0aW9uLXknOiBweCxcbiAgJ2JhY2tncm91bmQtc2l6ZSc6IHB4LFxuICAvLyBCb3JkZXIgUHJvcGVydGllc1xuICBib3JkZXI6IHB4LFxuICAnYm9yZGVyLWJvdHRvbSc6IHB4LFxuICAnYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1cyc6IHB4LFxuICAnYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMnOiBweCxcbiAgJ2JvcmRlci1ib3R0b20td2lkdGgnOiBweCxcbiAgJ2JvcmRlci1sZWZ0JzogcHgsXG4gICdib3JkZXItbGVmdC13aWR0aCc6IHB4LFxuICAnYm9yZGVyLXJhZGl1cyc6IHB4LFxuICAnYm9yZGVyLXJpZ2h0JzogcHgsXG4gICdib3JkZXItcmlnaHQtd2lkdGgnOiBweCxcbiAgJ2JvcmRlci10b3AnOiBweCxcbiAgJ2JvcmRlci10b3AtbGVmdC1yYWRpdXMnOiBweCxcbiAgJ2JvcmRlci10b3AtcmlnaHQtcmFkaXVzJzogcHgsXG4gICdib3JkZXItdG9wLXdpZHRoJzogcHgsXG4gICdib3JkZXItd2lkdGgnOiBweCxcbiAgJ2JvcmRlci1ibG9jayc6IHB4LFxuICAnYm9yZGVyLWJsb2NrLWVuZCc6IHB4LFxuICAnYm9yZGVyLWJsb2NrLWVuZC13aWR0aCc6IHB4LFxuICAnYm9yZGVyLWJsb2NrLXN0YXJ0JzogcHgsXG4gICdib3JkZXItYmxvY2stc3RhcnQtd2lkdGgnOiBweCxcbiAgJ2JvcmRlci1ibG9jay13aWR0aCc6IHB4LFxuICAnYm9yZGVyLWlubGluZSc6IHB4LFxuICAnYm9yZGVyLWlubGluZS1lbmQnOiBweCxcbiAgJ2JvcmRlci1pbmxpbmUtZW5kLXdpZHRoJzogcHgsXG4gICdib3JkZXItaW5saW5lLXN0YXJ0JzogcHgsXG4gICdib3JkZXItaW5saW5lLXN0YXJ0LXdpZHRoJzogcHgsXG4gICdib3JkZXItaW5saW5lLXdpZHRoJzogcHgsXG4gICdib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzJzogcHgsXG4gICdib3JkZXItc3RhcnQtZW5kLXJhZGl1cyc6IHB4LFxuICAnYm9yZGVyLWVuZC1zdGFydC1yYWRpdXMnOiBweCxcbiAgJ2JvcmRlci1lbmQtZW5kLXJhZGl1cyc6IHB4LFxuICAvLyBNYXJnaW4gcHJvcGVydGllc1xuICBtYXJnaW46IHB4LFxuICAnbWFyZ2luLWJvdHRvbSc6IHB4LFxuICAnbWFyZ2luLWxlZnQnOiBweCxcbiAgJ21hcmdpbi1yaWdodCc6IHB4LFxuICAnbWFyZ2luLXRvcCc6IHB4LFxuICAnbWFyZ2luLWJsb2NrJzogcHgsXG4gICdtYXJnaW4tYmxvY2stZW5kJzogcHgsXG4gICdtYXJnaW4tYmxvY2stc3RhcnQnOiBweCxcbiAgJ21hcmdpbi1pbmxpbmUnOiBweCxcbiAgJ21hcmdpbi1pbmxpbmUtZW5kJzogcHgsXG4gICdtYXJnaW4taW5saW5lLXN0YXJ0JzogcHgsXG4gIC8vIFBhZGRpbmcgcHJvcGVydGllc1xuICBwYWRkaW5nOiBweCxcbiAgJ3BhZGRpbmctYm90dG9tJzogcHgsXG4gICdwYWRkaW5nLWxlZnQnOiBweCxcbiAgJ3BhZGRpbmctcmlnaHQnOiBweCxcbiAgJ3BhZGRpbmctdG9wJzogcHgsXG4gICdwYWRkaW5nLWJsb2NrJzogcHgsXG4gICdwYWRkaW5nLWJsb2NrLWVuZCc6IHB4LFxuICAncGFkZGluZy1ibG9jay1zdGFydCc6IHB4LFxuICAncGFkZGluZy1pbmxpbmUnOiBweCxcbiAgJ3BhZGRpbmctaW5saW5lLWVuZCc6IHB4LFxuICAncGFkZGluZy1pbmxpbmUtc3RhcnQnOiBweCxcbiAgLy8gTWFzayBwcm9wZXJ0aWVzXG4gICdtYXNrLXBvc2l0aW9uLXgnOiBweCxcbiAgJ21hc2stcG9zaXRpb24teSc6IHB4LFxuICAnbWFzay1zaXplJzogcHgsXG4gIC8vIFdpZHRoIGFuZCBoZWlnaHQgcHJvcGVydGllc1xuICBoZWlnaHQ6IHB4LFxuICB3aWR0aDogcHgsXG4gICdtaW4taGVpZ2h0JzogcHgsXG4gICdtYXgtaGVpZ2h0JzogcHgsXG4gICdtaW4td2lkdGgnOiBweCxcbiAgJ21heC13aWR0aCc6IHB4LFxuICAvLyBQb3NpdGlvbiBwcm9wZXJ0aWVzXG4gIGJvdHRvbTogcHgsXG4gIGxlZnQ6IHB4LFxuICB0b3A6IHB4LFxuICByaWdodDogcHgsXG4gIGluc2V0OiBweCxcbiAgJ2luc2V0LWJsb2NrJzogcHgsXG4gICdpbnNldC1ibG9jay1lbmQnOiBweCxcbiAgJ2luc2V0LWJsb2NrLXN0YXJ0JzogcHgsXG4gICdpbnNldC1pbmxpbmUnOiBweCxcbiAgJ2luc2V0LWlubGluZS1lbmQnOiBweCxcbiAgJ2luc2V0LWlubGluZS1zdGFydCc6IHB4LFxuICAvLyBTaGFkb3cgcHJvcGVydGllc1xuICAnYm94LXNoYWRvdyc6IHB4LFxuICAndGV4dC1zaGFkb3cnOiBweCxcbiAgLy8gQ29sdW1uIHByb3BlcnRpZXNcbiAgJ2NvbHVtbi1nYXAnOiBweCxcbiAgJ2NvbHVtbi1ydWxlJzogcHgsXG4gICdjb2x1bW4tcnVsZS13aWR0aCc6IHB4LFxuICAnY29sdW1uLXdpZHRoJzogcHgsXG4gIC8vIEZvbnQgYW5kIHRleHQgcHJvcGVydGllc1xuICAnZm9udC1zaXplJzogcHgsXG4gICdmb250LXNpemUtZGVsdGEnOiBweCxcbiAgJ2xldHRlci1zcGFjaW5nJzogcHgsXG4gICd0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzJzogcHgsXG4gICd0ZXh0LWluZGVudCc6IHB4LFxuICAndGV4dC1zdHJva2UnOiBweCxcbiAgJ3RleHQtc3Ryb2tlLXdpZHRoJzogcHgsXG4gICd3b3JkLXNwYWNpbmcnOiBweCxcbiAgLy8gTW90aW9uIHByb3BlcnRpZXNcbiAgbW90aW9uOiBweCxcbiAgJ21vdGlvbi1vZmZzZXQnOiBweCxcbiAgLy8gT3V0bGluZSBwcm9wZXJ0aWVzXG4gIG91dGxpbmU6IHB4LFxuICAnb3V0bGluZS1vZmZzZXQnOiBweCxcbiAgJ291dGxpbmUtd2lkdGgnOiBweCxcbiAgLy8gUGVyc3BlY3RpdmUgcHJvcGVydGllc1xuICBwZXJzcGVjdGl2ZTogcHgsXG4gICdwZXJzcGVjdGl2ZS1vcmlnaW4teCc6IHBlcmNlbnQsXG4gICdwZXJzcGVjdGl2ZS1vcmlnaW4teSc6IHBlcmNlbnQsXG4gIC8vIFRyYW5zZm9ybSBwcm9wZXJ0aWVzXG4gICd0cmFuc2Zvcm0tb3JpZ2luJzogcGVyY2VudCxcbiAgJ3RyYW5zZm9ybS1vcmlnaW4teCc6IHBlcmNlbnQsXG4gICd0cmFuc2Zvcm0tb3JpZ2luLXknOiBwZXJjZW50LFxuICAndHJhbnNmb3JtLW9yaWdpbi16JzogcGVyY2VudCxcbiAgLy8gVHJhbnNpdGlvbiBwcm9wZXJ0aWVzXG4gICd0cmFuc2l0aW9uLWRlbGF5JzogbXMsXG4gICd0cmFuc2l0aW9uLWR1cmF0aW9uJzogbXMsXG4gIC8vIEFsaWdubWVudCBwcm9wZXJ0aWVzXG4gICd2ZXJ0aWNhbC1hbGlnbic6IHB4LFxuICAnZmxleC1iYXNpcyc6IHB4LFxuICAvLyBTb21lIHJhbmRvbSBwcm9wZXJ0aWVzXG4gICdzaGFwZS1tYXJnaW4nOiBweCxcbiAgc2l6ZTogcHgsXG4gIGdhcDogcHgsXG4gIC8vIEdyaWQgcHJvcGVydGllc1xuICBncmlkOiBweCxcbiAgJ2dyaWQtZ2FwJzogcHgsXG4gICdyb3ctZ2FwJzogcHgsXG4gICdncmlkLXJvdy1nYXAnOiBweCxcbiAgJ2dyaWQtY29sdW1uLWdhcCc6IHB4LFxuICAnZ3JpZC10ZW1wbGF0ZS1yb3dzJzogcHgsXG4gICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnOiBweCxcbiAgJ2dyaWQtYXV0by1yb3dzJzogcHgsXG4gICdncmlkLWF1dG8tY29sdW1ucyc6IHB4LFxuICAvLyBOb3QgZXhpc3RpbmcgcHJvcGVydGllcy5cbiAgLy8gVXNlZCB0byBhdm9pZCBpc3N1ZXMgd2l0aCBqc3MtcGx1Z2luLWV4cGFuZCBpbnRlZ3JhdGlvbi5cbiAgJ2JveC1zaGFkb3cteCc6IHB4LFxuICAnYm94LXNoYWRvdy15JzogcHgsXG4gICdib3gtc2hhZG93LWJsdXInOiBweCxcbiAgJ2JveC1zaGFkb3ctc3ByZWFkJzogcHgsXG4gICdmb250LWxpbmUtaGVpZ2h0JzogcHgsXG4gICd0ZXh0LXNoYWRvdy14JzogcHgsXG4gICd0ZXh0LXNoYWRvdy15JzogcHgsXG4gICd0ZXh0LXNoYWRvdy1ibHVyJzogcHhcbn07XG5cbi8qKlxuICogQ2xvbmVzIHRoZSBvYmplY3QgYW5kIGFkZHMgYSBjYW1lbCBjYXNlZCBwcm9wZXJ0eSB2ZXJzaW9uLlxuICovXG5mdW5jdGlvbiBhZGRDYW1lbENhc2VkVmVyc2lvbihvYmopIHtcbiAgdmFyIHJlZ0V4cCA9IC8oLVthLXpdKS9nO1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShzdHIpIHtcbiAgICByZXR1cm4gc3RyWzFdLnRvVXBwZXJDYXNlKCk7XG4gIH07XG5cbiAgdmFyIG5ld09iaiA9IHt9O1xuXG4gIGZvciAodmFyIF9rZXkgaW4gb2JqKSB7XG4gICAgbmV3T2JqW19rZXldID0gb2JqW19rZXldO1xuICAgIG5ld09ialtfa2V5LnJlcGxhY2UocmVnRXhwLCByZXBsYWNlKV0gPSBvYmpbX2tleV07XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG52YXIgdW5pdHMgPSBhZGRDYW1lbENhc2VkVmVyc2lvbihkZWZhdWx0VW5pdHMpO1xuLyoqXG4gKiBSZWN1cnNpdmUgZGVlcCBzdHlsZSBwYXNzaW5nIGZ1bmN0aW9uXG4gKi9cblxuZnVuY3Rpb24gaXRlcmF0ZShwcm9wLCB2YWx1ZSwgb3B0aW9ucykge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHZhbHVlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhbHVlW2ldID0gaXRlcmF0ZShwcm9wLCB2YWx1ZVtpXSwgb3B0aW9ucyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAocHJvcCA9PT0gJ2ZhbGxiYWNrcycpIHtcbiAgICAgIGZvciAodmFyIGlubmVyUHJvcCBpbiB2YWx1ZSkge1xuICAgICAgICB2YWx1ZVtpbm5lclByb3BdID0gaXRlcmF0ZShpbm5lclByb3AsIHZhbHVlW2lubmVyUHJvcF0sIG9wdGlvbnMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKHZhciBfaW5uZXJQcm9wIGluIHZhbHVlKSB7XG4gICAgICAgIHZhbHVlW19pbm5lclByb3BdID0gaXRlcmF0ZShwcm9wICsgXCItXCIgKyBfaW5uZXJQcm9wLCB2YWx1ZVtfaW5uZXJQcm9wXSwgb3B0aW9ucyk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgIU51bWJlci5pc05hTih2YWx1ZSkpIHtcbiAgICB2YXIgdW5pdCA9IG9wdGlvbnNbcHJvcF0gfHwgdW5pdHNbcHJvcF07IC8vIEFkZCB0aGUgdW5pdCBpZiBhdmFpbGFibGUsIGV4Y2VwdCBmb3IgdGhlIHNwZWNpYWwgY2FzZSBvZiAwcHguXG5cbiAgICBpZiAodW5pdCAmJiAhKHZhbHVlID09PSAwICYmIHVuaXQgPT09IHB4KSkge1xuICAgICAgcmV0dXJuIHR5cGVvZiB1bml0ID09PSAnZnVuY3Rpb24nID8gdW5pdCh2YWx1ZSkudG9TdHJpbmcoKSA6IFwiXCIgKyB2YWx1ZSArIHVuaXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59XG4vKipcbiAqIEFkZCB1bml0IHRvIG51bWVyaWMgdmFsdWVzLlxuICovXG5cblxuZnVuY3Rpb24gZGVmYXVsdFVuaXQob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIGNhbWVsQ2FzZWRPcHRpb25zID0gYWRkQ2FtZWxDYXNlZFZlcnNpb24ob3B0aW9ucyk7XG5cbiAgZnVuY3Rpb24gb25Qcm9jZXNzU3R5bGUoc3R5bGUsIHJ1bGUpIHtcbiAgICBpZiAocnVsZS50eXBlICE9PSAnc3R5bGUnKSByZXR1cm4gc3R5bGU7XG5cbiAgICBmb3IgKHZhciBwcm9wIGluIHN0eWxlKSB7XG4gICAgICBzdHlsZVtwcm9wXSA9IGl0ZXJhdGUocHJvcCwgc3R5bGVbcHJvcF0sIGNhbWVsQ2FzZWRPcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICBmdW5jdGlvbiBvbkNoYW5nZVZhbHVlKHZhbHVlLCBwcm9wKSB7XG4gICAgcmV0dXJuIGl0ZXJhdGUocHJvcCwgdmFsdWUsIGNhbWVsQ2FzZWRPcHRpb25zKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgb25Qcm9jZXNzU3R5bGU6IG9uUHJvY2Vzc1N0eWxlLFxuICAgIG9uQ2hhbmdlVmFsdWU6IG9uQ2hhbmdlVmFsdWVcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVmYXVsdFVuaXQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHtcbiAgICBhcnIyW2ldID0gYXJyW2ldO1xuICB9XG5cbiAgcmV0dXJuIGFycjI7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXlcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59IiwiaW1wb3J0IGlzSW5Ccm93c2VyIGZyb20gJ2lzLWluLWJyb3dzZXInO1xuaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSc7XG5cbi8vIEV4cG9ydCBqYXZhc2NyaXB0IHN0eWxlIGFuZCBjc3Mgc3R5bGUgdmVuZG9yIHByZWZpeGVzLlxudmFyIGpzID0gJyc7XG52YXIgY3NzID0gJyc7XG52YXIgdmVuZG9yID0gJyc7XG52YXIgYnJvd3NlciA9ICcnO1xudmFyIGlzVG91Y2ggPSBpc0luQnJvd3NlciAmJiAnb250b3VjaHN0YXJ0JyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7IC8vIFdlIHNob3VsZCBub3QgZG8gYW55dGhpbmcgaWYgcmVxdWlyZWQgc2VydmVyc2lkZS5cblxuaWYgKGlzSW5Ccm93c2VyKSB7XG4gIC8vIE9yZGVyIG1hdHRlcnMuIFdlIG5lZWQgdG8gY2hlY2sgV2Via2l0IHRoZSBsYXN0IG9uZSBiZWNhdXNlXG4gIC8vIG90aGVyIHZlbmRvcnMgdXNlIHRvIGFkZCBXZWJraXQgcHJlZml4ZXMgdG8gc29tZSBwcm9wZXJ0aWVzXG4gIHZhciBqc0Nzc01hcCA9IHtcbiAgICBNb3o6ICctbW96LScsXG4gICAgbXM6ICctbXMtJyxcbiAgICBPOiAnLW8tJyxcbiAgICBXZWJraXQ6ICctd2Via2l0LSdcbiAgfTtcblxuICB2YXIgX2RvY3VtZW50JGNyZWF0ZUVsZW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpLFxuICAgICAgc3R5bGUgPSBfZG9jdW1lbnQkY3JlYXRlRWxlbWUuc3R5bGU7XG5cbiAgdmFyIHRlc3RQcm9wID0gJ1RyYW5zZm9ybSc7XG5cbiAgZm9yICh2YXIga2V5IGluIGpzQ3NzTWFwKSB7XG4gICAgaWYgKGtleSArIHRlc3RQcm9wIGluIHN0eWxlKSB7XG4gICAgICBqcyA9IGtleTtcbiAgICAgIGNzcyA9IGpzQ3NzTWFwW2tleV07XG4gICAgICBicmVhaztcbiAgICB9XG4gIH0gLy8gQ29ycmVjdGx5IGRldGVjdCB0aGUgRWRnZSBicm93c2VyLlxuXG5cbiAgaWYgKGpzID09PSAnV2Via2l0JyAmJiAnbXNIeXBoZW5zJyBpbiBzdHlsZSkge1xuICAgIGpzID0gJ21zJztcbiAgICBjc3MgPSBqc0Nzc01hcC5tcztcbiAgICBicm93c2VyID0gJ2VkZ2UnO1xuICB9IC8vIENvcnJlY3RseSBkZXRlY3QgdGhlIFNhZmFyaSBicm93c2VyLlxuXG5cbiAgaWYgKGpzID09PSAnV2Via2l0JyAmJiAnLWFwcGxlLXRyYWlsaW5nLXdvcmQnIGluIHN0eWxlKSB7XG4gICAgdmVuZG9yID0gJ2FwcGxlJztcbiAgfVxufVxuLyoqXG4gKiBWZW5kb3IgcHJlZml4IHN0cmluZyBmb3IgdGhlIGN1cnJlbnQgYnJvd3Nlci5cbiAqXG4gKiBAdHlwZSB7e2pzOiBTdHJpbmcsIGNzczogU3RyaW5nLCB2ZW5kb3I6IFN0cmluZywgYnJvd3NlcjogU3RyaW5nfX1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuXG52YXIgcHJlZml4ID0ge1xuICBqczoganMsXG4gIGNzczogY3NzLFxuICB2ZW5kb3I6IHZlbmRvcixcbiAgYnJvd3NlcjogYnJvd3NlcixcbiAgaXNUb3VjaDogaXNUb3VjaFxufTtcblxuLyoqXG4gKiBUZXN0IGlmIGEga2V5ZnJhbWUgYXQtcnVsZSBzaG91bGQgYmUgcHJlZml4ZWQgb3Igbm90XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHZlbmRvciBwcmVmaXggc3RyaW5nIGZvciB0aGUgY3VycmVudCBicm93c2VyLlxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0ZWRLZXlmcmFtZXMoa2V5KSB7XG4gIC8vIEtleWZyYW1lcyBpcyBhbHJlYWR5IHByZWZpeGVkLiBlLmcuIGtleSA9ICdALXdlYmtpdC1rZXlmcmFtZXMgYSdcbiAgaWYgKGtleVsxXSA9PT0gJy0nKSByZXR1cm4ga2V5OyAvLyBObyBuZWVkIHRvIHByZWZpeCBJRS9FZGdlLiBPbGRlciBicm93c2VycyB3aWxsIGlnbm9yZSB1bnN1cHBvcnRlZCBydWxlcy5cbiAgLy8gaHR0cHM6Ly9jYW5pdXNlLmNvbS8jc2VhcmNoPWtleWZyYW1lc1xuXG4gIGlmIChwcmVmaXguanMgPT09ICdtcycpIHJldHVybiBrZXk7XG4gIHJldHVybiBcIkBcIiArIHByZWZpeC5jc3MgKyBcImtleWZyYW1lc1wiICsga2V5LnN1YnN0cigxMCk7XG59XG5cbi8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1hcHBlYXJhbmNlXG5cbnZhciBhcHBlYXJlbmNlID0ge1xuICBub1ByZWZpbGw6IFsnYXBwZWFyYW5jZSddLFxuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCkge1xuICAgIGlmIChwcm9wICE9PSAnYXBwZWFyYW5jZScpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocHJlZml4LmpzID09PSAnbXMnKSByZXR1cm4gXCItd2Via2l0LVwiICsgcHJvcDtcbiAgICByZXR1cm4gcHJlZml4LmNzcyArIHByb3A7XG4gIH1cbn07XG5cbi8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1jb2xvci1hZGp1c3RcblxudmFyIGNvbG9yQWRqdXN0ID0ge1xuICBub1ByZWZpbGw6IFsnY29sb3ItYWRqdXN0J10sXG4gIHN1cHBvcnRlZFByb3BlcnR5OiBmdW5jdGlvbiBzdXBwb3J0ZWRQcm9wZXJ0eShwcm9wKSB7XG4gICAgaWYgKHByb3AgIT09ICdjb2xvci1hZGp1c3QnKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHByZWZpeC5qcyA9PT0gJ1dlYmtpdCcpIHJldHVybiBwcmVmaXguY3NzICsgXCJwcmludC1cIiArIHByb3A7XG4gICAgcmV0dXJuIHByb3A7XG4gIH1cbn07XG5cbnZhciByZWdFeHAgPSAvWy1cXHNdKyguKT8vZztcbi8qKlxuICogUmVwbGFjZXMgdGhlIGxldHRlciB3aXRoIHRoZSBjYXBpdGFsIGxldHRlclxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtYXRjaFxuICogQHBhcmFtIHtTdHJpbmd9IGNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHRvVXBwZXIobWF0Y2gsIGMpIHtcbiAgcmV0dXJuIGMgPyBjLnRvVXBwZXJDYXNlKCkgOiAnJztcbn1cbi8qKlxuICogQ29udmVydCBkYXNoIHNlcGFyYXRlZCBzdHJpbmdzIHRvIGNhbWVsLWNhc2VkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gY2FtZWxpemUoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShyZWdFeHAsIHRvVXBwZXIpO1xufVxuXG4vKipcbiAqIENvbnZlcnQgZGFzaCBzZXBhcmF0ZWQgc3RyaW5ncyB0byBwYXNjYWwgY2FzZWQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFzY2FsaXplKHN0cikge1xuICByZXR1cm4gY2FtZWxpemUoXCItXCIgKyBzdHIpO1xufVxuXG4vLyBidXQgd2UgY2FuIHVzZSBhIGxvbmdoYW5kIHByb3BlcnR5IGluc3RlYWQuXG4vLyBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9bWFza1xuXG52YXIgbWFzayA9IHtcbiAgbm9QcmVmaWxsOiBbJ21hc2snXSxcbiAgc3VwcG9ydGVkUHJvcGVydHk6IGZ1bmN0aW9uIHN1cHBvcnRlZFByb3BlcnR5KHByb3AsIHN0eWxlKSB7XG4gICAgaWYgKCEvXm1hc2svLnRlc3QocHJvcCkpIHJldHVybiBmYWxzZTtcblxuICAgIGlmIChwcmVmaXguanMgPT09ICdXZWJraXQnKSB7XG4gICAgICB2YXIgbG9uZ2hhbmQgPSAnbWFzay1pbWFnZSc7XG5cbiAgICAgIGlmIChjYW1lbGl6ZShsb25naGFuZCkgaW4gc3R5bGUpIHtcbiAgICAgICAgcmV0dXJuIHByb3A7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcmVmaXguanMgKyBwYXNjYWxpemUobG9uZ2hhbmQpIGluIHN0eWxlKSB7XG4gICAgICAgIHJldHVybiBwcmVmaXguY3NzICsgcHJvcDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcDtcbiAgfVxufTtcblxuLy8gaHR0cHM6Ly9jYW5pdXNlLmNvbS8jc2VhcmNoPXRleHQtb3JpZW50YXRpb25cblxudmFyIHRleHRPcmllbnRhdGlvbiA9IHtcbiAgbm9QcmVmaWxsOiBbJ3RleHQtb3JpZW50YXRpb24nXSxcbiAgc3VwcG9ydGVkUHJvcGVydHk6IGZ1bmN0aW9uIHN1cHBvcnRlZFByb3BlcnR5KHByb3ApIHtcbiAgICBpZiAocHJvcCAhPT0gJ3RleHQtb3JpZW50YXRpb24nKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAocHJlZml4LnZlbmRvciA9PT0gJ2FwcGxlJyAmJiAhcHJlZml4LmlzVG91Y2gpIHtcbiAgICAgIHJldHVybiBwcmVmaXguY3NzICsgcHJvcDtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcDtcbiAgfVxufTtcblxuLy8gaHR0cHM6Ly9jYW5pdXNlLmNvbS8jc2VhcmNoPXRyYW5zZm9ybVxuXG52YXIgdHJhbnNmb3JtID0ge1xuICBub1ByZWZpbGw6IFsndHJhbnNmb3JtJ10sXG4gIHN1cHBvcnRlZFByb3BlcnR5OiBmdW5jdGlvbiBzdXBwb3J0ZWRQcm9wZXJ0eShwcm9wLCBzdHlsZSwgb3B0aW9ucykge1xuICAgIGlmIChwcm9wICE9PSAndHJhbnNmb3JtJykgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKG9wdGlvbnMudHJhbnNmb3JtKSB7XG4gICAgICByZXR1cm4gcHJvcDtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJlZml4LmNzcyArIHByb3A7XG4gIH1cbn07XG5cbi8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI3NlYXJjaD10cmFuc2l0aW9uXG5cbnZhciB0cmFuc2l0aW9uID0ge1xuICBub1ByZWZpbGw6IFsndHJhbnNpdGlvbiddLFxuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCwgc3R5bGUsIG9wdGlvbnMpIHtcbiAgICBpZiAocHJvcCAhPT0gJ3RyYW5zaXRpb24nKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAob3B0aW9ucy50cmFuc2l0aW9uKSB7XG4gICAgICByZXR1cm4gcHJvcDtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJlZml4LmNzcyArIHByb3A7XG4gIH1cbn07XG5cbi8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI3NlYXJjaD13cml0aW5nLW1vZGVcblxudmFyIHdyaXRpbmdNb2RlID0ge1xuICBub1ByZWZpbGw6IFsnd3JpdGluZy1tb2RlJ10sXG4gIHN1cHBvcnRlZFByb3BlcnR5OiBmdW5jdGlvbiBzdXBwb3J0ZWRQcm9wZXJ0eShwcm9wKSB7XG4gICAgaWYgKHByb3AgIT09ICd3cml0aW5nLW1vZGUnKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAocHJlZml4LmpzID09PSAnV2Via2l0JyB8fCBwcmVmaXguanMgPT09ICdtcycgJiYgcHJlZml4LmJyb3dzZXIgIT09ICdlZGdlJykge1xuICAgICAgcmV0dXJuIHByZWZpeC5jc3MgKyBwcm9wO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wO1xuICB9XG59O1xuXG4vLyBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9dXNlci1zZWxlY3RcblxudmFyIHVzZXJTZWxlY3QgPSB7XG4gIG5vUHJlZmlsbDogWyd1c2VyLXNlbGVjdCddLFxuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCkge1xuICAgIGlmIChwcm9wICE9PSAndXNlci1zZWxlY3QnKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAocHJlZml4LmpzID09PSAnTW96JyB8fCBwcmVmaXguanMgPT09ICdtcycgfHwgcHJlZml4LnZlbmRvciA9PT0gJ2FwcGxlJykge1xuICAgICAgcmV0dXJuIHByZWZpeC5jc3MgKyBwcm9wO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wO1xuICB9XG59O1xuXG4vLyBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9bXVsdGljb2x1bW5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3N0Y3NzL2F1dG9wcmVmaXhlci9pc3N1ZXMvNDkxXG4vLyBodHRwczovL2dpdGh1Yi5jb20vcG9zdGNzcy9hdXRvcHJlZml4ZXIvaXNzdWVzLzE3N1xuXG52YXIgYnJlYWtQcm9wc09sZCA9IHtcbiAgc3VwcG9ydGVkUHJvcGVydHk6IGZ1bmN0aW9uIHN1cHBvcnRlZFByb3BlcnR5KHByb3AsIHN0eWxlKSB7XG4gICAgaWYgKCEvXmJyZWFrLS8udGVzdChwcm9wKSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHByZWZpeC5qcyA9PT0gJ1dlYmtpdCcpIHtcbiAgICAgIHZhciBqc1Byb3AgPSBcIldlYmtpdENvbHVtblwiICsgcGFzY2FsaXplKHByb3ApO1xuICAgICAgcmV0dXJuIGpzUHJvcCBpbiBzdHlsZSA/IHByZWZpeC5jc3MgKyBcImNvbHVtbi1cIiArIHByb3AgOiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAocHJlZml4LmpzID09PSAnTW96Jykge1xuICAgICAgdmFyIF9qc1Byb3AgPSBcInBhZ2VcIiArIHBhc2NhbGl6ZShwcm9wKTtcblxuICAgICAgcmV0dXJuIF9qc1Byb3AgaW4gc3R5bGUgPyBcInBhZ2UtXCIgKyBwcm9wIDogZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3Bvc3Rjc3MvYXV0b3ByZWZpeGVyL2lzc3Vlcy8zMjQuXG5cbnZhciBpbmxpbmVMb2dpY2FsT2xkID0ge1xuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCwgc3R5bGUpIHtcbiAgICBpZiAoIS9eKGJvcmRlcnxtYXJnaW58cGFkZGluZyktaW5saW5lLy50ZXN0KHByb3ApKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHByZWZpeC5qcyA9PT0gJ01veicpIHJldHVybiBwcm9wO1xuICAgIHZhciBuZXdQcm9wID0gcHJvcC5yZXBsYWNlKCctaW5saW5lJywgJycpO1xuICAgIHJldHVybiBwcmVmaXguanMgKyBwYXNjYWxpemUobmV3UHJvcCkgaW4gc3R5bGUgPyBwcmVmaXguY3NzICsgbmV3UHJvcCA6IGZhbHNlO1xuICB9XG59O1xuXG4vLyBDYW1lbGl6YXRpb24gaXMgcmVxdWlyZWQgYmVjYXVzZSB3ZSBjYW4ndCB0ZXN0IHVzaW5nLlxuLy8gQ1NTIHN5bnRheCBmb3IgZS5nLiBpbiBGRi5cblxudmFyIHVucHJlZml4ZWQgPSB7XG4gIHN1cHBvcnRlZFByb3BlcnR5OiBmdW5jdGlvbiBzdXBwb3J0ZWRQcm9wZXJ0eShwcm9wLCBzdHlsZSkge1xuICAgIHJldHVybiBjYW1lbGl6ZShwcm9wKSBpbiBzdHlsZSA/IHByb3AgOiBmYWxzZTtcbiAgfVxufTtcblxudmFyIHByZWZpeGVkID0ge1xuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCwgc3R5bGUpIHtcbiAgICB2YXIgcGFzY2FsaXplZCA9IHBhc2NhbGl6ZShwcm9wKTsgLy8gUmV0dXJuIGN1c3RvbSBDU1MgdmFyaWFibGUgd2l0aG91dCBwcmVmaXhpbmcuXG5cbiAgICBpZiAocHJvcFswXSA9PT0gJy0nKSByZXR1cm4gcHJvcDsgLy8gUmV0dXJuIGFscmVhZHkgcHJlZml4ZWQgdmFsdWUgd2l0aG91dCBwcmVmaXhpbmcuXG5cbiAgICBpZiAocHJvcFswXSA9PT0gJy0nICYmIHByb3BbMV0gPT09ICctJykgcmV0dXJuIHByb3A7XG4gICAgaWYgKHByZWZpeC5qcyArIHBhc2NhbGl6ZWQgaW4gc3R5bGUpIHJldHVybiBwcmVmaXguY3NzICsgcHJvcDsgLy8gVHJ5IHdlYmtpdCBmYWxsYmFjay5cblxuICAgIGlmIChwcmVmaXguanMgIT09ICdXZWJraXQnICYmIFwiV2Via2l0XCIgKyBwYXNjYWxpemVkIGluIHN0eWxlKSByZXR1cm4gXCItd2Via2l0LVwiICsgcHJvcDtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbi8vIGh0dHBzOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1zY3JvbGwtc25hcFxuXG52YXIgc2Nyb2xsU25hcCA9IHtcbiAgc3VwcG9ydGVkUHJvcGVydHk6IGZ1bmN0aW9uIHN1cHBvcnRlZFByb3BlcnR5KHByb3ApIHtcbiAgICBpZiAocHJvcC5zdWJzdHJpbmcoMCwgMTEpICE9PSAnc2Nyb2xsLXNuYXAnKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAocHJlZml4LmpzID09PSAnbXMnKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByZWZpeC5jc3MgKyBwcm9wO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wO1xuICB9XG59O1xuXG4vLyBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9b3ZlcnNjcm9sbC1iZWhhdmlvclxuXG52YXIgb3ZlcnNjcm9sbEJlaGF2aW9yID0ge1xuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCkge1xuICAgIGlmIChwcm9wICE9PSAnb3ZlcnNjcm9sbC1iZWhhdmlvcicpIHJldHVybiBmYWxzZTtcblxuICAgIGlmIChwcmVmaXguanMgPT09ICdtcycpIHtcbiAgICAgIHJldHVybiBwcmVmaXguY3NzICsgXCJzY3JvbGwtY2hhaW5pbmdcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcDtcbiAgfVxufTtcblxudmFyIHByb3BNYXAgPSB7XG4gICdmbGV4LWdyb3cnOiAnZmxleC1wb3NpdGl2ZScsXG4gICdmbGV4LXNocmluayc6ICdmbGV4LW5lZ2F0aXZlJyxcbiAgJ2ZsZXgtYmFzaXMnOiAnZmxleC1wcmVmZXJyZWQtc2l6ZScsXG4gICdqdXN0aWZ5LWNvbnRlbnQnOiAnZmxleC1wYWNrJyxcbiAgb3JkZXI6ICdmbGV4LW9yZGVyJyxcbiAgJ2FsaWduLWl0ZW1zJzogJ2ZsZXgtYWxpZ24nLFxuICAnYWxpZ24tY29udGVudCc6ICdmbGV4LWxpbmUtcGFjaycgLy8gJ2FsaWduLXNlbGYnIGlzIGhhbmRsZWQgYnkgJ2FsaWduLXNlbGYnIHBsdWdpbi5cblxufTsgLy8gU3VwcG9ydCBvbGQgZmxleCBzcGVjIGZyb20gMjAxMi5cblxudmFyIGZsZXgyMDEyID0ge1xuICBzdXBwb3J0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gc3VwcG9ydGVkUHJvcGVydHkocHJvcCwgc3R5bGUpIHtcbiAgICB2YXIgbmV3UHJvcCA9IHByb3BNYXBbcHJvcF07XG4gICAgaWYgKCFuZXdQcm9wKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHByZWZpeC5qcyArIHBhc2NhbGl6ZShuZXdQcm9wKSBpbiBzdHlsZSA/IHByZWZpeC5jc3MgKyBuZXdQcm9wIDogZmFsc2U7XG4gIH1cbn07XG5cbnZhciBwcm9wTWFwJDEgPSB7XG4gIGZsZXg6ICdib3gtZmxleCcsXG4gICdmbGV4LWdyb3cnOiAnYm94LWZsZXgnLFxuICAnZmxleC1kaXJlY3Rpb24nOiBbJ2JveC1vcmllbnQnLCAnYm94LWRpcmVjdGlvbiddLFxuICBvcmRlcjogJ2JveC1vcmRpbmFsLWdyb3VwJyxcbiAgJ2FsaWduLWl0ZW1zJzogJ2JveC1hbGlnbicsXG4gICdmbGV4LWZsb3cnOiBbJ2JveC1vcmllbnQnLCAnYm94LWRpcmVjdGlvbiddLFxuICAnanVzdGlmeS1jb250ZW50JzogJ2JveC1wYWNrJ1xufTtcbnZhciBwcm9wS2V5cyA9IE9iamVjdC5rZXlzKHByb3BNYXAkMSk7XG5cbnZhciBwcmVmaXhDc3MgPSBmdW5jdGlvbiBwcmVmaXhDc3MocCkge1xuICByZXR1cm4gcHJlZml4LmNzcyArIHA7XG59OyAvLyBTdXBwb3J0IG9sZCBmbGV4IHNwZWMgZnJvbSAyMDA5LlxuXG5cbnZhciBmbGV4MjAwOSA9IHtcbiAgc3VwcG9ydGVkUHJvcGVydHk6IGZ1bmN0aW9uIHN1cHBvcnRlZFByb3BlcnR5KHByb3AsIHN0eWxlLCBfcmVmKSB7XG4gICAgdmFyIG11bHRpcGxlID0gX3JlZi5tdWx0aXBsZTtcblxuICAgIGlmIChwcm9wS2V5cy5pbmRleE9mKHByb3ApID4gLTEpIHtcbiAgICAgIHZhciBuZXdQcm9wID0gcHJvcE1hcCQxW3Byb3BdO1xuXG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkobmV3UHJvcCkpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeC5qcyArIHBhc2NhbGl6ZShuZXdQcm9wKSBpbiBzdHlsZSA/IHByZWZpeC5jc3MgKyBuZXdQcm9wIDogZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICghbXVsdGlwbGUpIHJldHVybiBmYWxzZTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZXdQcm9wLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICghKHByZWZpeC5qcyArIHBhc2NhbGl6ZShuZXdQcm9wWzBdKSBpbiBzdHlsZSkpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ld1Byb3AubWFwKHByZWZpeENzcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4vLyBwbHVnaW5zID0gW1xuLy8gICAuLi5wbHVnaW5zLFxuLy8gICAgYnJlYWtQcm9wc09sZCxcbi8vICAgIGlubGluZUxvZ2ljYWxPbGQsXG4vLyAgICB1bnByZWZpeGVkLFxuLy8gICAgcHJlZml4ZWQsXG4vLyAgICBzY3JvbGxTbmFwLFxuLy8gICAgZmxleDIwMTIsXG4vLyAgICBmbGV4MjAwOVxuLy8gXVxuLy8gUGx1Z2lucyB3aXRob3V0ICdub1ByZWZpbGwnIHZhbHVlLCBnb2luZyBsYXN0LlxuLy8gJ2ZsZXgtKicgcGx1Z2lucyBzaG91bGQgYmUgYXQgdGhlIGJvdHRvbS5cbi8vICdmbGV4MjAwOScgZ29pbmcgYWZ0ZXIgJ2ZsZXgyMDEyJy5cbi8vICdwcmVmaXhlZCcgZ29pbmcgYWZ0ZXIgJ3VucHJlZml4ZWQnXG5cbnZhciBwbHVnaW5zID0gW2FwcGVhcmVuY2UsIGNvbG9yQWRqdXN0LCBtYXNrLCB0ZXh0T3JpZW50YXRpb24sIHRyYW5zZm9ybSwgdHJhbnNpdGlvbiwgd3JpdGluZ01vZGUsIHVzZXJTZWxlY3QsIGJyZWFrUHJvcHNPbGQsIGlubGluZUxvZ2ljYWxPbGQsIHVucHJlZml4ZWQsIHByZWZpeGVkLCBzY3JvbGxTbmFwLCBvdmVyc2Nyb2xsQmVoYXZpb3IsIGZsZXgyMDEyLCBmbGV4MjAwOV07XG52YXIgcHJvcGVydHlEZXRlY3RvcnMgPSBwbHVnaW5zLmZpbHRlcihmdW5jdGlvbiAocCkge1xuICByZXR1cm4gcC5zdXBwb3J0ZWRQcm9wZXJ0eTtcbn0pLm1hcChmdW5jdGlvbiAocCkge1xuICByZXR1cm4gcC5zdXBwb3J0ZWRQcm9wZXJ0eTtcbn0pO1xudmFyIG5vUHJlZmlsbCA9IHBsdWdpbnMuZmlsdGVyKGZ1bmN0aW9uIChwKSB7XG4gIHJldHVybiBwLm5vUHJlZmlsbDtcbn0pLnJlZHVjZShmdW5jdGlvbiAoYSwgcCkge1xuICBhLnB1c2guYXBwbHkoYSwgX3RvQ29uc3VtYWJsZUFycmF5KHAubm9QcmVmaWxsKSk7XG4gIHJldHVybiBhO1xufSwgW10pO1xuXG52YXIgZWw7XG52YXIgY2FjaGUgPSB7fTtcblxuaWYgKGlzSW5Ccm93c2VyKSB7XG4gIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpOyAvLyBXZSB0ZXN0IGV2ZXJ5IHByb3BlcnR5IG9uIHZlbmRvciBwcmVmaXggcmVxdWlyZW1lbnQuXG4gIC8vIE9uY2UgdGVzdGVkLCByZXN1bHQgaXMgY2FjaGVkLiBJdCBnaXZlcyB1cyB1cCB0byA3MCUgcGVyZiBib29zdC5cbiAgLy8gaHR0cDovL2pzcGVyZi5jb20vZWxlbWVudC1zdHlsZS1vYmplY3QtYWNjZXNzLXZzLXBsYWluLW9iamVjdFxuICAvL1xuICAvLyBQcmVmaWxsIGNhY2hlIHdpdGgga25vd24gY3NzIHByb3BlcnRpZXMgdG8gcmVkdWNlIGFtb3VudCBvZlxuICAvLyBwcm9wZXJ0aWVzIHdlIG5lZWQgdG8gZmVhdHVyZSB0ZXN0IGF0IHJ1bnRpbWUuXG4gIC8vIGh0dHA6Ly9kYXZpZHdhbHNoLm5hbWUvdmVuZG9yLXByZWZpeFxuXG4gIHZhciBjb21wdXRlZCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgJycpO1xuXG4gIGZvciAodmFyIGtleSQxIGluIGNvbXB1dGVkKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAgIGlmICghaXNOYU4oa2V5JDEpKSBjYWNoZVtjb21wdXRlZFtrZXkkMV1dID0gY29tcHV0ZWRba2V5JDFdO1xuICB9IC8vIFByb3BlcnRpZXMgdGhhdCBjYW5ub3QgYmUgY29ycmVjdGx5IGRldGVjdGVkIHVzaW5nIHRoZVxuICAvLyBjYWNoZSBwcmVmaWxsIG1ldGhvZC5cblxuXG4gIG5vUHJlZmlsbC5mb3JFYWNoKGZ1bmN0aW9uICh4KSB7XG4gICAgcmV0dXJuIGRlbGV0ZSBjYWNoZVt4XTtcbiAgfSk7XG59XG4vKipcbiAqIFRlc3QgaWYgYSBwcm9wZXJ0eSBpcyBzdXBwb3J0ZWQsIHJldHVybnMgc3VwcG9ydGVkIHByb3BlcnR5IHdpdGggdmVuZG9yXG4gKiBwcmVmaXggaWYgcmVxdWlyZWQuIFJldHVybnMgYGZhbHNlYCBpZiBub3Qgc3VwcG9ydGVkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wIGRhc2ggc2VwYXJhdGVkXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtTdHJpbmd8Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuXG5mdW5jdGlvbiBzdXBwb3J0ZWRQcm9wZXJ0eShwcm9wLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICAvLyBGb3Igc2VydmVyLXNpZGUgcmVuZGVyaW5nLlxuICBpZiAoIWVsKSByZXR1cm4gcHJvcDsgLy8gUmVtb3ZlIGNhY2hlIGZvciBiZW5jaG1hcmsgdGVzdHMgb3IgcmV0dXJuIHByb3BlcnR5IGZyb20gdGhlIGNhY2hlLlxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ2JlbmNobWFyaycgJiYgY2FjaGVbcHJvcF0gIT0gbnVsbCkge1xuICAgIHJldHVybiBjYWNoZVtwcm9wXTtcbiAgfSAvLyBDaGVjayBpZiAndHJhbnNpdGlvbicgb3IgJ3RyYW5zZm9ybScgbmF0aXZlbHkgc3VwcG9ydGVkIGluIGJyb3dzZXIuXG5cblxuICBpZiAocHJvcCA9PT0gJ3RyYW5zaXRpb24nIHx8IHByb3AgPT09ICd0cmFuc2Zvcm0nKSB7XG4gICAgb3B0aW9uc1twcm9wXSA9IHByb3AgaW4gZWwuc3R5bGU7XG4gIH0gLy8gRmluZCBhIHBsdWdpbiBmb3IgY3VycmVudCBwcmVmaXggcHJvcGVydHkuXG5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BlcnR5RGV0ZWN0b3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2FjaGVbcHJvcF0gPSBwcm9wZXJ0eURldGVjdG9yc1tpXShwcm9wLCBlbC5zdHlsZSwgb3B0aW9ucyk7IC8vIEJyZWFrIGxvb3AsIGlmIHZhbHVlIGZvdW5kLlxuXG4gICAgaWYgKGNhY2hlW3Byb3BdKSBicmVhaztcbiAgfSAvLyBSZXNldCBzdHlsZXMgZm9yIGN1cnJlbnQgcHJvcGVydHkuXG4gIC8vIEZpcmVmb3ggY2FuIGV2ZW4gdGhyb3cgYW4gZXJyb3IgZm9yIGludmFsaWQgcHJvcGVydGllcywgZS5nLiwgXCIwXCIuXG5cblxuICB0cnkge1xuICAgIGVsLnN0eWxlW3Byb3BdID0gJyc7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBjYWNoZVtwcm9wXTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciB0cmFuc2l0aW9uUHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogMSxcbiAgJ3RyYW5zaXRpb24tcHJvcGVydHknOiAxLFxuICAnLXdlYmtpdC10cmFuc2l0aW9uJzogMSxcbiAgJy13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eSc6IDFcbn07XG52YXIgdHJhbnNQcm9wc1JlZ0V4cCA9IC8oXlxccypbXFx3LV0rKXwsIChcXHMqW1xcdy1dKykoPyFbXigpXSpcXCkpL2c7XG52YXIgZWwkMTtcbi8qKlxuICogUmV0dXJucyBwcmVmaXhlZCB2YWx1ZSB0cmFuc2l0aW9uL3RyYW5zZm9ybSBpZiBuZWVkZWQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1hdGNoXG4gKiBAcGFyYW0ge1N0cmluZ30gcDFcbiAqIEBwYXJhbSB7U3RyaW5nfSBwMlxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4VHJhbnNpdGlvbkNhbGxiYWNrKG1hdGNoLCBwMSwgcDIpIHtcbiAgaWYgKHAxID09PSAndmFyJykgcmV0dXJuICd2YXInO1xuICBpZiAocDEgPT09ICdhbGwnKSByZXR1cm4gJ2FsbCc7XG4gIGlmIChwMiA9PT0gJ2FsbCcpIHJldHVybiAnLCBhbGwnO1xuICB2YXIgcHJlZml4ZWRWYWx1ZSA9IHAxID8gc3VwcG9ydGVkUHJvcGVydHkocDEpIDogXCIsIFwiICsgc3VwcG9ydGVkUHJvcGVydHkocDIpO1xuICBpZiAoIXByZWZpeGVkVmFsdWUpIHJldHVybiBwMSB8fCBwMjtcbiAgcmV0dXJuIHByZWZpeGVkVmFsdWU7XG59XG5cbmlmIChpc0luQnJvd3NlcikgZWwkMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbi8qKlxuICogUmV0dXJucyBwcmVmaXhlZCB2YWx1ZSBpZiBuZWVkZWQuIFJldHVybnMgYGZhbHNlYCBpZiB2YWx1ZSBpcyBub3Qgc3VwcG9ydGVkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0eVxuICogQHBhcmFtIHtTdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHtTdHJpbmd8Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydGVkVmFsdWUocHJvcGVydHksIHZhbHVlKSB7XG4gIC8vIEZvciBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuXG4gIHZhciBwcmVmaXhlZFZhbHVlID0gdmFsdWU7XG4gIGlmICghZWwkMSB8fCBwcm9wZXJ0eSA9PT0gJ2NvbnRlbnQnKSByZXR1cm4gdmFsdWU7IC8vIEl0IGlzIGEgc3RyaW5nIG9yIGEgbnVtYmVyIGFzIGEgc3RyaW5nIGxpa2UgJzEnLlxuICAvLyBXZSB3YW50IG9ubHkgcHJlZml4YWJsZSB2YWx1ZXMgaGVyZS5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuXG4gIGlmICh0eXBlb2YgcHJlZml4ZWRWYWx1ZSAhPT0gJ3N0cmluZycgfHwgIWlzTmFOKHBhcnNlSW50KHByZWZpeGVkVmFsdWUsIDEwKSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZWRWYWx1ZTtcbiAgfSAvLyBDcmVhdGUgY2FjaGUga2V5IGZvciBjdXJyZW50IHZhbHVlLlxuXG5cbiAgdmFyIGNhY2hlS2V5ID0gcHJvcGVydHkgKyBwcmVmaXhlZFZhbHVlOyAvLyBSZW1vdmUgY2FjaGUgZm9yIGJlbmNobWFyayB0ZXN0cyBvciByZXR1cm4gdmFsdWUgZnJvbSBjYWNoZS5cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdiZW5jaG1hcmsnICYmIGNhY2hlJDFbY2FjaGVLZXldICE9IG51bGwpIHtcbiAgICByZXR1cm4gY2FjaGUkMVtjYWNoZUtleV07XG4gIH0gLy8gSUUgY2FuIGV2ZW4gdGhyb3cgYW4gZXJyb3IgaW4gc29tZSBjYXNlcywgZm9yIGUuZy4gc3R5bGUuY29udGVudCA9ICdiYXInLlxuXG5cbiAgdHJ5IHtcbiAgICAvLyBUZXN0IHZhbHVlIGFzIGl0IGlzLlxuICAgIGVsJDEuc3R5bGVbcHJvcGVydHldID0gcHJlZml4ZWRWYWx1ZTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gUmV0dXJuIGZhbHNlIGlmIHZhbHVlIG5vdCBzdXBwb3J0ZWQuXG4gICAgY2FjaGUkMVtjYWNoZUtleV0gPSBmYWxzZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gLy8gSWYgJ3RyYW5zaXRpb24nIG9yICd0cmFuc2l0aW9uLXByb3BlcnR5JyBwcm9wZXJ0eS5cblxuXG4gIGlmICh0cmFuc2l0aW9uUHJvcGVydGllc1twcm9wZXJ0eV0pIHtcbiAgICBwcmVmaXhlZFZhbHVlID0gcHJlZml4ZWRWYWx1ZS5yZXBsYWNlKHRyYW5zUHJvcHNSZWdFeHAsIHByZWZpeFRyYW5zaXRpb25DYWxsYmFjayk7XG4gIH0gZWxzZSBpZiAoZWwkMS5zdHlsZVtwcm9wZXJ0eV0gPT09ICcnKSB7XG4gICAgLy8gVmFsdWUgd2l0aCBhIHZlbmRvciBwcmVmaXguXG4gICAgcHJlZml4ZWRWYWx1ZSA9IHByZWZpeC5jc3MgKyBwcmVmaXhlZFZhbHVlOyAvLyBIYXJkY29kZSB0ZXN0IHRvIGNvbnZlcnQgXCJmbGV4XCIgdG8gXCItbXMtZmxleGJveFwiIGZvciBJRTEwLlxuXG4gICAgaWYgKHByZWZpeGVkVmFsdWUgPT09ICctbXMtZmxleCcpIGVsJDEuc3R5bGVbcHJvcGVydHldID0gJy1tcy1mbGV4Ym94JzsgLy8gVGVzdCBwcmVmaXhlZCB2YWx1ZS5cblxuICAgIGVsJDEuc3R5bGVbcHJvcGVydHldID0gcHJlZml4ZWRWYWx1ZTsgLy8gUmV0dXJuIGZhbHNlIGlmIHZhbHVlIG5vdCBzdXBwb3J0ZWQuXG5cbiAgICBpZiAoZWwkMS5zdHlsZVtwcm9wZXJ0eV0gPT09ICcnKSB7XG4gICAgICBjYWNoZSQxW2NhY2hlS2V5XSA9IGZhbHNlO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSAvLyBSZXNldCBzdHlsZXMgZm9yIGN1cnJlbnQgcHJvcGVydHkuXG5cblxuICBlbCQxLnN0eWxlW3Byb3BlcnR5XSA9ICcnOyAvLyBXcml0ZSBjdXJyZW50IHZhbHVlIHRvIGNhY2hlLlxuXG4gIGNhY2hlJDFbY2FjaGVLZXldID0gcHJlZml4ZWRWYWx1ZTtcbiAgcmV0dXJuIGNhY2hlJDFbY2FjaGVLZXldO1xufVxuXG5leHBvcnQgeyBwcmVmaXgsIHN1cHBvcnRlZEtleWZyYW1lcywgc3VwcG9ydGVkUHJvcGVydHksIHN1cHBvcnRlZFZhbHVlIH07XG4iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufSIsImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRob3V0SG9sZXNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZFwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59IiwiaW1wb3J0IHsgc3VwcG9ydGVkS2V5ZnJhbWVzLCBzdXBwb3J0ZWRWYWx1ZSwgc3VwcG9ydGVkUHJvcGVydHkgfSBmcm9tICdjc3MtdmVuZG9yJztcbmltcG9ydCB7IHRvQ3NzVmFsdWUgfSBmcm9tICdqc3MnO1xuXG4vKipcbiAqIEFkZCB2ZW5kb3IgcHJlZml4IHRvIGEgcHJvcGVydHkgbmFtZSB3aGVuIG5lZWRlZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGpzc1ZlbmRvclByZWZpeGVyKCkge1xuICBmdW5jdGlvbiBvblByb2Nlc3NSdWxlKHJ1bGUpIHtcbiAgICBpZiAocnVsZS50eXBlID09PSAna2V5ZnJhbWVzJykge1xuICAgICAgdmFyIGF0UnVsZSA9IHJ1bGU7XG4gICAgICBhdFJ1bGUuYXQgPSBzdXBwb3J0ZWRLZXlmcmFtZXMoYXRSdWxlLmF0KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwcmVmaXhTdHlsZShzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3AgaW4gc3R5bGUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BdO1xuXG4gICAgICBpZiAocHJvcCA9PT0gJ2ZhbGxiYWNrcycgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgc3R5bGVbcHJvcF0gPSB2YWx1ZS5tYXAocHJlZml4U3R5bGUpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGNoYW5nZVByb3AgPSBmYWxzZTtcbiAgICAgIHZhciBzdXBwb3J0ZWRQcm9wID0gc3VwcG9ydGVkUHJvcGVydHkocHJvcCk7XG4gICAgICBpZiAoc3VwcG9ydGVkUHJvcCAmJiBzdXBwb3J0ZWRQcm9wICE9PSBwcm9wKSBjaGFuZ2VQcm9wID0gdHJ1ZTtcbiAgICAgIHZhciBjaGFuZ2VWYWx1ZSA9IGZhbHNlO1xuICAgICAgdmFyIHN1cHBvcnRlZFZhbHVlJDEgPSBzdXBwb3J0ZWRWYWx1ZShzdXBwb3J0ZWRQcm9wLCB0b0Nzc1ZhbHVlKHZhbHVlKSk7XG4gICAgICBpZiAoc3VwcG9ydGVkVmFsdWUkMSAmJiBzdXBwb3J0ZWRWYWx1ZSQxICE9PSB2YWx1ZSkgY2hhbmdlVmFsdWUgPSB0cnVlO1xuXG4gICAgICBpZiAoY2hhbmdlUHJvcCB8fCBjaGFuZ2VWYWx1ZSkge1xuICAgICAgICBpZiAoY2hhbmdlUHJvcCkgZGVsZXRlIHN0eWxlW3Byb3BdO1xuICAgICAgICBzdHlsZVtzdXBwb3J0ZWRQcm9wIHx8IHByb3BdID0gc3VwcG9ydGVkVmFsdWUkMSB8fCB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICBmdW5jdGlvbiBvblByb2Nlc3NTdHlsZShzdHlsZSwgcnVsZSkge1xuICAgIGlmIChydWxlLnR5cGUgIT09ICdzdHlsZScpIHJldHVybiBzdHlsZTtcbiAgICByZXR1cm4gcHJlZml4U3R5bGUoc3R5bGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25DaGFuZ2VWYWx1ZSh2YWx1ZSwgcHJvcCkge1xuICAgIHJldHVybiBzdXBwb3J0ZWRWYWx1ZShwcm9wLCB0b0Nzc1ZhbHVlKHZhbHVlKSkgfHwgdmFsdWU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG9uUHJvY2Vzc1J1bGU6IG9uUHJvY2Vzc1J1bGUsXG4gICAgb25Qcm9jZXNzU3R5bGU6IG9uUHJvY2Vzc1N0eWxlLFxuICAgIG9uQ2hhbmdlVmFsdWU6IG9uQ2hhbmdlVmFsdWVcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQganNzVmVuZG9yUHJlZml4ZXI7XG4iLCIvKipcbiAqIFNvcnQgcHJvcHMgYnkgbGVuZ3RoLlxuICovXG5mdW5jdGlvbiBqc3NQcm9wc1NvcnQoKSB7XG4gIHZhciBzb3J0ID0gZnVuY3Rpb24gc29ydChwcm9wMCwgcHJvcDEpIHtcbiAgICBpZiAocHJvcDAubGVuZ3RoID09PSBwcm9wMS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBwcm9wMCA+IHByb3AxID8gMSA6IC0xO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wMC5sZW5ndGggLSBwcm9wMS5sZW5ndGg7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBvblByb2Nlc3NTdHlsZTogZnVuY3Rpb24gb25Qcm9jZXNzU3R5bGUoc3R5bGUsIHJ1bGUpIHtcbiAgICAgIGlmIChydWxlLnR5cGUgIT09ICdzdHlsZScpIHJldHVybiBzdHlsZTtcbiAgICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgICAgdmFyIHByb3BzID0gT2JqZWN0LmtleXMoc3R5bGUpLnNvcnQoc29ydCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbmV3U3R5bGVbcHJvcHNbaV1dID0gc3R5bGVbcHJvcHNbaV1dO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3U3R5bGU7XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBqc3NQcm9wc1NvcnQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGV4YWN0UHJvcCB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5pbXBvcnQgY3JlYXRlR2VuZXJhdGVDbGFzc05hbWUgZnJvbSAnLi4vY3JlYXRlR2VuZXJhdGVDbGFzc05hbWUnO1xuaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnanNzJztcbmltcG9ydCBqc3NQcmVzZXQgZnJvbSAnLi4vanNzUHJlc2V0JzsgLy8gRGVmYXVsdCBKU1MgaW5zdGFuY2UuXG5cbnZhciBqc3MgPSBjcmVhdGUoanNzUHJlc2V0KCkpOyAvLyBVc2UgYSBzaW5nbGV0b24gb3IgdGhlIHByb3ZpZGVkIG9uZSBieSB0aGUgY29udGV4dC5cbi8vXG4vLyBUaGUgY291bnRlci1iYXNlZCBhcHByb2FjaCBkb2Vzbid0IHRvbGVyYXRlIGFueSBtaXN0YWtlLlxuLy8gSXQncyBtdWNoIHNhZmVyIHRvIHVzZSB0aGUgc2FtZSBjb3VudGVyIGV2ZXJ5d2hlcmUuXG5cbnZhciBnZW5lcmF0ZUNsYXNzTmFtZSA9IGNyZWF0ZUdlbmVyYXRlQ2xhc3NOYW1lKCk7IC8vIEV4cG9ydGVkIGZvciB0ZXN0IHB1cnBvc2VzXG5cbmV4cG9ydCB2YXIgc2hlZXRzTWFuYWdlciA9IG5ldyBNYXAoKTtcbnZhciBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgZGlzYWJsZUdlbmVyYXRpb246IGZhbHNlLFxuICBnZW5lcmF0ZUNsYXNzTmFtZTogZ2VuZXJhdGVDbGFzc05hbWUsXG4gIGpzczoganNzLFxuICBzaGVldHNDYWNoZTogbnVsbCxcbiAgc2hlZXRzTWFuYWdlcjogc2hlZXRzTWFuYWdlcixcbiAgc2hlZXRzUmVnaXN0cnk6IG51bGxcbn07XG5leHBvcnQgdmFyIFN0eWxlc0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRPcHRpb25zKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgU3R5bGVzQ29udGV4dC5kaXNwbGF5TmFtZSA9ICdTdHlsZXNDb250ZXh0Jztcbn1cblxudmFyIGluamVjdEZpcnN0Tm9kZTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFN0eWxlc1Byb3ZpZGVyKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgX3Byb3BzJGluamVjdEZpcnN0ID0gcHJvcHMuaW5qZWN0Rmlyc3QsXG4gICAgICBpbmplY3RGaXJzdCA9IF9wcm9wcyRpbmplY3RGaXJzdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkaW5qZWN0Rmlyc3QsXG4gICAgICBfcHJvcHMkZGlzYWJsZUdlbmVyYXQgPSBwcm9wcy5kaXNhYmxlR2VuZXJhdGlvbixcbiAgICAgIGRpc2FibGVHZW5lcmF0aW9uID0gX3Byb3BzJGRpc2FibGVHZW5lcmF0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRkaXNhYmxlR2VuZXJhdCxcbiAgICAgIGxvY2FsT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2hpbGRyZW5cIiwgXCJpbmplY3RGaXJzdFwiLCBcImRpc2FibGVHZW5lcmF0aW9uXCJdKTtcblxuICB2YXIgb3V0ZXJPcHRpb25zID0gUmVhY3QudXNlQ29udGV4dChTdHlsZXNDb250ZXh0KTtcblxuICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBvdXRlck9wdGlvbnMsIHtcbiAgICBkaXNhYmxlR2VuZXJhdGlvbjogZGlzYWJsZUdlbmVyYXRpb25cbiAgfSwgbG9jYWxPcHRpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyAmJiAhY29udGV4dC5zaGVldHNNYW5hZ2VyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNYXRlcmlhbC1VSTogWW91IG5lZWQgdG8gdXNlIHRoZSBTZXJ2ZXJTdHlsZVNoZWV0cyBBUEkgd2hlbiByZW5kZXJpbmcgb24gdGhlIHNlcnZlci4nKTtcbiAgICB9XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChjb250ZXh0Lmpzcy5vcHRpb25zLmluc2VydGlvblBvaW50ICYmIGluamVjdEZpcnN0KSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNYXRlcmlhbC1VSTogWW91IGNhbm5vdCB1c2UgYSBjdXN0b20gaW5zZXJ0aW9uUG9pbnQgYW5kIDxTdHlsZXNDb250ZXh0IGluamVjdEZpcnN0PiBhdCB0aGUgc2FtZSB0aW1lLicpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGluamVjdEZpcnN0ICYmIGxvY2FsT3B0aW9ucy5qc3MpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01hdGVyaWFsLVVJOiBZb3UgY2Fubm90IHVzZSB0aGUganNzIGFuZCBpbmplY3RGaXJzdCBwcm9wcyBhdCB0aGUgc2FtZSB0aW1lLicpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29udGV4dC5qc3Mub3B0aW9ucy5pbnNlcnRpb25Qb2ludCAmJiBpbmplY3RGaXJzdCAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICghaW5qZWN0Rmlyc3ROb2RlKSB7XG4gICAgICB2YXIgaGVhZCA9IGRvY3VtZW50LmhlYWQ7XG4gICAgICBpbmplY3RGaXJzdE5vZGUgPSBkb2N1bWVudC5jcmVhdGVDb21tZW50KCdtdWktaW5qZWN0LWZpcnN0Jyk7XG4gICAgICBoZWFkLmluc2VydEJlZm9yZShpbmplY3RGaXJzdE5vZGUsIGhlYWQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgY29udGV4dC5qc3MgPSBjcmVhdGUoe1xuICAgICAgcGx1Z2luczoganNzUHJlc2V0KCkucGx1Z2lucyxcbiAgICAgIGluc2VydGlvblBvaW50OiBpbmplY3RGaXJzdE5vZGVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdHlsZXNDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRcbiAgfSwgY2hpbGRyZW4pO1xufVxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3R5bGVzUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogWW91ciBjb21wb25lbnQgdHJlZS5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBZb3UgY2FuIGRpc2FibGUgdGhlIGdlbmVyYXRpb24gb2YgdGhlIHN0eWxlcyB3aXRoIHRoaXMgb3B0aW9uLlxuICAgKiBJdCBjYW4gYmUgdXNlZnVsIHdoZW4gdHJhdmVyc2luZyB0aGUgUmVhY3QgdHJlZSBvdXRzaWRlIG9mIHRoZSBIVE1MXG4gICAqIHJlbmRlcmluZyBzdGVwIG9uIHRoZSBzZXJ2ZXIuXG4gICAqIExldCdzIHNheSB5b3UgYXJlIHVzaW5nIHJlYWN0LWFwb2xsbyB0byBleHRyYWN0IGFsbFxuICAgKiB0aGUgcXVlcmllcyBtYWRlIGJ5IHRoZSBpbnRlcmZhY2Ugc2VydmVyLXNpZGUgLSB5b3UgY2FuIHNpZ25pZmljYW50bHkgc3BlZWQgdXAgdGhlIHRyYXZlcnNhbCB3aXRoIHRoaXMgcHJvcC5cbiAgICovXG4gIGRpc2FibGVHZW5lcmF0aW9uOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSlNTJ3MgY2xhc3MgbmFtZSBnZW5lcmF0b3IuXG4gICAqL1xuICBnZW5lcmF0ZUNsYXNzTmFtZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQsIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGxhc3QgaW4gdGhlIDxoZWFkPiBlbGVtZW50IG9mIHRoZSBwYWdlLlxuICAgKiBBcyBhIHJlc3VsdCwgdGhleSBnYWluIG1vcmUgc3BlY2lmaWNpdHkgdGhhbiBhbnkgb3RoZXIgc3R5bGUgc2hlZXQuXG4gICAqIElmIHlvdSB3YW50IHRvIG92ZXJyaWRlIE1hdGVyaWFsLVVJJ3Mgc3R5bGVzLCBzZXQgdGhpcyBwcm9wLlxuICAgKi9cbiAgaW5qZWN0Rmlyc3Q6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBKU1MncyBpbnN0YW5jZS5cbiAgICovXG4gIGpzczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgc2VydmVyR2VuZXJhdGVDbGFzc05hbWU6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqXG4gICAqIEJldGEgZmVhdHVyZS5cbiAgICpcbiAgICogQ2FjaGUgZm9yIHRoZSBzaGVldHMuXG4gICAqL1xuICBzaGVldHNDYWNoZTogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKlxuICAgKiBUaGUgc2hlZXRzTWFuYWdlciBpcyB1c2VkIHRvIGRlZHVwbGljYXRlIHN0eWxlIHNoZWV0IGluamVjdGlvbiBpbiB0aGUgcGFnZS5cbiAgICogSXQncyBkZWR1cGxpY2F0aW5nIHVzaW5nIHRoZSAodGhlbWUsIHN0eWxlcykgY291cGxlLlxuICAgKiBPbiB0aGUgc2VydmVyLCB5b3Ugc2hvdWxkIHByb3ZpZGUgYSBuZXcgaW5zdGFuY2UgZm9yIGVhY2ggcmVxdWVzdC5cbiAgICovXG4gIHNoZWV0c01hbmFnZXI6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICpcbiAgICogQ29sbGVjdCB0aGUgc2hlZXRzLlxuICAgKi9cbiAgc2hlZXRzUmVnaXN0cnk6IFByb3BUeXBlcy5vYmplY3Rcbn0gOiB2b2lkIDA7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFN0eWxlc1Byb3ZpZGVyLnByb3BUeXBlcyA9IGV4YWN0UHJvcChTdHlsZXNQcm92aWRlci5wcm9wVHlwZXMpIDogdm9pZCAwO1xufSIsImltcG9ydCBmdW5jdGlvbnMgZnJvbSAnanNzLXBsdWdpbi1ydWxlLXZhbHVlLWZ1bmN0aW9uJztcbmltcG9ydCBnbG9iYWwgZnJvbSAnanNzLXBsdWdpbi1nbG9iYWwnO1xuaW1wb3J0IG5lc3RlZCBmcm9tICdqc3MtcGx1Z2luLW5lc3RlZCc7XG5pbXBvcnQgY2FtZWxDYXNlIGZyb20gJ2pzcy1wbHVnaW4tY2FtZWwtY2FzZSc7XG5pbXBvcnQgZGVmYXVsdFVuaXQgZnJvbSAnanNzLXBsdWdpbi1kZWZhdWx0LXVuaXQnO1xuaW1wb3J0IHZlbmRvclByZWZpeGVyIGZyb20gJ2pzcy1wbHVnaW4tdmVuZG9yLXByZWZpeGVyJztcbmltcG9ydCBwcm9wc1NvcnQgZnJvbSAnanNzLXBsdWdpbi1wcm9wcy1zb3J0JzsgLy8gU3Vic2V0IG9mIGpzcy1wcmVzZXQtZGVmYXVsdCB3aXRoIG9ubHkgdGhlIHBsdWdpbnMgdGhlIE1hdGVyaWFsLVVJIGNvbXBvbmVudHMgYXJlIHVzaW5nLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc3NQcmVzZXQoKSB7XG4gIHJldHVybiB7XG4gICAgcGx1Z2luczogW2Z1bmN0aW9ucygpLCBnbG9iYWwoKSwgbmVzdGVkKCksIGNhbWVsQ2FzZSgpLCBkZWZhdWx0VW5pdCgpLCAvLyBEaXNhYmxlIHRoZSB2ZW5kb3IgcHJlZml4ZXIgc2VydmVyLXNpZGUsIGl0IGRvZXMgbm90aGluZy5cbiAgICAvLyBUaGlzIHdheSwgd2UgY2FuIGdldCBhIHBlcmZvcm1hbmNlIGJvb3N0LlxuICAgIC8vIEluIHRoZSBkb2N1bWVudGF0aW9uLCB3ZSBhcmUgdXNpbmcgYGF1dG9wcmVmaXhlcmAgdG8gc29sdmUgdGhpcyBwcm9ibGVtLlxuICAgIHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnID8gbnVsbCA6IHZlbmRvclByZWZpeGVyKCksIHByb3BzU29ydCgpXVxuICB9O1xufSIsIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cbi8vIEdsb2JhbCBpbmRleCBjb3VudGVyIHRvIHByZXNlcnZlIHNvdXJjZSBvcmRlci5cbi8vIFdlIGNyZWF0ZSB0aGUgc3R5bGUgc2hlZXQgZHVyaW5nIHRoZSBjcmVhdGlvbiBvZiB0aGUgY29tcG9uZW50LFxuLy8gY2hpbGRyZW4gYXJlIGhhbmRsZWQgYWZ0ZXIgdGhlIHBhcmVudHMsIHNvIHRoZSBvcmRlciBvZiBzdHlsZSBlbGVtZW50cyB3b3VsZCBiZSBwYXJlbnQtPmNoaWxkLlxuLy8gSXQgaXMgYSBwcm9ibGVtIHRob3VnaCB3aGVuIGEgcGFyZW50IHBhc3NlcyBhIGNsYXNzTmFtZVxuLy8gd2hpY2ggbmVlZHMgdG8gb3ZlcnJpZGUgYW55IGNoaWxkJ3Mgc3R5bGVzLlxuLy8gU3R5bGVTaGVldCBvZiB0aGUgY2hpbGQgaGFzIGEgaGlnaGVyIHNwZWNpZmljaXR5LCBiZWNhdXNlIG9mIHRoZSBzb3VyY2Ugb3JkZXIuXG4vLyBTbyBvdXIgc29sdXRpb24gaXMgdG8gcmVuZGVyIHNoZWV0cyB0aGVtIGluIHRoZSByZXZlcnNlIG9yZGVyIGNoaWxkLT5zaGVldCwgc29cbi8vIHRoYXQgcGFyZW50IGhhcyBhIGhpZ2hlciBzcGVjaWZpY2l0eS5cbnZhciBpbmRleENvdW50ZXIgPSAtMWU5O1xuZXhwb3J0IGZ1bmN0aW9uIGluY3JlbWVudCgpIHtcbiAgaW5kZXhDb3VudGVyICs9IDE7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoaW5kZXhDb3VudGVyID49IDApIHtcbiAgICAgIGNvbnNvbGUud2FybihbJ01hdGVyaWFsLVVJOiBZb3UgbWlnaHQgaGF2ZSBhIG1lbW9yeSBsZWFrLicsICdUaGUgaW5kZXhDb3VudGVyIGlzIG5vdCBzdXBwb3NlZCB0byBncm93IHRoYXQgbXVjaC4nXS5qb2luKCdcXG4nKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGluZGV4Q291bnRlcjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3R5cGVvZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNQbGFpbk9iamVjdChpdGVtKSB7XG4gIHJldHVybiBpdGVtICYmIF90eXBlb2YoaXRlbSkgPT09ICdvYmplY3QnICYmIGl0ZW0uY29uc3RydWN0b3IgPT09IE9iamVjdDtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlZXBtZXJnZSh0YXJnZXQsIHNvdXJjZSkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge1xuICAgIGNsb25lOiB0cnVlXG4gIH07XG4gIHZhciBvdXRwdXQgPSBvcHRpb25zLmNsb25lID8gX2V4dGVuZHMoe30sIHRhcmdldCkgOiB0YXJnZXQ7XG5cbiAgaWYgKGlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiBpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgLy8gQXZvaWQgcHJvdG90eXBlIHBvbGx1dGlvblxuICAgICAgaWYgKGtleSA9PT0gJ19fcHJvdG9fXycpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNQbGFpbk9iamVjdChzb3VyY2Vba2V5XSkgJiYga2V5IGluIHRhcmdldCkge1xuICAgICAgICBvdXRwdXRba2V5XSA9IGRlZXBtZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0sIG9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBvdXRwdXQ7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3R5cGVvZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mXCI7XG5pbXBvcnQgeyBkZWVwbWVyZ2UgfSBmcm9tICdAbWF0ZXJpYWwtdWkvdXRpbHMnO1xuaW1wb3J0IG5vb3BUaGVtZSBmcm9tICcuL25vb3BUaGVtZSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTdHlsZXNDcmVhdG9yKHN0eWxlc09yQ3JlYXRvcikge1xuICB2YXIgdGhlbWluZ0VuYWJsZWQgPSB0eXBlb2Ygc3R5bGVzT3JDcmVhdG9yID09PSAnZnVuY3Rpb24nO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKF90eXBlb2Yoc3R5bGVzT3JDcmVhdG9yKSAhPT0gJ29iamVjdCcgJiYgIXRoZW1pbmdFbmFibGVkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFsnTWF0ZXJpYWwtVUk6IFRoZSBgc3R5bGVzYCBhcmd1bWVudCBwcm92aWRlZCBpcyBpbnZhbGlkLicsICdZb3UgbmVlZCB0byBwcm92aWRlIGEgZnVuY3Rpb24gZ2VuZXJhdGluZyB0aGUgc3R5bGVzIG9yIGEgc3R5bGVzIG9iamVjdC4nXS5qb2luKCdcXG4nKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSh0aGVtZSwgbmFtZSkge1xuICAgICAgdmFyIHN0eWxlcztcblxuICAgICAgdHJ5IHtcbiAgICAgICAgc3R5bGVzID0gdGhlbWluZ0VuYWJsZWQgPyBzdHlsZXNPckNyZWF0b3IodGhlbWUpIDogc3R5bGVzT3JDcmVhdG9yO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgaWYgKHRoZW1pbmdFbmFibGVkID09PSB0cnVlICYmIHRoZW1lID09PSBub29wVGhlbWUpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IHByZXBlbmQgZXJyb3IgbWVzc2FnZS9uYW1lIGluc3RlYWRcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoWydNYXRlcmlhbC1VSTogVGhlIGBzdHlsZXNgIGFyZ3VtZW50IHByb3ZpZGVkIGlzIGludmFsaWQuJywgJ1lvdSBhcmUgcHJvdmlkaW5nIGEgZnVuY3Rpb24gd2l0aG91dCBhIHRoZW1lIGluIHRoZSBjb250ZXh0LicsICdPbmUgb2YgdGhlIHBhcmVudCBlbGVtZW50cyBuZWVkcyB0byB1c2UgYSBUaGVtZVByb3ZpZGVyLiddLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG5cbiAgICAgIGlmICghbmFtZSB8fCAhdGhlbWUub3ZlcnJpZGVzIHx8ICF0aGVtZS5vdmVycmlkZXNbbmFtZV0pIHtcbiAgICAgICAgcmV0dXJuIHN0eWxlcztcbiAgICAgIH1cblxuICAgICAgdmFyIG92ZXJyaWRlcyA9IHRoZW1lLm92ZXJyaWRlc1tuYW1lXTtcblxuICAgICAgdmFyIHN0eWxlc1dpdGhPdmVycmlkZXMgPSBfZXh0ZW5kcyh7fSwgc3R5bGVzKTtcblxuICAgICAgT2JqZWN0LmtleXMob3ZlcnJpZGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBpZiAoIXN0eWxlc1dpdGhPdmVycmlkZXNba2V5XSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFsnTWF0ZXJpYWwtVUk6IFlvdSBhcmUgdHJ5aW5nIHRvIG92ZXJyaWRlIGEgc3R5bGUgdGhhdCBkb2VzIG5vdCBleGlzdC4nLCBcIkZpeCB0aGUgYFwiLmNvbmNhdChrZXksIFwiYCBrZXkgb2YgYHRoZW1lLm92ZXJyaWRlcy5cIikuY29uY2F0KG5hbWUsIFwiYC5cIildLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzdHlsZXNXaXRoT3ZlcnJpZGVzW2tleV0gPSBkZWVwbWVyZ2Uoc3R5bGVzV2l0aE92ZXJyaWRlc1trZXldLCBvdmVycmlkZXNba2V5XSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzdHlsZXNXaXRoT3ZlcnJpZGVzO1xuICAgIH0sXG4gICAgb3B0aW9uczoge31cbiAgfTtcbn0iLCIvLyBXZSB1c2UgdGhlIHNhbWUgZW1wdHkgb2JqZWN0IHRvIHJlZiBjb3VudCB0aGUgc3R5bGVzIHRoYXQgZG9uJ3QgbmVlZCBhIHRoZW1lIG9iamVjdC5cbnZhciBub29wVGhlbWUgPSB7fTtcbmV4cG9ydCBkZWZhdWx0IG5vb3BUaGVtZTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc1wiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0RHluYW1pY1N0eWxlcyB9IGZyb20gJ2pzcyc7XG5pbXBvcnQgbWVyZ2VDbGFzc2VzIGZyb20gJy4uL21lcmdlQ2xhc3Nlcyc7XG5pbXBvcnQgbXVsdGlLZXlTdG9yZSBmcm9tICcuL211bHRpS2V5U3RvcmUnO1xuaW1wb3J0IHVzZVRoZW1lIGZyb20gJy4uL3VzZVRoZW1lJztcbmltcG9ydCB7IFN0eWxlc0NvbnRleHQgfSBmcm9tICcuLi9TdHlsZXNQcm92aWRlcic7XG5pbXBvcnQgeyBpbmNyZW1lbnQgfSBmcm9tICcuL2luZGV4Q291bnRlcic7XG5pbXBvcnQgZ2V0U3R5bGVzQ3JlYXRvciBmcm9tICcuLi9nZXRTdHlsZXNDcmVhdG9yJztcbmltcG9ydCBub29wVGhlbWUgZnJvbSAnLi4vZ2V0U3R5bGVzQ3JlYXRvci9ub29wVGhlbWUnO1xuXG5mdW5jdGlvbiBnZXRDbGFzc2VzKF9yZWYsIGNsYXNzZXMsIENvbXBvbmVudCkge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgc3R5bGVzT3B0aW9ucyA9IF9yZWYuc3R5bGVzT3B0aW9ucztcblxuICBpZiAoc3R5bGVzT3B0aW9ucy5kaXNhYmxlR2VuZXJhdGlvbikge1xuICAgIHJldHVybiBjbGFzc2VzIHx8IHt9O1xuICB9XG5cbiAgaWYgKCFzdGF0ZS5jYWNoZUNsYXNzZXMpIHtcbiAgICBzdGF0ZS5jYWNoZUNsYXNzZXMgPSB7XG4gICAgICAvLyBDYWNoZSBmb3IgdGhlIGZpbmFsaXplZCBjbGFzc2VzIHZhbHVlLlxuICAgICAgdmFsdWU6IG51bGwsXG4gICAgICAvLyBDYWNoZSBmb3IgdGhlIGxhc3QgdXNlZCBjbGFzc2VzIHByb3AgcG9pbnRlci5cbiAgICAgIGxhc3RQcm9wOiBudWxsLFxuICAgICAgLy8gQ2FjaGUgZm9yIHRoZSBsYXN0IHVzZWQgcmVuZGVyZWQgY2xhc3NlcyBwb2ludGVyLlxuICAgICAgbGFzdEpTUzoge31cbiAgICB9O1xuICB9IC8vIFRyYWNrcyBpZiBlaXRoZXIgdGhlIHJlbmRlcmVkIGNsYXNzZXMgb3IgY2xhc3NlcyBwcm9wIGhhcyBjaGFuZ2VkLFxuICAvLyByZXF1aXJpbmcgdGhlIGdlbmVyYXRpb24gb2YgYSBuZXcgZmluYWxpemVkIGNsYXNzZXMgb2JqZWN0LlxuXG5cbiAgdmFyIGdlbmVyYXRlID0gZmFsc2U7XG5cbiAgaWYgKHN0YXRlLmNsYXNzZXMgIT09IHN0YXRlLmNhY2hlQ2xhc3Nlcy5sYXN0SlNTKSB7XG4gICAgc3RhdGUuY2FjaGVDbGFzc2VzLmxhc3RKU1MgPSBzdGF0ZS5jbGFzc2VzO1xuICAgIGdlbmVyYXRlID0gdHJ1ZTtcbiAgfVxuXG4gIGlmIChjbGFzc2VzICE9PSBzdGF0ZS5jYWNoZUNsYXNzZXMubGFzdFByb3ApIHtcbiAgICBzdGF0ZS5jYWNoZUNsYXNzZXMubGFzdFByb3AgPSBjbGFzc2VzO1xuICAgIGdlbmVyYXRlID0gdHJ1ZTtcbiAgfVxuXG4gIGlmIChnZW5lcmF0ZSkge1xuICAgIHN0YXRlLmNhY2hlQ2xhc3Nlcy52YWx1ZSA9IG1lcmdlQ2xhc3Nlcyh7XG4gICAgICBiYXNlQ2xhc3Nlczogc3RhdGUuY2FjaGVDbGFzc2VzLmxhc3RKU1MsXG4gICAgICBuZXdDbGFzc2VzOiBjbGFzc2VzLFxuICAgICAgQ29tcG9uZW50OiBDb21wb25lbnRcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBzdGF0ZS5jYWNoZUNsYXNzZXMudmFsdWU7XG59XG5cbmZ1bmN0aW9uIGF0dGFjaChfcmVmMiwgcHJvcHMpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjIuc3RhdGUsXG4gICAgICB0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgc3R5bGVzT3B0aW9ucyA9IF9yZWYyLnN0eWxlc09wdGlvbnMsXG4gICAgICBzdHlsZXNDcmVhdG9yID0gX3JlZjIuc3R5bGVzQ3JlYXRvcixcbiAgICAgIG5hbWUgPSBfcmVmMi5uYW1lO1xuXG4gIGlmIChzdHlsZXNPcHRpb25zLmRpc2FibGVHZW5lcmF0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHNoZWV0TWFuYWdlciA9IG11bHRpS2V5U3RvcmUuZ2V0KHN0eWxlc09wdGlvbnMuc2hlZXRzTWFuYWdlciwgc3R5bGVzQ3JlYXRvciwgdGhlbWUpO1xuXG4gIGlmICghc2hlZXRNYW5hZ2VyKSB7XG4gICAgc2hlZXRNYW5hZ2VyID0ge1xuICAgICAgcmVmczogMCxcbiAgICAgIHN0YXRpY1NoZWV0OiBudWxsLFxuICAgICAgZHluYW1pY1N0eWxlczogbnVsbFxuICAgIH07XG4gICAgbXVsdGlLZXlTdG9yZS5zZXQoc3R5bGVzT3B0aW9ucy5zaGVldHNNYW5hZ2VyLCBzdHlsZXNDcmVhdG9yLCB0aGVtZSwgc2hlZXRNYW5hZ2VyKTtcbiAgfVxuXG4gIHZhciBvcHRpb25zID0gX2V4dGVuZHMoe30sIHN0eWxlc0NyZWF0b3Iub3B0aW9ucywgc3R5bGVzT3B0aW9ucywge1xuICAgIHRoZW1lOiB0aGVtZSxcbiAgICBmbGlwOiB0eXBlb2Ygc3R5bGVzT3B0aW9ucy5mbGlwID09PSAnYm9vbGVhbicgPyBzdHlsZXNPcHRpb25zLmZsaXAgOiB0aGVtZS5kaXJlY3Rpb24gPT09ICdydGwnXG4gIH0pO1xuXG4gIG9wdGlvbnMuZ2VuZXJhdGVJZCA9IG9wdGlvbnMuc2VydmVyR2VuZXJhdGVDbGFzc05hbWUgfHwgb3B0aW9ucy5nZW5lcmF0ZUNsYXNzTmFtZTtcbiAgdmFyIHNoZWV0c1JlZ2lzdHJ5ID0gc3R5bGVzT3B0aW9ucy5zaGVldHNSZWdpc3RyeTtcblxuICBpZiAoc2hlZXRNYW5hZ2VyLnJlZnMgPT09IDApIHtcbiAgICB2YXIgc3RhdGljU2hlZXQ7XG5cbiAgICBpZiAoc3R5bGVzT3B0aW9ucy5zaGVldHNDYWNoZSkge1xuICAgICAgc3RhdGljU2hlZXQgPSBtdWx0aUtleVN0b3JlLmdldChzdHlsZXNPcHRpb25zLnNoZWV0c0NhY2hlLCBzdHlsZXNDcmVhdG9yLCB0aGVtZSk7XG4gICAgfVxuXG4gICAgdmFyIHN0eWxlcyA9IHN0eWxlc0NyZWF0b3IuY3JlYXRlKHRoZW1lLCBuYW1lKTtcblxuICAgIGlmICghc3RhdGljU2hlZXQpIHtcbiAgICAgIHN0YXRpY1NoZWV0ID0gc3R5bGVzT3B0aW9ucy5qc3MuY3JlYXRlU3R5bGVTaGVldChzdHlsZXMsIF9leHRlbmRzKHtcbiAgICAgICAgbGluazogZmFsc2VcbiAgICAgIH0sIG9wdGlvbnMpKTtcbiAgICAgIHN0YXRpY1NoZWV0LmF0dGFjaCgpO1xuXG4gICAgICBpZiAoc3R5bGVzT3B0aW9ucy5zaGVldHNDYWNoZSkge1xuICAgICAgICBtdWx0aUtleVN0b3JlLnNldChzdHlsZXNPcHRpb25zLnNoZWV0c0NhY2hlLCBzdHlsZXNDcmVhdG9yLCB0aGVtZSwgc3RhdGljU2hlZXQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzaGVldHNSZWdpc3RyeSkge1xuICAgICAgc2hlZXRzUmVnaXN0cnkuYWRkKHN0YXRpY1NoZWV0KTtcbiAgICB9XG5cbiAgICBzaGVldE1hbmFnZXIuc3RhdGljU2hlZXQgPSBzdGF0aWNTaGVldDtcbiAgICBzaGVldE1hbmFnZXIuZHluYW1pY1N0eWxlcyA9IGdldER5bmFtaWNTdHlsZXMoc3R5bGVzKTtcbiAgfVxuXG4gIGlmIChzaGVldE1hbmFnZXIuZHluYW1pY1N0eWxlcykge1xuICAgIHZhciBkeW5hbWljU2hlZXQgPSBzdHlsZXNPcHRpb25zLmpzcy5jcmVhdGVTdHlsZVNoZWV0KHNoZWV0TWFuYWdlci5keW5hbWljU3R5bGVzLCBfZXh0ZW5kcyh7XG4gICAgICBsaW5rOiB0cnVlXG4gICAgfSwgb3B0aW9ucykpO1xuICAgIGR5bmFtaWNTaGVldC51cGRhdGUocHJvcHMpO1xuICAgIGR5bmFtaWNTaGVldC5hdHRhY2goKTtcbiAgICBzdGF0ZS5keW5hbWljU2hlZXQgPSBkeW5hbWljU2hlZXQ7XG4gICAgc3RhdGUuY2xhc3NlcyA9IG1lcmdlQ2xhc3Nlcyh7XG4gICAgICBiYXNlQ2xhc3Nlczogc2hlZXRNYW5hZ2VyLnN0YXRpY1NoZWV0LmNsYXNzZXMsXG4gICAgICBuZXdDbGFzc2VzOiBkeW5hbWljU2hlZXQuY2xhc3Nlc1xuICAgIH0pO1xuXG4gICAgaWYgKHNoZWV0c1JlZ2lzdHJ5KSB7XG4gICAgICBzaGVldHNSZWdpc3RyeS5hZGQoZHluYW1pY1NoZWV0KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgc3RhdGUuY2xhc3NlcyA9IHNoZWV0TWFuYWdlci5zdGF0aWNTaGVldC5jbGFzc2VzO1xuICB9XG5cbiAgc2hlZXRNYW5hZ2VyLnJlZnMgKz0gMTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlKF9yZWYzLCBwcm9wcykge1xuICB2YXIgc3RhdGUgPSBfcmVmMy5zdGF0ZTtcblxuICBpZiAoc3RhdGUuZHluYW1pY1NoZWV0KSB7XG4gICAgc3RhdGUuZHluYW1pY1NoZWV0LnVwZGF0ZShwcm9wcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZGV0YWNoKF9yZWY0KSB7XG4gIHZhciBzdGF0ZSA9IF9yZWY0LnN0YXRlLFxuICAgICAgdGhlbWUgPSBfcmVmNC50aGVtZSxcbiAgICAgIHN0eWxlc09wdGlvbnMgPSBfcmVmNC5zdHlsZXNPcHRpb25zLFxuICAgICAgc3R5bGVzQ3JlYXRvciA9IF9yZWY0LnN0eWxlc0NyZWF0b3I7XG5cbiAgaWYgKHN0eWxlc09wdGlvbnMuZGlzYWJsZUdlbmVyYXRpb24pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgc2hlZXRNYW5hZ2VyID0gbXVsdGlLZXlTdG9yZS5nZXQoc3R5bGVzT3B0aW9ucy5zaGVldHNNYW5hZ2VyLCBzdHlsZXNDcmVhdG9yLCB0aGVtZSk7XG4gIHNoZWV0TWFuYWdlci5yZWZzIC09IDE7XG4gIHZhciBzaGVldHNSZWdpc3RyeSA9IHN0eWxlc09wdGlvbnMuc2hlZXRzUmVnaXN0cnk7XG5cbiAgaWYgKHNoZWV0TWFuYWdlci5yZWZzID09PSAwKSB7XG4gICAgbXVsdGlLZXlTdG9yZS5kZWxldGUoc3R5bGVzT3B0aW9ucy5zaGVldHNNYW5hZ2VyLCBzdHlsZXNDcmVhdG9yLCB0aGVtZSk7XG4gICAgc3R5bGVzT3B0aW9ucy5qc3MucmVtb3ZlU3R5bGVTaGVldChzaGVldE1hbmFnZXIuc3RhdGljU2hlZXQpO1xuXG4gICAgaWYgKHNoZWV0c1JlZ2lzdHJ5KSB7XG4gICAgICBzaGVldHNSZWdpc3RyeS5yZW1vdmUoc2hlZXRNYW5hZ2VyLnN0YXRpY1NoZWV0KTtcbiAgICB9XG4gIH1cblxuICBpZiAoc3RhdGUuZHluYW1pY1NoZWV0KSB7XG4gICAgc3R5bGVzT3B0aW9ucy5qc3MucmVtb3ZlU3R5bGVTaGVldChzdGF0ZS5keW5hbWljU2hlZXQpO1xuXG4gICAgaWYgKHNoZWV0c1JlZ2lzdHJ5KSB7XG4gICAgICBzaGVldHNSZWdpc3RyeS5yZW1vdmUoc3RhdGUuZHluYW1pY1NoZWV0KTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdXNlU3luY2hyb25vdXNFZmZlY3QoZnVuYywgdmFsdWVzKSB7XG4gIHZhciBrZXkgPSBSZWFjdC51c2VSZWYoW10pO1xuICB2YXIgb3V0cHV0OyAvLyBTdG9yZSBcImdlbmVyYXRpb25cIiBrZXkuIEp1c3QgcmV0dXJucyBhIG5ldyBvYmplY3QgZXZlcnkgdGltZVxuXG4gIHZhciBjdXJyZW50S2V5ID0gUmVhY3QudXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9LCB2YWx1ZXMpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAvLyBcInRoZSBmaXJzdCByZW5kZXJcIiwgb3IgXCJtZW1vIGRyb3BwZWQgdGhlIHZhbHVlXCJcblxuICBpZiAoa2V5LmN1cnJlbnQgIT09IGN1cnJlbnRLZXkpIHtcbiAgICBrZXkuY3VycmVudCA9IGN1cnJlbnRLZXk7XG4gICAgb3V0cHV0ID0gZnVuYygpO1xuICB9XG5cbiAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKG91dHB1dCkge1xuICAgICAgICBvdXRwdXQoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbY3VycmVudEtleV0gLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFrZVN0eWxlcyhzdHlsZXNPckNyZWF0b3IpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIHZhciBuYW1lID0gb3B0aW9ucy5uYW1lLFxuICAgICAgY2xhc3NOYW1lUHJlZml4T3B0aW9uID0gb3B0aW9ucy5jbGFzc05hbWVQcmVmaXgsXG4gICAgICBDb21wb25lbnQgPSBvcHRpb25zLkNvbXBvbmVudCxcbiAgICAgIF9vcHRpb25zJGRlZmF1bHRUaGVtZSA9IG9wdGlvbnMuZGVmYXVsdFRoZW1lLFxuICAgICAgZGVmYXVsdFRoZW1lID0gX29wdGlvbnMkZGVmYXVsdFRoZW1lID09PSB2b2lkIDAgPyBub29wVGhlbWUgOiBfb3B0aW9ucyRkZWZhdWx0VGhlbWUsXG4gICAgICBzdHlsZXNPcHRpb25zMiA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBbXCJuYW1lXCIsIFwiY2xhc3NOYW1lUHJlZml4XCIsIFwiQ29tcG9uZW50XCIsIFwiZGVmYXVsdFRoZW1lXCJdKTtcblxuICB2YXIgc3R5bGVzQ3JlYXRvciA9IGdldFN0eWxlc0NyZWF0b3Ioc3R5bGVzT3JDcmVhdG9yKTtcbiAgdmFyIGNsYXNzTmFtZVByZWZpeCA9IG5hbWUgfHwgY2xhc3NOYW1lUHJlZml4T3B0aW9uIHx8ICdtYWtlU3R5bGVzJztcbiAgc3R5bGVzQ3JlYXRvci5vcHRpb25zID0ge1xuICAgIGluZGV4OiBpbmNyZW1lbnQoKSxcbiAgICBuYW1lOiBuYW1lLFxuICAgIG1ldGE6IGNsYXNzTmFtZVByZWZpeCxcbiAgICBjbGFzc05hbWVQcmVmaXg6IGNsYXNzTmFtZVByZWZpeFxuICB9O1xuXG4gIHZhciB1c2VTdHlsZXMgPSBmdW5jdGlvbiB1c2VTdHlsZXMoKSB7XG4gICAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICB2YXIgdGhlbWUgPSB1c2VUaGVtZSgpIHx8IGRlZmF1bHRUaGVtZTtcblxuICAgIHZhciBzdHlsZXNPcHRpb25zID0gX2V4dGVuZHMoe30sIFJlYWN0LnVzZUNvbnRleHQoU3R5bGVzQ29udGV4dCksIHN0eWxlc09wdGlvbnMyKTtcblxuICAgIHZhciBpbnN0YW5jZSA9IFJlYWN0LnVzZVJlZigpO1xuICAgIHZhciBzaG91bGRVcGRhdGUgPSBSZWFjdC51c2VSZWYoKTtcbiAgICB1c2VTeW5jaHJvbm91c0VmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY3VycmVudCA9IHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgc3RhdGU6IHt9LFxuICAgICAgICBzdHlsZXNDcmVhdG9yOiBzdHlsZXNDcmVhdG9yLFxuICAgICAgICBzdHlsZXNPcHRpb25zOiBzdHlsZXNPcHRpb25zLFxuICAgICAgICB0aGVtZTogdGhlbWVcbiAgICAgIH07XG4gICAgICBhdHRhY2goY3VycmVudCwgcHJvcHMpO1xuICAgICAgc2hvdWxkVXBkYXRlLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgIGluc3RhbmNlLmN1cnJlbnQgPSBjdXJyZW50O1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGV0YWNoKGN1cnJlbnQpO1xuICAgICAgfTtcbiAgICB9LCBbdGhlbWUsIHN0eWxlc0NyZWF0b3JdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHNob3VsZFVwZGF0ZS5jdXJyZW50KSB7XG4gICAgICAgIHVwZGF0ZShpbnN0YW5jZS5jdXJyZW50LCBwcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIHNob3VsZFVwZGF0ZS5jdXJyZW50ID0gdHJ1ZTtcbiAgICB9KTtcbiAgICB2YXIgY2xhc3NlcyA9IGdldENsYXNzZXMoaW5zdGFuY2UuY3VycmVudCwgcHJvcHMuY2xhc3NlcywgQ29tcG9uZW50KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICAgIFJlYWN0LnVzZURlYnVnVmFsdWUoY2xhc3Nlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzZXM7XG4gIH07XG5cbiAgcmV0dXJuIHVzZVN0eWxlcztcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG4vLyBTb3J0ZWQgQVNDIGJ5IHNpemUuIFRoYXQncyBpbXBvcnRhbnQuXG4vLyBJdCBjYW4ndCBiZSBjb25maWd1cmVkIGFzIGl0J3MgdXNlZCBzdGF0aWNhbGx5IGZvciBwcm9wVHlwZXMuXG5leHBvcnQgdmFyIGtleXMgPSBbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107IC8vIEtlZXAgaW4gbWluZCB0aGF0IEBtZWRpYSBpcyBpbmNsdXNpdmUgYnkgdGhlIENTUyBzcGVjaWZpY2F0aW9uLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVCcmVha3BvaW50cyhicmVha3BvaW50cykge1xuICB2YXIgX2JyZWFrcG9pbnRzJHZhbHVlcyA9IGJyZWFrcG9pbnRzLnZhbHVlcyxcbiAgICAgIHZhbHVlcyA9IF9icmVha3BvaW50cyR2YWx1ZXMgPT09IHZvaWQgMCA/IHtcbiAgICB4czogMCxcbiAgICBzbTogNjAwLFxuICAgIG1kOiA5NjAsXG4gICAgbGc6IDEyODAsXG4gICAgeGw6IDE5MjBcbiAgfSA6IF9icmVha3BvaW50cyR2YWx1ZXMsXG4gICAgICBfYnJlYWtwb2ludHMkdW5pdCA9IGJyZWFrcG9pbnRzLnVuaXQsXG4gICAgICB1bml0ID0gX2JyZWFrcG9pbnRzJHVuaXQgPT09IHZvaWQgMCA/ICdweCcgOiBfYnJlYWtwb2ludHMkdW5pdCxcbiAgICAgIF9icmVha3BvaW50cyRzdGVwID0gYnJlYWtwb2ludHMuc3RlcCxcbiAgICAgIHN0ZXAgPSBfYnJlYWtwb2ludHMkc3RlcCA9PT0gdm9pZCAwID8gNSA6IF9icmVha3BvaW50cyRzdGVwLFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoYnJlYWtwb2ludHMsIFtcInZhbHVlc1wiLCBcInVuaXRcIiwgXCJzdGVwXCJdKTtcblxuICBmdW5jdGlvbiB1cChrZXkpIHtcbiAgICB2YXIgdmFsdWUgPSB0eXBlb2YgdmFsdWVzW2tleV0gPT09ICdudW1iZXInID8gdmFsdWVzW2tleV0gOiBrZXk7XG4gICAgcmV0dXJuIFwiQG1lZGlhIChtaW4td2lkdGg6XCIuY29uY2F0KHZhbHVlKS5jb25jYXQodW5pdCwgXCIpXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZG93bihrZXkpIHtcbiAgICB2YXIgZW5kSW5kZXggPSBrZXlzLmluZGV4T2Yoa2V5KSArIDE7XG4gICAgdmFyIHVwcGVyYm91bmQgPSB2YWx1ZXNba2V5c1tlbmRJbmRleF1dO1xuXG4gICAgaWYgKGVuZEluZGV4ID09PSBrZXlzLmxlbmd0aCkge1xuICAgICAgLy8geGwgZG93biBhcHBsaWVzIHRvIGFsbCBzaXplc1xuICAgICAgcmV0dXJuIHVwKCd4cycpO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZSA9IHR5cGVvZiB1cHBlcmJvdW5kID09PSAnbnVtYmVyJyAmJiBlbmRJbmRleCA+IDAgPyB1cHBlcmJvdW5kIDoga2V5O1xuICAgIHJldHVybiBcIkBtZWRpYSAobWF4LXdpZHRoOlwiLmNvbmNhdCh2YWx1ZSAtIHN0ZXAgLyAxMDApLmNvbmNhdCh1bml0LCBcIilcIik7XG4gIH1cblxuICBmdW5jdGlvbiBiZXR3ZWVuKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgZW5kSW5kZXggPSBrZXlzLmluZGV4T2YoZW5kKTtcblxuICAgIGlmIChlbmRJbmRleCA9PT0ga2V5cy5sZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gdXAoc3RhcnQpO1xuICAgIH1cblxuICAgIHJldHVybiBcIkBtZWRpYSAobWluLXdpZHRoOlwiLmNvbmNhdCh0eXBlb2YgdmFsdWVzW3N0YXJ0XSA9PT0gJ251bWJlcicgPyB2YWx1ZXNbc3RhcnRdIDogc3RhcnQpLmNvbmNhdCh1bml0LCBcIikgYW5kIFwiKSArIFwiKG1heC13aWR0aDpcIi5jb25jYXQoKGVuZEluZGV4ICE9PSAtMSAmJiB0eXBlb2YgdmFsdWVzW2tleXNbZW5kSW5kZXggKyAxXV0gPT09ICdudW1iZXInID8gdmFsdWVzW2tleXNbZW5kSW5kZXggKyAxXV0gOiBlbmQpIC0gc3RlcCAvIDEwMCkuY29uY2F0KHVuaXQsIFwiKVwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9ubHkoa2V5KSB7XG4gICAgcmV0dXJuIGJldHdlZW4oa2V5LCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gd2lkdGgoa2V5KSB7XG4gICAgcmV0dXJuIHZhbHVlc1trZXldO1xuICB9XG5cbiAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICBrZXlzOiBrZXlzLFxuICAgIHZhbHVlczogdmFsdWVzLFxuICAgIHVwOiB1cCxcbiAgICBkb3duOiBkb3duLFxuICAgIGJldHdlZW46IGJldHdlZW4sXG4gICAgb25seTogb25seSxcbiAgICB3aWR0aDogd2lkdGhcbiAgfSwgb3RoZXIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU1peGlucyhicmVha3BvaW50cywgc3BhY2luZywgbWl4aW5zKSB7XG4gIHZhciBfdG9vbGJhcjtcblxuICByZXR1cm4gX2V4dGVuZHMoe1xuICAgIGd1dHRlcnM6IGZ1bmN0aW9uIGd1dHRlcnMoKSB7XG4gICAgICB2YXIgc3R5bGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICAgIC8vIFRvIGRlcHJlY2F0ZSBpbiB2NC4xXG4gICAgICAvLyAgICAgICB3YXJuaW5nKFxuICAgICAgLy8gICAgICAgICBmYWxzZSxcbiAgICAgIC8vICAgICAgICAgW1xuICAgICAgLy8gICAgICAgICAgICdNYXRlcmlhbC1VSTogVGhlbWUubWl4aW5zLmd1dHRlcnMoKSBpcyBkZXByZWNhdGVkLicsXG4gICAgICAvLyAgICAgICAgICAgJ1lvdSBjYW4gdXNlIHRoZSBzb3VyY2Ugb2YgdGhlIG1peGluIGRpcmVjdGx5OicsXG4gICAgICAvLyAgICAgICAgICAgYFxuICAgICAgLy8gcGFkZGluZ0xlZnQ6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICAvLyBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICAvLyBbdGhlbWUuYnJlYWtwb2ludHMudXAoJ3NtJyldOiB7XG4gICAgICAvLyAgIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nKDMpLFxuICAgICAgLy8gICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcoMyksXG4gICAgICAvLyB9LFxuICAgICAgLy8gYCxcbiAgICAgIC8vICAgICAgICAgXS5qb2luKCdcXG4nKSxcbiAgICAgIC8vICAgICAgICk7XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe1xuICAgICAgICBwYWRkaW5nTGVmdDogc3BhY2luZygyKSxcbiAgICAgICAgcGFkZGluZ1JpZ2h0OiBzcGFjaW5nKDIpXG4gICAgICB9LCBzdHlsZXMsIF9kZWZpbmVQcm9wZXJ0eSh7fSwgYnJlYWtwb2ludHMudXAoJ3NtJyksIF9leHRlbmRzKHtcbiAgICAgICAgcGFkZGluZ0xlZnQ6IHNwYWNpbmcoMyksXG4gICAgICAgIHBhZGRpbmdSaWdodDogc3BhY2luZygzKVxuICAgICAgfSwgc3R5bGVzW2JyZWFrcG9pbnRzLnVwKCdzbScpXSkpKTtcbiAgICB9LFxuICAgIHRvb2xiYXI6IChfdG9vbGJhciA9IHtcbiAgICAgIG1pbkhlaWdodDogNTZcbiAgICB9LCBfZGVmaW5lUHJvcGVydHkoX3Rvb2xiYXIsIFwiXCIuY29uY2F0KGJyZWFrcG9pbnRzLnVwKCd4cycpLCBcIiBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpXCIpLCB7XG4gICAgICBtaW5IZWlnaHQ6IDQ4XG4gICAgfSksIF9kZWZpbmVQcm9wZXJ0eShfdG9vbGJhciwgYnJlYWtwb2ludHMudXAoJ3NtJyksIHtcbiAgICAgIG1pbkhlaWdodDogNjRcbiAgICB9KSwgX3Rvb2xiYXIpXG4gIH0sIG1peGlucyk7XG59IiwiLyoqXG4gKiBXQVJOSU5HOiBEb24ndCBpbXBvcnQgdGhpcyBkaXJlY3RseS5cbiAqIFVzZSBgTXVpRXJyb3JgIGZyb20gYEBtYXRlcmlhbC11aS91dGlscy9tYWNyb3MvTXVpRXJyb3IubWFjcm9gIGluc3RlYWQuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRNdWlFcnJvck1lc3NhZ2UoY29kZSkge1xuICAvLyBBcHBseSBiYWJlbC1wbHVnaW4tdHJhbnNmb3JtLXRlbXBsYXRlLWxpdGVyYWxzIGluIGxvb3NlIG1vZGVcbiAgLy8gbG9vc2UgbW9kZSBpcyBzYWZlIGlmZiB3ZSdyZSBjb25jYXRlbmF0aW5nIHByaW1pdGl2ZXNcbiAgLy8gc2VlIGh0dHBzOi8vYmFiZWxqcy5pby9kb2NzL2VuL2JhYmVsLXBsdWdpbi10cmFuc2Zvcm0tdGVtcGxhdGUtbGl0ZXJhbHMjbG9vc2VcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItdGVtcGxhdGUgKi9cbiAgdmFyIHVybCA9ICdodHRwczovL21hdGVyaWFsLXVpLmNvbS9wcm9kdWN0aW9uLWVycm9yLz9jb2RlPScgKyBjb2RlO1xuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgLy8gcmVzdCBwYXJhbXMgb3Zlci10cmFuc3BpbGUgZm9yIHRoaXMgY2FzZVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXNcbiAgICB1cmwgKz0gJyZhcmdzW109JyArIGVuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbaV0pO1xuICB9XG5cbiAgcmV0dXJuICdNaW5pZmllZCBNYXRlcmlhbC1VSSBlcnJvciAjJyArIGNvZGUgKyAnOyB2aXNpdCAnICsgdXJsICsgJyBmb3IgdGhlIGZ1bGwgbWVzc2FnZS4nO1xuICAvKiBlc2xpbnQtZW5hYmxlIHByZWZlci10ZW1wbGF0ZSAqL1xufSIsInZhciBjb21tb24gPSB7XG4gIGJsYWNrOiAnIzAwMCcsXG4gIHdoaXRlOiAnI2ZmZidcbn07XG5leHBvcnQgZGVmYXVsdCBjb21tb247IiwidmFyIGdyZXkgPSB7XG4gIDUwOiAnI2ZhZmFmYScsXG4gIDEwMDogJyNmNWY1ZjUnLFxuICAyMDA6ICcjZWVlZWVlJyxcbiAgMzAwOiAnI2UwZTBlMCcsXG4gIDQwMDogJyNiZGJkYmQnLFxuICA1MDA6ICcjOWU5ZTllJyxcbiAgNjAwOiAnIzc1NzU3NScsXG4gIDcwMDogJyM2MTYxNjEnLFxuICA4MDA6ICcjNDI0MjQyJyxcbiAgOTAwOiAnIzIxMjEyMScsXG4gIEExMDA6ICcjZDVkNWQ1JyxcbiAgQTIwMDogJyNhYWFhYWEnLFxuICBBNDAwOiAnIzMwMzAzMCcsXG4gIEE3MDA6ICcjNjE2MTYxJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGdyZXk7IiwidmFyIGluZGlnbyA9IHtcbiAgNTA6ICcjZThlYWY2JyxcbiAgMTAwOiAnI2M1Y2FlOScsXG4gIDIwMDogJyM5ZmE4ZGEnLFxuICAzMDA6ICcjNzk4NmNiJyxcbiAgNDAwOiAnIzVjNmJjMCcsXG4gIDUwMDogJyMzZjUxYjUnLFxuICA2MDA6ICcjMzk0OWFiJyxcbiAgNzAwOiAnIzMwM2Y5ZicsXG4gIDgwMDogJyMyODM1OTMnLFxuICA5MDA6ICcjMWEyMzdlJyxcbiAgQTEwMDogJyM4YzllZmYnLFxuICBBMjAwOiAnIzUzNmRmZScsXG4gIEE0MDA6ICcjM2Q1YWZlJyxcbiAgQTcwMDogJyMzMDRmZmUnXG59O1xuZXhwb3J0IGRlZmF1bHQgaW5kaWdvOyIsInZhciBwaW5rID0ge1xuICA1MDogJyNmY2U0ZWMnLFxuICAxMDA6ICcjZjhiYmQwJyxcbiAgMjAwOiAnI2Y0OGZiMScsXG4gIDMwMDogJyNmMDYyOTInLFxuICA0MDA6ICcjZWM0MDdhJyxcbiAgNTAwOiAnI2U5MWU2MycsXG4gIDYwMDogJyNkODFiNjAnLFxuICA3MDA6ICcjYzIxODViJyxcbiAgODAwOiAnI2FkMTQ1NycsXG4gIDkwMDogJyM4ODBlNGYnLFxuICBBMTAwOiAnI2ZmODBhYicsXG4gIEEyMDA6ICcjZmY0MDgxJyxcbiAgQTQwMDogJyNmNTAwNTcnLFxuICBBNzAwOiAnI2M1MTE2Midcbn07XG5leHBvcnQgZGVmYXVsdCBwaW5rOyIsInZhciByZWQgPSB7XG4gIDUwOiAnI2ZmZWJlZScsXG4gIDEwMDogJyNmZmNkZDInLFxuICAyMDA6ICcjZWY5YTlhJyxcbiAgMzAwOiAnI2U1NzM3MycsXG4gIDQwMDogJyNlZjUzNTAnLFxuICA1MDA6ICcjZjQ0MzM2JyxcbiAgNjAwOiAnI2U1MzkzNScsXG4gIDcwMDogJyNkMzJmMmYnLFxuICA4MDA6ICcjYzYyODI4JyxcbiAgOTAwOiAnI2I3MWMxYycsXG4gIEExMDA6ICcjZmY4YTgwJyxcbiAgQTIwMDogJyNmZjUyNTInLFxuICBBNDAwOiAnI2ZmMTc0NCcsXG4gIEE3MDA6ICcjZDUwMDAwJ1xufTtcbmV4cG9ydCBkZWZhdWx0IHJlZDsiLCJ2YXIgb3JhbmdlID0ge1xuICA1MDogJyNmZmYzZTAnLFxuICAxMDA6ICcjZmZlMGIyJyxcbiAgMjAwOiAnI2ZmY2M4MCcsXG4gIDMwMDogJyNmZmI3NGQnLFxuICA0MDA6ICcjZmZhNzI2JyxcbiAgNTAwOiAnI2ZmOTgwMCcsXG4gIDYwMDogJyNmYjhjMDAnLFxuICA3MDA6ICcjZjU3YzAwJyxcbiAgODAwOiAnI2VmNmMwMCcsXG4gIDkwMDogJyNlNjUxMDAnLFxuICBBMTAwOiAnI2ZmZDE4MCcsXG4gIEEyMDA6ICcjZmZhYjQwJyxcbiAgQTQwMDogJyNmZjkxMDAnLFxuICBBNzAwOiAnI2ZmNmQwMCdcbn07XG5leHBvcnQgZGVmYXVsdCBvcmFuZ2U7IiwidmFyIGJsdWUgPSB7XG4gIDUwOiAnI2UzZjJmZCcsXG4gIDEwMDogJyNiYmRlZmInLFxuICAyMDA6ICcjOTBjYWY5JyxcbiAgMzAwOiAnIzY0YjVmNicsXG4gIDQwMDogJyM0MmE1ZjUnLFxuICA1MDA6ICcjMjE5NmYzJyxcbiAgNjAwOiAnIzFlODhlNScsXG4gIDcwMDogJyMxOTc2ZDInLFxuICA4MDA6ICcjMTU2NWMwJyxcbiAgOTAwOiAnIzBkNDdhMScsXG4gIEExMDA6ICcjODJiMWZmJyxcbiAgQTIwMDogJyM0NDhhZmYnLFxuICBBNDAwOiAnIzI5NzlmZicsXG4gIEE3MDA6ICcjMjk2MmZmJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGJsdWU7IiwidmFyIGdyZWVuID0ge1xuICA1MDogJyNlOGY1ZTknLFxuICAxMDA6ICcjYzhlNmM5JyxcbiAgMjAwOiAnI2E1ZDZhNycsXG4gIDMwMDogJyM4MWM3ODQnLFxuICA0MDA6ICcjNjZiYjZhJyxcbiAgNTAwOiAnIzRjYWY1MCcsXG4gIDYwMDogJyM0M2EwNDcnLFxuICA3MDA6ICcjMzg4ZTNjJyxcbiAgODAwOiAnIzJlN2QzMicsXG4gIDkwMDogJyMxYjVlMjAnLFxuICBBMTAwOiAnI2I5ZjZjYScsXG4gIEEyMDA6ICcjNjlmMGFlJyxcbiAgQTQwMDogJyMwMGU2NzYnLFxuICBBNzAwOiAnIzAwYzg1Mydcbn07XG5leHBvcnQgZGVmYXVsdCBncmVlbjsiLCJpbXBvcnQgeyBmb3JtYXRNdWlFcnJvck1lc3NhZ2UgYXMgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvdXRpbHNcIjtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9cblxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIHdob3NlIHZhbHVlIGlzIGxpbWl0ZWQgdG8gdGhlIGdpdmVuIHJhbmdlLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYmUgY2xhbXBlZFxuICogQHBhcmFtIHtudW1iZXJ9IG1pbiBUaGUgbG93ZXIgYm91bmRhcnkgb2YgdGhlIG91dHB1dCByYW5nZVxuICogQHBhcmFtIHtudW1iZXJ9IG1heCBUaGUgdXBwZXIgYm91bmRhcnkgb2YgdGhlIG91dHB1dCByYW5nZVxuICogQHJldHVybnMge251bWJlcn0gQSBudW1iZXIgaW4gdGhlIHJhbmdlIFttaW4sIG1heF1cbiAqL1xuZnVuY3Rpb24gY2xhbXAodmFsdWUpIHtcbiAgdmFyIG1pbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgdmFyIG1heCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICh2YWx1ZSA8IG1pbiB8fCB2YWx1ZSA+IG1heCkge1xuICAgICAgY29uc29sZS5lcnJvcihcIk1hdGVyaWFsLVVJOiBUaGUgdmFsdWUgcHJvdmlkZWQgXCIuY29uY2F0KHZhbHVlLCBcIiBpcyBvdXQgb2YgcmFuZ2UgW1wiKS5jb25jYXQobWluLCBcIiwgXCIpLmNvbmNhdChtYXgsIFwiXS5cIikpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChtaW4sIHZhbHVlKSwgbWF4KTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIENTUyBoZXggZm9ybWF0IHRvIENTUyByZ2IgZm9ybWF0LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIEhleCBjb2xvciwgaS5lLiAjbm5uIG9yICNubm5ubm5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIHJnYiBjb2xvciBzdHJpbmdcbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb1JnYihjb2xvcikge1xuICBjb2xvciA9IGNvbG9yLnN1YnN0cigxKTtcbiAgdmFyIHJlID0gbmV3IFJlZ0V4cChcIi57MSxcIi5jb25jYXQoY29sb3IubGVuZ3RoID49IDYgPyAyIDogMSwgXCJ9XCIpLCAnZycpO1xuICB2YXIgY29sb3JzID0gY29sb3IubWF0Y2gocmUpO1xuXG4gIGlmIChjb2xvcnMgJiYgY29sb3JzWzBdLmxlbmd0aCA9PT0gMSkge1xuICAgIGNvbG9ycyA9IGNvbG9ycy5tYXAoZnVuY3Rpb24gKG4pIHtcbiAgICAgIHJldHVybiBuICsgbjtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBjb2xvcnMgPyBcInJnYlwiLmNvbmNhdChjb2xvcnMubGVuZ3RoID09PSA0ID8gJ2EnIDogJycsIFwiKFwiKS5jb25jYXQoY29sb3JzLm1hcChmdW5jdGlvbiAobiwgaW5kZXgpIHtcbiAgICByZXR1cm4gaW5kZXggPCAzID8gcGFyc2VJbnQobiwgMTYpIDogTWF0aC5yb3VuZChwYXJzZUludChuLCAxNikgLyAyNTUgKiAxMDAwKSAvIDEwMDA7XG4gIH0pLmpvaW4oJywgJyksIFwiKVwiKSA6ICcnO1xufVxuXG5mdW5jdGlvbiBpbnRUb0hleChpbnQpIHtcbiAgdmFyIGhleCA9IGludC50b1N0cmluZygxNik7XG4gIHJldHVybiBoZXgubGVuZ3RoID09PSAxID8gXCIwXCIuY29uY2F0KGhleCkgOiBoZXg7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgY29sb3IgZnJvbSBDU1MgcmdiIGZvcm1hdCB0byBDU1MgaGV4IGZvcm1hdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBSR0IgY29sb3IsIGkuZS4gcmdiKG4sIG4sIG4pXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyByZ2IgY29sb3Igc3RyaW5nLCBpLmUuICNubm5ubm5cbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiByZ2JUb0hleChjb2xvcikge1xuICAvLyBJZGVtcG90ZW50XG4gIGlmIChjb2xvci5pbmRleE9mKCcjJykgPT09IDApIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cblxuICB2YXIgX2RlY29tcG9zZUNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpLFxuICAgICAgdmFsdWVzID0gX2RlY29tcG9zZUNvbG9yLnZhbHVlcztcblxuICByZXR1cm4gXCIjXCIuY29uY2F0KHZhbHVlcy5tYXAoZnVuY3Rpb24gKG4pIHtcbiAgICByZXR1cm4gaW50VG9IZXgobik7XG4gIH0pLmpvaW4oJycpKTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIGhzbCBmb3JtYXQgdG8gcmdiIGZvcm1hdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBIU0wgY29sb3IgdmFsdWVzXG4gKiBAcmV0dXJucyB7c3RyaW5nfSByZ2IgY29sb3IgdmFsdWVzXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGhzbFRvUmdiKGNvbG9yKSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICB2YXIgX2NvbG9yID0gY29sb3IsXG4gICAgICB2YWx1ZXMgPSBfY29sb3IudmFsdWVzO1xuICB2YXIgaCA9IHZhbHVlc1swXTtcbiAgdmFyIHMgPSB2YWx1ZXNbMV0gLyAxMDA7XG4gIHZhciBsID0gdmFsdWVzWzJdIC8gMTAwO1xuICB2YXIgYSA9IHMgKiBNYXRoLm1pbihsLCAxIC0gbCk7XG5cbiAgdmFyIGYgPSBmdW5jdGlvbiBmKG4pIHtcbiAgICB2YXIgayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogKG4gKyBoIC8gMzApICUgMTI7XG4gICAgcmV0dXJuIGwgLSBhICogTWF0aC5tYXgoTWF0aC5taW4oayAtIDMsIDkgLSBrLCAxKSwgLTEpO1xuICB9O1xuXG4gIHZhciB0eXBlID0gJ3JnYic7XG4gIHZhciByZ2IgPSBbTWF0aC5yb3VuZChmKDApICogMjU1KSwgTWF0aC5yb3VuZChmKDgpICogMjU1KSwgTWF0aC5yb3VuZChmKDQpICogMjU1KV07XG5cbiAgaWYgKGNvbG9yLnR5cGUgPT09ICdoc2xhJykge1xuICAgIHR5cGUgKz0gJ2EnO1xuICAgIHJnYi5wdXNoKHZhbHVlc1szXSk7XG4gIH1cblxuICByZXR1cm4gcmVjb21wb3NlQ29sb3Ioe1xuICAgIHR5cGU6IHR5cGUsXG4gICAgdmFsdWVzOiByZ2JcbiAgfSk7XG59XG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHR5cGUgYW5kIHZhbHVlcyBvZiBhIGNvbG9yLlxuICpcbiAqIE5vdGU6IERvZXMgbm90IHN1cHBvcnQgcmdiICUgdmFsdWVzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEByZXR1cm5zIHtvYmplY3R9IC0gQSBNVUkgY29sb3Igb2JqZWN0OiB7dHlwZTogc3RyaW5nLCB2YWx1ZXM6IG51bWJlcltdfVxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBkZWNvbXBvc2VDb2xvcihjb2xvcikge1xuICAvLyBJZGVtcG90ZW50XG4gIGlmIChjb2xvci50eXBlKSB7XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG5cbiAgaWYgKGNvbG9yLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgcmV0dXJuIGRlY29tcG9zZUNvbG9yKGhleFRvUmdiKGNvbG9yKSk7XG4gIH1cblxuICB2YXIgbWFya2VyID0gY29sb3IuaW5kZXhPZignKCcpO1xuICB2YXIgdHlwZSA9IGNvbG9yLnN1YnN0cmluZygwLCBtYXJrZXIpO1xuXG4gIGlmIChbJ3JnYicsICdyZ2JhJywgJ2hzbCcsICdoc2xhJ10uaW5kZXhPZih0eXBlKSA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gXCJNYXRlcmlhbC1VSTogVW5zdXBwb3J0ZWQgYFwiLmNvbmNhdChjb2xvciwgXCJgIGNvbG9yLlxcbldlIHN1cHBvcnQgdGhlIGZvbGxvd2luZyBmb3JtYXRzOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLlwiKSA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoMywgY29sb3IpKTtcbiAgfVxuXG4gIHZhciB2YWx1ZXMgPSBjb2xvci5zdWJzdHJpbmcobWFya2VyICsgMSwgY29sb3IubGVuZ3RoIC0gMSkuc3BsaXQoJywnKTtcbiAgdmFsdWVzID0gdmFsdWVzLm1hcChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IHR5cGUsXG4gICAgdmFsdWVzOiB2YWx1ZXNcbiAgfTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBvYmplY3Qgd2l0aCB0eXBlIGFuZCB2YWx1ZXMgdG8gYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGNvbG9yIC0gRGVjb21wb3NlZCBjb2xvclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yLnR5cGUgLSBPbmUgb2Y6ICdyZ2InLCAncmdiYScsICdoc2wnLCAnaHNsYSdcbiAqIEBwYXJhbSB7YXJyYXl9IGNvbG9yLnZhbHVlcyAtIFtuLG4sbl0gb3IgW24sbixuLG5dXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmdcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gcmVjb21wb3NlQ29sb3IoY29sb3IpIHtcbiAgdmFyIHR5cGUgPSBjb2xvci50eXBlO1xuICB2YXIgdmFsdWVzID0gY29sb3IudmFsdWVzO1xuXG4gIGlmICh0eXBlLmluZGV4T2YoJ3JnYicpICE9PSAtMSkge1xuICAgIC8vIE9ubHkgY29udmVydCB0aGUgZmlyc3QgMyB2YWx1ZXMgdG8gaW50IChpLmUuIG5vdCBhbHBoYSlcbiAgICB2YWx1ZXMgPSB2YWx1ZXMubWFwKGZ1bmN0aW9uIChuLCBpKSB7XG4gICAgICByZXR1cm4gaSA8IDMgPyBwYXJzZUludChuLCAxMCkgOiBuO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHR5cGUuaW5kZXhPZignaHNsJykgIT09IC0xKSB7XG4gICAgdmFsdWVzWzFdID0gXCJcIi5jb25jYXQodmFsdWVzWzFdLCBcIiVcIik7XG4gICAgdmFsdWVzWzJdID0gXCJcIi5jb25jYXQodmFsdWVzWzJdLCBcIiVcIik7XG4gIH1cblxuICByZXR1cm4gXCJcIi5jb25jYXQodHlwZSwgXCIoXCIpLmNvbmNhdCh2YWx1ZXMuam9pbignLCAnKSwgXCIpXCIpO1xufVxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBjb250cmFzdCByYXRpbyBiZXR3ZWVuIHR3byBjb2xvcnMuXG4gKlxuICogRm9ybXVsYTogaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC1URUNIUy9HMTcuaHRtbCNHMTctdGVzdHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZm9yZWdyb3VuZCAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrZ3JvdW5kIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKVxuICogQHJldHVybnMge251bWJlcn0gQSBjb250cmFzdCByYXRpbyB2YWx1ZSBpbiB0aGUgcmFuZ2UgMCAtIDIxLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250cmFzdFJhdGlvKGZvcmVncm91bmQsIGJhY2tncm91bmQpIHtcbiAgdmFyIGx1bUEgPSBnZXRMdW1pbmFuY2UoZm9yZWdyb3VuZCk7XG4gIHZhciBsdW1CID0gZ2V0THVtaW5hbmNlKGJhY2tncm91bmQpO1xuICByZXR1cm4gKE1hdGgubWF4KGx1bUEsIGx1bUIpICsgMC4wNSkgLyAoTWF0aC5taW4obHVtQSwgbHVtQikgKyAwLjA1KTtcbn1cbi8qKlxuICogVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgYW55IHBvaW50IGluIGEgY29sb3Igc3BhY2UsXG4gKiBub3JtYWxpemVkIHRvIDAgZm9yIGRhcmtlc3QgYmxhY2sgYW5kIDEgZm9yIGxpZ2h0ZXN0IHdoaXRlLlxuICpcbiAqIEZvcm11bGE6IGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAtVEVDSFMvRzE3Lmh0bWwjRzE3LXRlc3RzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKVxuICogQHJldHVybnMge251bWJlcn0gVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgdGhlIGNvbG9yIGluIHRoZSByYW5nZSAwIC0gMVxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMdW1pbmFuY2UoY29sb3IpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIHZhciByZ2IgPSBjb2xvci50eXBlID09PSAnaHNsJyA/IGRlY29tcG9zZUNvbG9yKGhzbFRvUmdiKGNvbG9yKSkudmFsdWVzIDogY29sb3IudmFsdWVzO1xuICByZ2IgPSByZ2IubWFwKGZ1bmN0aW9uICh2YWwpIHtcbiAgICB2YWwgLz0gMjU1OyAvLyBub3JtYWxpemVkXG5cbiAgICByZXR1cm4gdmFsIDw9IDAuMDM5MjggPyB2YWwgLyAxMi45MiA6IE1hdGgucG93KCh2YWwgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgfSk7IC8vIFRydW5jYXRlIGF0IDMgZGlnaXRzXG5cbiAgcmV0dXJuIE51bWJlcigoMC4yMTI2ICogcmdiWzBdICsgMC43MTUyICogcmdiWzFdICsgMC4wNzIyICogcmdiWzJdKS50b0ZpeGVkKDMpKTtcbn1cbi8qKlxuICogRGFya2VuIG9yIGxpZ2h0ZW4gYSBjb2xvciwgZGVwZW5kaW5nIG9uIGl0cyBsdW1pbmFuY2UuXG4gKiBMaWdodCBjb2xvcnMgYXJlIGRhcmtlbmVkLCBkYXJrIGNvbG9ycyBhcmUgbGlnaHRlbmVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudD0wLjE1IC0gbXVsdGlwbGllciBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGVtcGhhc2l6ZShjb2xvcikge1xuICB2YXIgY29lZmZpY2llbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDAuMTU7XG4gIHJldHVybiBnZXRMdW1pbmFuY2UoY29sb3IpID4gMC41ID8gZGFya2VuKGNvbG9yLCBjb2VmZmljaWVudCkgOiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCk7XG59XG4vKipcbiAqIFNldCB0aGUgYWJzb2x1dGUgdHJhbnNwYXJlbmN5IG9mIGEgY29sb3IuXG4gKiBBbnkgZXhpc3RpbmcgYWxwaGEgdmFsdWVzIGFyZSBvdmVyd3JpdHRlbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSB2YWx1ZSB0byBzZXQgdGhlIGFscGhhIGNoYW5uZWwgdG8gaW4gdGhlIHJhbmdlIDAgLTFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZhZGUoY29sb3IsIHZhbHVlKSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICB2YWx1ZSA9IGNsYW1wKHZhbHVlKTtcblxuICBpZiAoY29sb3IudHlwZSA9PT0gJ3JnYicgfHwgY29sb3IudHlwZSA9PT0gJ2hzbCcpIHtcbiAgICBjb2xvci50eXBlICs9ICdhJztcbiAgfVxuXG4gIGNvbG9yLnZhbHVlc1szXSA9IHZhbHVlO1xuICByZXR1cm4gcmVjb21wb3NlQ29sb3IoY29sb3IpO1xufVxuLyoqXG4gKiBEYXJrZW5zIGEgY29sb3IuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKVxuICogQHBhcmFtIHtudW1iZXJ9IGNvZWZmaWNpZW50IC0gbXVsdGlwbGllciBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGRhcmtlbihjb2xvciwgY29lZmZpY2llbnQpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIGNvZWZmaWNpZW50ID0gY2xhbXAoY29lZmZpY2llbnQpO1xuXG4gIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSAqPSAxIC0gY29lZmZpY2llbnQ7XG4gIH0gZWxzZSBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdyZ2InKSAhPT0gLTEpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkgKz0gMSkge1xuICAgICAgY29sb3IudmFsdWVzW2ldICo9IDEgLSBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVjb21wb3NlQ29sb3IoY29sb3IpO1xufVxuLyoqXG4gKiBMaWdodGVucyBhIGNvbG9yLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudCAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgY29lZmZpY2llbnQgPSBjbGFtcChjb2VmZmljaWVudCk7XG5cbiAgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZignaHNsJykgIT09IC0xKSB7XG4gICAgY29sb3IudmFsdWVzWzJdICs9ICgxMDAgLSBjb2xvci52YWx1ZXNbMl0pICogY29lZmZpY2llbnQ7XG4gIH0gZWxzZSBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdyZ2InKSAhPT0gLTEpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkgKz0gMSkge1xuICAgICAgY29sb3IudmFsdWVzW2ldICs9ICgyNTUgLSBjb2xvci52YWx1ZXNbaV0pICogY29lZmZpY2llbnQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlY29tcG9zZUNvbG9yKGNvbG9yKTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgeyBmb3JtYXRNdWlFcnJvck1lc3NhZ2UgYXMgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvdXRpbHNcIjtcbmltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5pbXBvcnQgY29tbW9uIGZyb20gJy4uL2NvbG9ycy9jb21tb24nO1xuaW1wb3J0IGdyZXkgZnJvbSAnLi4vY29sb3JzL2dyZXknO1xuaW1wb3J0IGluZGlnbyBmcm9tICcuLi9jb2xvcnMvaW5kaWdvJztcbmltcG9ydCBwaW5rIGZyb20gJy4uL2NvbG9ycy9waW5rJztcbmltcG9ydCByZWQgZnJvbSAnLi4vY29sb3JzL3JlZCc7XG5pbXBvcnQgb3JhbmdlIGZyb20gJy4uL2NvbG9ycy9vcmFuZ2UnO1xuaW1wb3J0IGJsdWUgZnJvbSAnLi4vY29sb3JzL2JsdWUnO1xuaW1wb3J0IGdyZWVuIGZyb20gJy4uL2NvbG9ycy9ncmVlbic7XG5pbXBvcnQgeyBkYXJrZW4sIGdldENvbnRyYXN0UmF0aW8sIGxpZ2h0ZW4gfSBmcm9tICcuL2NvbG9yTWFuaXB1bGF0b3InO1xuZXhwb3J0IHZhciBsaWdodCA9IHtcbiAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHN0eWxlIHRoZSB0ZXh0LlxuICB0ZXh0OiB7XG4gICAgLy8gVGhlIG1vc3QgaW1wb3J0YW50IHRleHQuXG4gICAgcHJpbWFyeTogJ3JnYmEoMCwgMCwgMCwgMC44NyknLFxuICAgIC8vIFNlY29uZGFyeSB0ZXh0LlxuICAgIHNlY29uZGFyeTogJ3JnYmEoMCwgMCwgMCwgMC41NCknLFxuICAgIC8vIERpc2FibGVkIHRleHQgaGF2ZSBldmVuIGxvd2VyIHZpc3VhbCBwcm9taW5lbmNlLlxuICAgIGRpc2FibGVkOiAncmdiYSgwLCAwLCAwLCAwLjM4KScsXG4gICAgLy8gVGV4dCBoaW50cy5cbiAgICBoaW50OiAncmdiYSgwLCAwLCAwLCAwLjM4KSdcbiAgfSxcbiAgLy8gVGhlIGNvbG9yIHVzZWQgdG8gZGl2aWRlIGRpZmZlcmVudCBlbGVtZW50cy5cbiAgZGl2aWRlcjogJ3JnYmEoMCwgMCwgMCwgMC4xMiknLFxuICAvLyBUaGUgYmFja2dyb3VuZCBjb2xvcnMgdXNlZCB0byBzdHlsZSB0aGUgc3VyZmFjZXMuXG4gIC8vIENvbnNpc3RlbmN5IGJldHdlZW4gdGhlc2UgdmFsdWVzIGlzIGltcG9ydGFudC5cbiAgYmFja2dyb3VuZDoge1xuICAgIHBhcGVyOiBjb21tb24ud2hpdGUsXG4gICAgZGVmYXVsdDogZ3JleVs1MF1cbiAgfSxcbiAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHN0eWxlIHRoZSBhY3Rpb24gZWxlbWVudHMuXG4gIGFjdGlvbjoge1xuICAgIC8vIFRoZSBjb2xvciBvZiBhbiBhY3RpdmUgYWN0aW9uIGxpa2UgYW4gaWNvbiBidXR0b24uXG4gICAgYWN0aXZlOiAncmdiYSgwLCAwLCAwLCAwLjU0KScsXG4gICAgLy8gVGhlIGNvbG9yIG9mIGFuIGhvdmVyZWQgYWN0aW9uLlxuICAgIGhvdmVyOiAncmdiYSgwLCAwLCAwLCAwLjA0KScsXG4gICAgaG92ZXJPcGFjaXR5OiAwLjA0LFxuICAgIC8vIFRoZSBjb2xvciBvZiBhIHNlbGVjdGVkIGFjdGlvbi5cbiAgICBzZWxlY3RlZDogJ3JnYmEoMCwgMCwgMCwgMC4wOCknLFxuICAgIHNlbGVjdGVkT3BhY2l0eTogMC4wOCxcbiAgICAvLyBUaGUgY29sb3Igb2YgYSBkaXNhYmxlZCBhY3Rpb24uXG4gICAgZGlzYWJsZWQ6ICdyZ2JhKDAsIDAsIDAsIDAuMjYpJyxcbiAgICAvLyBUaGUgYmFja2dyb3VuZCBjb2xvciBvZiBhIGRpc2FibGVkIGFjdGlvbi5cbiAgICBkaXNhYmxlZEJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuMTIpJyxcbiAgICBkaXNhYmxlZE9wYWNpdHk6IDAuMzgsXG4gICAgZm9jdXM6ICdyZ2JhKDAsIDAsIDAsIDAuMTIpJyxcbiAgICBmb2N1c09wYWNpdHk6IDAuMTIsXG4gICAgYWN0aXZhdGVkT3BhY2l0eTogMC4xMlxuICB9XG59O1xuZXhwb3J0IHZhciBkYXJrID0ge1xuICB0ZXh0OiB7XG4gICAgcHJpbWFyeTogY29tbW9uLndoaXRlLFxuICAgIHNlY29uZGFyeTogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC43KScsXG4gICAgZGlzYWJsZWQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknLFxuICAgIGhpbnQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknLFxuICAgIGljb246ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknXG4gIH0sXG4gIGRpdmlkZXI6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgYmFja2dyb3VuZDoge1xuICAgIHBhcGVyOiBncmV5WzgwMF0sXG4gICAgZGVmYXVsdDogJyMzMDMwMzAnXG4gIH0sXG4gIGFjdGlvbjoge1xuICAgIGFjdGl2ZTogY29tbW9uLndoaXRlLFxuICAgIGhvdmVyOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KScsXG4gICAgaG92ZXJPcGFjaXR5OiAwLjA4LFxuICAgIHNlbGVjdGVkOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE2KScsXG4gICAgc2VsZWN0ZWRPcGFjaXR5OiAwLjE2LFxuICAgIGRpc2FibGVkOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcbiAgICBkaXNhYmxlZEJhY2tncm91bmQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgICBkaXNhYmxlZE9wYWNpdHk6IDAuMzgsXG4gICAgZm9jdXM6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJyxcbiAgICBmb2N1c09wYWNpdHk6IDAuMTIsXG4gICAgYWN0aXZhdGVkT3BhY2l0eTogMC4yNFxuICB9XG59O1xuXG5mdW5jdGlvbiBhZGRMaWdodE9yRGFyayhpbnRlbnQsIGRpcmVjdGlvbiwgc2hhZGUsIHRvbmFsT2Zmc2V0KSB7XG4gIHZhciB0b25hbE9mZnNldExpZ2h0ID0gdG9uYWxPZmZzZXQubGlnaHQgfHwgdG9uYWxPZmZzZXQ7XG4gIHZhciB0b25hbE9mZnNldERhcmsgPSB0b25hbE9mZnNldC5kYXJrIHx8IHRvbmFsT2Zmc2V0ICogMS41O1xuXG4gIGlmICghaW50ZW50W2RpcmVjdGlvbl0pIHtcbiAgICBpZiAoaW50ZW50Lmhhc093blByb3BlcnR5KHNoYWRlKSkge1xuICAgICAgaW50ZW50W2RpcmVjdGlvbl0gPSBpbnRlbnRbc2hhZGVdO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnbGlnaHQnKSB7XG4gICAgICBpbnRlbnQubGlnaHQgPSBsaWdodGVuKGludGVudC5tYWluLCB0b25hbE9mZnNldExpZ2h0KTtcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ2RhcmsnKSB7XG4gICAgICBpbnRlbnQuZGFyayA9IGRhcmtlbihpbnRlbnQubWFpbiwgdG9uYWxPZmZzZXREYXJrKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlUGFsZXR0ZShwYWxldHRlKSB7XG4gIHZhciBfcGFsZXR0ZSRwcmltYXJ5ID0gcGFsZXR0ZS5wcmltYXJ5LFxuICAgICAgcHJpbWFyeSA9IF9wYWxldHRlJHByaW1hcnkgPT09IHZvaWQgMCA/IHtcbiAgICBsaWdodDogaW5kaWdvWzMwMF0sXG4gICAgbWFpbjogaW5kaWdvWzUwMF0sXG4gICAgZGFyazogaW5kaWdvWzcwMF1cbiAgfSA6IF9wYWxldHRlJHByaW1hcnksXG4gICAgICBfcGFsZXR0ZSRzZWNvbmRhcnkgPSBwYWxldHRlLnNlY29uZGFyeSxcbiAgICAgIHNlY29uZGFyeSA9IF9wYWxldHRlJHNlY29uZGFyeSA9PT0gdm9pZCAwID8ge1xuICAgIGxpZ2h0OiBwaW5rLkEyMDAsXG4gICAgbWFpbjogcGluay5BNDAwLFxuICAgIGRhcms6IHBpbmsuQTcwMFxuICB9IDogX3BhbGV0dGUkc2Vjb25kYXJ5LFxuICAgICAgX3BhbGV0dGUkZXJyb3IgPSBwYWxldHRlLmVycm9yLFxuICAgICAgZXJyb3IgPSBfcGFsZXR0ZSRlcnJvciA9PT0gdm9pZCAwID8ge1xuICAgIGxpZ2h0OiByZWRbMzAwXSxcbiAgICBtYWluOiByZWRbNTAwXSxcbiAgICBkYXJrOiByZWRbNzAwXVxuICB9IDogX3BhbGV0dGUkZXJyb3IsXG4gICAgICBfcGFsZXR0ZSR3YXJuaW5nID0gcGFsZXR0ZS53YXJuaW5nLFxuICAgICAgd2FybmluZyA9IF9wYWxldHRlJHdhcm5pbmcgPT09IHZvaWQgMCA/IHtcbiAgICBsaWdodDogb3JhbmdlWzMwMF0sXG4gICAgbWFpbjogb3JhbmdlWzUwMF0sXG4gICAgZGFyazogb3JhbmdlWzcwMF1cbiAgfSA6IF9wYWxldHRlJHdhcm5pbmcsXG4gICAgICBfcGFsZXR0ZSRpbmZvID0gcGFsZXR0ZS5pbmZvLFxuICAgICAgaW5mbyA9IF9wYWxldHRlJGluZm8gPT09IHZvaWQgMCA/IHtcbiAgICBsaWdodDogYmx1ZVszMDBdLFxuICAgIG1haW46IGJsdWVbNTAwXSxcbiAgICBkYXJrOiBibHVlWzcwMF1cbiAgfSA6IF9wYWxldHRlJGluZm8sXG4gICAgICBfcGFsZXR0ZSRzdWNjZXNzID0gcGFsZXR0ZS5zdWNjZXNzLFxuICAgICAgc3VjY2VzcyA9IF9wYWxldHRlJHN1Y2Nlc3MgPT09IHZvaWQgMCA/IHtcbiAgICBsaWdodDogZ3JlZW5bMzAwXSxcbiAgICBtYWluOiBncmVlbls1MDBdLFxuICAgIGRhcms6IGdyZWVuWzcwMF1cbiAgfSA6IF9wYWxldHRlJHN1Y2Nlc3MsXG4gICAgICBfcGFsZXR0ZSR0eXBlID0gcGFsZXR0ZS50eXBlLFxuICAgICAgdHlwZSA9IF9wYWxldHRlJHR5cGUgPT09IHZvaWQgMCA/ICdsaWdodCcgOiBfcGFsZXR0ZSR0eXBlLFxuICAgICAgX3BhbGV0dGUkY29udHJhc3RUaHJlID0gcGFsZXR0ZS5jb250cmFzdFRocmVzaG9sZCxcbiAgICAgIGNvbnRyYXN0VGhyZXNob2xkID0gX3BhbGV0dGUkY29udHJhc3RUaHJlID09PSB2b2lkIDAgPyAzIDogX3BhbGV0dGUkY29udHJhc3RUaHJlLFxuICAgICAgX3BhbGV0dGUkdG9uYWxPZmZzZXQgPSBwYWxldHRlLnRvbmFsT2Zmc2V0LFxuICAgICAgdG9uYWxPZmZzZXQgPSBfcGFsZXR0ZSR0b25hbE9mZnNldCA9PT0gdm9pZCAwID8gMC4yIDogX3BhbGV0dGUkdG9uYWxPZmZzZXQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwYWxldHRlLCBbXCJwcmltYXJ5XCIsIFwic2Vjb25kYXJ5XCIsIFwiZXJyb3JcIiwgXCJ3YXJuaW5nXCIsIFwiaW5mb1wiLCBcInN1Y2Nlc3NcIiwgXCJ0eXBlXCIsIFwiY29udHJhc3RUaHJlc2hvbGRcIiwgXCJ0b25hbE9mZnNldFwiXSk7IC8vIFVzZSB0aGUgc2FtZSBsb2dpYyBhc1xuICAvLyBCb290c3RyYXA6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iLzFkNmUzNzEwZGQ0NDdkZTFhMjAwZjI5ZThmYTUyMWY4YTA5MDhmNzAvc2Nzcy9fZnVuY3Rpb25zLnNjc3MjTDU5XG4gIC8vIGFuZCBtYXRlcmlhbC1jb21wb25lbnRzLXdlYiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL2FjNDZiODg2M2M0ZGFiOWZjMjJjNGM2NjJkYzZiZDFiNjVkZDY1MmYvcGFja2FnZXMvbWRjLXRoZW1lL19mdW5jdGlvbnMuc2NzcyNMNTRcblxuXG4gIGZ1bmN0aW9uIGdldENvbnRyYXN0VGV4dChiYWNrZ3JvdW5kKSB7XG4gICAgdmFyIGNvbnRyYXN0VGV4dCA9IGdldENvbnRyYXN0UmF0aW8oYmFja2dyb3VuZCwgZGFyay50ZXh0LnByaW1hcnkpID49IGNvbnRyYXN0VGhyZXNob2xkID8gZGFyay50ZXh0LnByaW1hcnkgOiBsaWdodC50ZXh0LnByaW1hcnk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIGNvbnRyYXN0ID0gZ2V0Q29udHJhc3RSYXRpbyhiYWNrZ3JvdW5kLCBjb250cmFzdFRleHQpO1xuXG4gICAgICBpZiAoY29udHJhc3QgPCAzKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoW1wiTWF0ZXJpYWwtVUk6IFRoZSBjb250cmFzdCByYXRpbyBvZiBcIi5jb25jYXQoY29udHJhc3QsIFwiOjEgZm9yIFwiKS5jb25jYXQoY29udHJhc3RUZXh0LCBcIiBvbiBcIikuY29uY2F0KGJhY2tncm91bmQpLCAnZmFsbHMgYmVsb3cgdGhlIFdDQUcgcmVjb21tZW5kZWQgYWJzb2x1dGUgbWluaW11bSBjb250cmFzdCByYXRpbyBvZiAzOjEuJywgJ2h0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDA4L1JFQy1XQ0FHMjAtMjAwODEyMTEvI3Zpc3VhbC1hdWRpby1jb250cmFzdC1jb250cmFzdCddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29udHJhc3RUZXh0O1xuICB9XG5cbiAgdmFyIGF1Z21lbnRDb2xvciA9IGZ1bmN0aW9uIGF1Z21lbnRDb2xvcihjb2xvcikge1xuICAgIHZhciBtYWluU2hhZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDUwMDtcbiAgICB2YXIgbGlnaHRTaGFkZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMzAwO1xuICAgIHZhciBkYXJrU2hhZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDcwMDtcbiAgICBjb2xvciA9IF9leHRlbmRzKHt9LCBjb2xvcik7XG5cbiAgICBpZiAoIWNvbG9yLm1haW4gJiYgY29sb3JbbWFpblNoYWRlXSkge1xuICAgICAgY29sb3IubWFpbiA9IGNvbG9yW21haW5TaGFkZV07XG4gICAgfVxuXG4gICAgaWYgKCFjb2xvci5tYWluKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gXCJNYXRlcmlhbC1VSTogVGhlIGNvbG9yIHByb3ZpZGVkIHRvIGF1Z21lbnRDb2xvcihjb2xvcikgaXMgaW52YWxpZC5cXG5UaGUgY29sb3Igb2JqZWN0IG5lZWRzIHRvIGhhdmUgYSBgbWFpbmAgcHJvcGVydHkgb3IgYSBgXCIuY29uY2F0KG1haW5TaGFkZSwgXCJgIHByb3BlcnR5LlwiKSA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoNCwgbWFpblNoYWRlKSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBjb2xvci5tYWluICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFwiTWF0ZXJpYWwtVUk6IFRoZSBjb2xvciBwcm92aWRlZCB0byBhdWdtZW50Q29sb3IoY29sb3IpIGlzIGludmFsaWQuXFxuYGNvbG9yLm1haW5gIHNob3VsZCBiZSBhIHN0cmluZywgYnV0IGBcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoY29sb3IubWFpbiksIFwiYCB3YXMgcHJvdmlkZWQgaW5zdGVhZC5cXG5cXG5EaWQgeW91IGludGVuZCB0byB1c2Ugb25lIG9mIHRoZSBmb2xsb3dpbmcgYXBwcm9hY2hlcz9cXG5cXG5pbXBvcnQge1xceEEwZ3JlZW4gfSBmcm9tIFxcXCJAbWF0ZXJpYWwtdWkvY29yZS9jb2xvcnNcXFwiO1xcblxcbmNvbnN0IHRoZW1lMSA9IGNyZWF0ZU11aVRoZW1lKHsgcGFsZXR0ZToge1xcbiAgcHJpbWFyeTogZ3JlZW4sXFxufSB9KTtcXG5cXG5jb25zdCB0aGVtZTIgPSBjcmVhdGVNdWlUaGVtZSh7IHBhbGV0dGU6IHtcXG4gIHByaW1hcnk6IHsgbWFpbjogZ3JlZW5bNTAwXSB9LFxcbn0gfSk7XCIpIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSg1LCBKU09OLnN0cmluZ2lmeShjb2xvci5tYWluKSkpO1xuICAgIH1cblxuICAgIGFkZExpZ2h0T3JEYXJrKGNvbG9yLCAnbGlnaHQnLCBsaWdodFNoYWRlLCB0b25hbE9mZnNldCk7XG4gICAgYWRkTGlnaHRPckRhcmsoY29sb3IsICdkYXJrJywgZGFya1NoYWRlLCB0b25hbE9mZnNldCk7XG5cbiAgICBpZiAoIWNvbG9yLmNvbnRyYXN0VGV4dCkge1xuICAgICAgY29sb3IuY29udHJhc3RUZXh0ID0gZ2V0Q29udHJhc3RUZXh0KGNvbG9yLm1haW4pO1xuICAgIH1cblxuICAgIHJldHVybiBjb2xvcjtcbiAgfTtcblxuICB2YXIgdHlwZXMgPSB7XG4gICAgZGFyazogZGFyayxcbiAgICBsaWdodDogbGlnaHRcbiAgfTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICghdHlwZXNbdHlwZV0pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJNYXRlcmlhbC1VSTogVGhlIHBhbGV0dGUgdHlwZSBgXCIuY29uY2F0KHR5cGUsIFwiYCBpcyBub3Qgc3VwcG9ydGVkLlwiKSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIHBhbGV0dGVPdXRwdXQgPSBkZWVwbWVyZ2UoX2V4dGVuZHMoe1xuICAgIC8vIEEgY29sbGVjdGlvbiBvZiBjb21tb24gY29sb3JzLlxuICAgIGNvbW1vbjogY29tbW9uLFxuICAgIC8vIFRoZSBwYWxldHRlIHR5cGUsIGNhbiBiZSBsaWdodCBvciBkYXJrLlxuICAgIHR5cGU6IHR5cGUsXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHJlcHJlc2VudCBwcmltYXJ5IGludGVyZmFjZSBlbGVtZW50cyBmb3IgYSB1c2VyLlxuICAgIHByaW1hcnk6IGF1Z21lbnRDb2xvcihwcmltYXJ5KSxcbiAgICAvLyBUaGUgY29sb3JzIHVzZWQgdG8gcmVwcmVzZW50IHNlY29uZGFyeSBpbnRlcmZhY2UgZWxlbWVudHMgZm9yIGEgdXNlci5cbiAgICBzZWNvbmRhcnk6IGF1Z21lbnRDb2xvcihzZWNvbmRhcnksICdBNDAwJywgJ0EyMDAnLCAnQTcwMCcpLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byByZXByZXNlbnQgaW50ZXJmYWNlIGVsZW1lbnRzIHRoYXQgdGhlIHVzZXIgc2hvdWxkIGJlIG1hZGUgYXdhcmUgb2YuXG4gICAgZXJyb3I6IGF1Z21lbnRDb2xvcihlcnJvciksXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIHJlcHJlc2VudCBwb3RlbnRpYWxseSBkYW5nZXJvdXMgYWN0aW9ucyBvciBpbXBvcnRhbnQgbWVzc2FnZXMuXG4gICAgd2FybmluZzogYXVnbWVudENvbG9yKHdhcm5pbmcpLFxuICAgIC8vIFRoZSBjb2xvcnMgdXNlZCB0byBwcmVzZW50IGluZm9ybWF0aW9uIHRvIHRoZSB1c2VyIHRoYXQgaXMgbmV1dHJhbCBhbmQgbm90IG5lY2Vzc2FyaWx5IGltcG9ydGFudC5cbiAgICBpbmZvOiBhdWdtZW50Q29sb3IoaW5mbyksXG4gICAgLy8gVGhlIGNvbG9ycyB1c2VkIHRvIGluZGljYXRlIHRoZSBzdWNjZXNzZnVsIGNvbXBsZXRpb24gb2YgYW4gYWN0aW9uIHRoYXQgdXNlciB0cmlnZ2VyZWQuXG4gICAgc3VjY2VzczogYXVnbWVudENvbG9yKHN1Y2Nlc3MpLFxuICAgIC8vIFRoZSBncmV5IGNvbG9ycy5cbiAgICBncmV5OiBncmV5LFxuICAgIC8vIFVzZWQgYnkgYGdldENvbnRyYXN0VGV4dCgpYCB0byBtYXhpbWl6ZSB0aGUgY29udHJhc3QgYmV0d2VlblxuICAgIC8vIHRoZSBiYWNrZ3JvdW5kIGFuZCB0aGUgdGV4dC5cbiAgICBjb250cmFzdFRocmVzaG9sZDogY29udHJhc3RUaHJlc2hvbGQsXG4gICAgLy8gVGFrZXMgYSBiYWNrZ3JvdW5kIGNvbG9yIGFuZCByZXR1cm5zIHRoZSB0ZXh0IGNvbG9yIHRoYXQgbWF4aW1pemVzIHRoZSBjb250cmFzdC5cbiAgICBnZXRDb250cmFzdFRleHQ6IGdldENvbnRyYXN0VGV4dCxcbiAgICAvLyBHZW5lcmF0ZSBhIHJpY2ggY29sb3Igb2JqZWN0LlxuICAgIGF1Z21lbnRDb2xvcjogYXVnbWVudENvbG9yLFxuICAgIC8vIFVzZWQgYnkgdGhlIGZ1bmN0aW9ucyBiZWxvdyB0byBzaGlmdCBhIGNvbG9yJ3MgbHVtaW5hbmNlIGJ5IGFwcHJveGltYXRlbHlcbiAgICAvLyB0d28gaW5kZXhlcyB3aXRoaW4gaXRzIHRvbmFsIHBhbGV0dGUuXG4gICAgLy8gRS5nLiwgc2hpZnQgZnJvbSBSZWQgNTAwIHRvIFJlZCAzMDAgb3IgUmVkIDcwMC5cbiAgICB0b25hbE9mZnNldDogdG9uYWxPZmZzZXRcbiAgfSwgdHlwZXNbdHlwZV0pLCBvdGhlcik7XG4gIHJldHVybiBwYWxldHRlT3V0cHV0O1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbmltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5cbmZ1bmN0aW9uIHJvdW5kKHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogMWU1KSAvIDFlNTtcbn1cblxudmFyIGNhc2VBbGxDYXBzID0ge1xuICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJ1xufTtcbnZhciBkZWZhdWx0Rm9udEZhbWlseSA9ICdcIlJvYm90b1wiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWYnO1xuLyoqXG4gKiBAc2VlIEBsaW5re2h0dHBzOi8vbWF0ZXJpYWwuaW8vZGVzaWduL3R5cG9ncmFwaHkvdGhlLXR5cGUtc3lzdGVtLmh0bWx9XG4gKiBAc2VlIEBsaW5re2h0dHBzOi8vbWF0ZXJpYWwuaW8vZGVzaWduL3R5cG9ncmFwaHkvdW5kZXJzdGFuZGluZy10eXBvZ3JhcGh5Lmh0bWx9XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVHlwb2dyYXBoeShwYWxldHRlLCB0eXBvZ3JhcGh5KSB7XG4gIHZhciBfcmVmID0gdHlwZW9mIHR5cG9ncmFwaHkgPT09ICdmdW5jdGlvbicgPyB0eXBvZ3JhcGh5KHBhbGV0dGUpIDogdHlwb2dyYXBoeSxcbiAgICAgIF9yZWYkZm9udEZhbWlseSA9IF9yZWYuZm9udEZhbWlseSxcbiAgICAgIGZvbnRGYW1pbHkgPSBfcmVmJGZvbnRGYW1pbHkgPT09IHZvaWQgMCA/IGRlZmF1bHRGb250RmFtaWx5IDogX3JlZiRmb250RmFtaWx5LFxuICAgICAgX3JlZiRmb250U2l6ZSA9IF9yZWYuZm9udFNpemUsXG4gICAgICBmb250U2l6ZSA9IF9yZWYkZm9udFNpemUgPT09IHZvaWQgMCA/IDE0IDogX3JlZiRmb250U2l6ZSxcbiAgICAgIF9yZWYkZm9udFdlaWdodExpZ2h0ID0gX3JlZi5mb250V2VpZ2h0TGlnaHQsXG4gICAgICBmb250V2VpZ2h0TGlnaHQgPSBfcmVmJGZvbnRXZWlnaHRMaWdodCA9PT0gdm9pZCAwID8gMzAwIDogX3JlZiRmb250V2VpZ2h0TGlnaHQsXG4gICAgICBfcmVmJGZvbnRXZWlnaHRSZWd1bGEgPSBfcmVmLmZvbnRXZWlnaHRSZWd1bGFyLFxuICAgICAgZm9udFdlaWdodFJlZ3VsYXIgPSBfcmVmJGZvbnRXZWlnaHRSZWd1bGEgPT09IHZvaWQgMCA/IDQwMCA6IF9yZWYkZm9udFdlaWdodFJlZ3VsYSxcbiAgICAgIF9yZWYkZm9udFdlaWdodE1lZGl1bSA9IF9yZWYuZm9udFdlaWdodE1lZGl1bSxcbiAgICAgIGZvbnRXZWlnaHRNZWRpdW0gPSBfcmVmJGZvbnRXZWlnaHRNZWRpdW0gPT09IHZvaWQgMCA/IDUwMCA6IF9yZWYkZm9udFdlaWdodE1lZGl1bSxcbiAgICAgIF9yZWYkZm9udFdlaWdodEJvbGQgPSBfcmVmLmZvbnRXZWlnaHRCb2xkLFxuICAgICAgZm9udFdlaWdodEJvbGQgPSBfcmVmJGZvbnRXZWlnaHRCb2xkID09PSB2b2lkIDAgPyA3MDAgOiBfcmVmJGZvbnRXZWlnaHRCb2xkLFxuICAgICAgX3JlZiRodG1sRm9udFNpemUgPSBfcmVmLmh0bWxGb250U2l6ZSxcbiAgICAgIGh0bWxGb250U2l6ZSA9IF9yZWYkaHRtbEZvbnRTaXplID09PSB2b2lkIDAgPyAxNiA6IF9yZWYkaHRtbEZvbnRTaXplLFxuICAgICAgYWxsVmFyaWFudHMgPSBfcmVmLmFsbFZhcmlhbnRzLFxuICAgICAgcHhUb1JlbTIgPSBfcmVmLnB4VG9SZW0sXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbXCJmb250RmFtaWx5XCIsIFwiZm9udFNpemVcIiwgXCJmb250V2VpZ2h0TGlnaHRcIiwgXCJmb250V2VpZ2h0UmVndWxhclwiLCBcImZvbnRXZWlnaHRNZWRpdW1cIiwgXCJmb250V2VpZ2h0Qm9sZFwiLCBcImh0bWxGb250U2l6ZVwiLCBcImFsbFZhcmlhbnRzXCIsIFwicHhUb1JlbVwiXSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAodHlwZW9mIGZvbnRTaXplICE9PSAnbnVtYmVyJykge1xuICAgICAgY29uc29sZS5lcnJvcignTWF0ZXJpYWwtVUk6IGBmb250U2l6ZWAgaXMgcmVxdWlyZWQgdG8gYmUgYSBudW1iZXIuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBodG1sRm9udFNpemUgIT09ICdudW1iZXInKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNYXRlcmlhbC1VSTogYGh0bWxGb250U2l6ZWAgaXMgcmVxdWlyZWQgdG8gYmUgYSBudW1iZXIuJyk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvZWYgPSBmb250U2l6ZSAvIDE0O1xuXG4gIHZhciBweFRvUmVtID0gcHhUb1JlbTIgfHwgZnVuY3Rpb24gKHNpemUpIHtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQoc2l6ZSAvIGh0bWxGb250U2l6ZSAqIGNvZWYsIFwicmVtXCIpO1xuICB9O1xuXG4gIHZhciBidWlsZFZhcmlhbnQgPSBmdW5jdGlvbiBidWlsZFZhcmlhbnQoZm9udFdlaWdodCwgc2l6ZSwgbGluZUhlaWdodCwgbGV0dGVyU3BhY2luZywgY2FzaW5nKSB7XG4gICAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICAgIGZvbnRGYW1pbHk6IGZvbnRGYW1pbHksXG4gICAgICBmb250V2VpZ2h0OiBmb250V2VpZ2h0LFxuICAgICAgZm9udFNpemU6IHB4VG9SZW0oc2l6ZSksXG4gICAgICAvLyBVbml0bGVzcyBmb2xsb3dpbmcgaHR0cHM6Ly9tZXllcndlYi5jb20vZXJpYy90aG91Z2h0cy8yMDA2LzAyLzA4L3VuaXRsZXNzLWxpbmUtaGVpZ2h0cy9cbiAgICAgIGxpbmVIZWlnaHQ6IGxpbmVIZWlnaHRcbiAgICB9LCBmb250RmFtaWx5ID09PSBkZWZhdWx0Rm9udEZhbWlseSA/IHtcbiAgICAgIGxldHRlclNwYWNpbmc6IFwiXCIuY29uY2F0KHJvdW5kKGxldHRlclNwYWNpbmcgLyBzaXplKSwgXCJlbVwiKVxuICAgIH0gOiB7fSwgY2FzaW5nLCBhbGxWYXJpYW50cyk7XG4gIH07XG5cbiAgdmFyIHZhcmlhbnRzID0ge1xuICAgIGgxOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodExpZ2h0LCA5NiwgMS4xNjcsIC0xLjUpLFxuICAgIGgyOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodExpZ2h0LCA2MCwgMS4yLCAtMC41KSxcbiAgICBoMzogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCA0OCwgMS4xNjcsIDApLFxuICAgIGg0OiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDM0LCAxLjIzNSwgMC4yNSksXG4gICAgaDU6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMjQsIDEuMzM0LCAwKSxcbiAgICBoNjogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRNZWRpdW0sIDIwLCAxLjYsIDAuMTUpLFxuICAgIHN1YnRpdGxlMTogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRSZWd1bGFyLCAxNiwgMS43NSwgMC4xNSksXG4gICAgc3VidGl0bGUyOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodE1lZGl1bSwgMTQsIDEuNTcsIDAuMSksXG4gICAgYm9keTE6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTYsIDEuNSwgMC4xNSksXG4gICAgYm9keTI6IGJ1aWxkVmFyaWFudChmb250V2VpZ2h0UmVndWxhciwgMTQsIDEuNDMsIDAuMTUpLFxuICAgIGJ1dHRvbjogYnVpbGRWYXJpYW50KGZvbnRXZWlnaHRNZWRpdW0sIDE0LCAxLjc1LCAwLjQsIGNhc2VBbGxDYXBzKSxcbiAgICBjYXB0aW9uOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDEyLCAxLjY2LCAwLjQpLFxuICAgIG92ZXJsaW5lOiBidWlsZFZhcmlhbnQoZm9udFdlaWdodFJlZ3VsYXIsIDEyLCAyLjY2LCAxLCBjYXNlQWxsQ2FwcylcbiAgfTtcbiAgcmV0dXJuIGRlZXBtZXJnZShfZXh0ZW5kcyh7XG4gICAgaHRtbEZvbnRTaXplOiBodG1sRm9udFNpemUsXG4gICAgcHhUb1JlbTogcHhUb1JlbSxcbiAgICByb3VuZDogcm91bmQsXG4gICAgLy8gVE9ETyB2NTogcmVtb3ZlXG4gICAgZm9udEZhbWlseTogZm9udEZhbWlseSxcbiAgICBmb250U2l6ZTogZm9udFNpemUsXG4gICAgZm9udFdlaWdodExpZ2h0OiBmb250V2VpZ2h0TGlnaHQsXG4gICAgZm9udFdlaWdodFJlZ3VsYXI6IGZvbnRXZWlnaHRSZWd1bGFyLFxuICAgIGZvbnRXZWlnaHRNZWRpdW06IGZvbnRXZWlnaHRNZWRpdW0sXG4gICAgZm9udFdlaWdodEJvbGQ6IGZvbnRXZWlnaHRCb2xkXG4gIH0sIHZhcmlhbnRzKSwgb3RoZXIsIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwXG5cbiAgfSk7XG59IiwidmFyIHNoYWRvd0tleVVtYnJhT3BhY2l0eSA9IDAuMjtcbnZhciBzaGFkb3dLZXlQZW51bWJyYU9wYWNpdHkgPSAwLjE0O1xudmFyIHNoYWRvd0FtYmllbnRTaGFkb3dPcGFjaXR5ID0gMC4xMjtcblxuZnVuY3Rpb24gY3JlYXRlU2hhZG93KCkge1xuICByZXR1cm4gW1wiXCIuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gMSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1sxXSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gMiA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1syXSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gMyA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1szXSwgXCJweCByZ2JhKDAsMCwwLFwiKS5jb25jYXQoc2hhZG93S2V5VW1icmFPcGFjaXR5LCBcIilcIiksIFwiXCIuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gNCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s0XSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gNSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s1XSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gNiA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s2XSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gNyA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s3XSwgXCJweCByZ2JhKDAsMCwwLFwiKS5jb25jYXQoc2hhZG93S2V5UGVudW1icmFPcGFjaXR5LCBcIilcIiksIFwiXCIuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gOCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s4XSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gOSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1s5XSwgXCJweCBcIikuY29uY2F0KGFyZ3VtZW50cy5sZW5ndGggPD0gMTAgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbMTBdLCBcInB4IFwiKS5jb25jYXQoYXJndW1lbnRzLmxlbmd0aCA8PSAxMSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1sxMV0sIFwicHggcmdiYSgwLDAsMCxcIikuY29uY2F0KHNoYWRvd0FtYmllbnRTaGFkb3dPcGFjaXR5LCBcIilcIildLmpvaW4oJywnKTtcbn0gLy8gVmFsdWVzIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hdGVyaWFsLWNvbXBvbmVudHMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvYmxvYi9iZTg3NDdmOTQ1NzQ2NjljYjVlN2FkZDFhN2M1NGZhNDFhODljZWM3L3BhY2thZ2VzL21kYy1lbGV2YXRpb24vX3ZhcmlhYmxlcy5zY3NzXG5cblxudmFyIHNoYWRvd3MgPSBbJ25vbmUnLCBjcmVhdGVTaGFkb3coMCwgMiwgMSwgLTEsIDAsIDEsIDEsIDAsIDAsIDEsIDMsIDApLCBjcmVhdGVTaGFkb3coMCwgMywgMSwgLTIsIDAsIDIsIDIsIDAsIDAsIDEsIDUsIDApLCBjcmVhdGVTaGFkb3coMCwgMywgMywgLTIsIDAsIDMsIDQsIDAsIDAsIDEsIDgsIDApLCBjcmVhdGVTaGFkb3coMCwgMiwgNCwgLTEsIDAsIDQsIDUsIDAsIDAsIDEsIDEwLCAwKSwgY3JlYXRlU2hhZG93KDAsIDMsIDUsIC0xLCAwLCA1LCA4LCAwLCAwLCAxLCAxNCwgMCksIGNyZWF0ZVNoYWRvdygwLCAzLCA1LCAtMSwgMCwgNiwgMTAsIDAsIDAsIDEsIDE4LCAwKSwgY3JlYXRlU2hhZG93KDAsIDQsIDUsIC0yLCAwLCA3LCAxMCwgMSwgMCwgMiwgMTYsIDEpLCBjcmVhdGVTaGFkb3coMCwgNSwgNSwgLTMsIDAsIDgsIDEwLCAxLCAwLCAzLCAxNCwgMiksIGNyZWF0ZVNoYWRvdygwLCA1LCA2LCAtMywgMCwgOSwgMTIsIDEsIDAsIDMsIDE2LCAyKSwgY3JlYXRlU2hhZG93KDAsIDYsIDYsIC0zLCAwLCAxMCwgMTQsIDEsIDAsIDQsIDE4LCAzKSwgY3JlYXRlU2hhZG93KDAsIDYsIDcsIC00LCAwLCAxMSwgMTUsIDEsIDAsIDQsIDIwLCAzKSwgY3JlYXRlU2hhZG93KDAsIDcsIDgsIC00LCAwLCAxMiwgMTcsIDIsIDAsIDUsIDIyLCA0KSwgY3JlYXRlU2hhZG93KDAsIDcsIDgsIC00LCAwLCAxMywgMTksIDIsIDAsIDUsIDI0LCA0KSwgY3JlYXRlU2hhZG93KDAsIDcsIDksIC00LCAwLCAxNCwgMjEsIDIsIDAsIDUsIDI2LCA0KSwgY3JlYXRlU2hhZG93KDAsIDgsIDksIC01LCAwLCAxNSwgMjIsIDIsIDAsIDYsIDI4LCA1KSwgY3JlYXRlU2hhZG93KDAsIDgsIDEwLCAtNSwgMCwgMTYsIDI0LCAyLCAwLCA2LCAzMCwgNSksIGNyZWF0ZVNoYWRvdygwLCA4LCAxMSwgLTUsIDAsIDE3LCAyNiwgMiwgMCwgNiwgMzIsIDUpLCBjcmVhdGVTaGFkb3coMCwgOSwgMTEsIC01LCAwLCAxOCwgMjgsIDIsIDAsIDcsIDM0LCA2KSwgY3JlYXRlU2hhZG93KDAsIDksIDEyLCAtNiwgMCwgMTksIDI5LCAyLCAwLCA3LCAzNiwgNiksIGNyZWF0ZVNoYWRvdygwLCAxMCwgMTMsIC02LCAwLCAyMCwgMzEsIDMsIDAsIDgsIDM4LCA3KSwgY3JlYXRlU2hhZG93KDAsIDEwLCAxMywgLTYsIDAsIDIxLCAzMywgMywgMCwgOCwgNDAsIDcpLCBjcmVhdGVTaGFkb3coMCwgMTAsIDE0LCAtNiwgMCwgMjIsIDM1LCAzLCAwLCA4LCA0MiwgNyksIGNyZWF0ZVNoYWRvdygwLCAxMSwgMTQsIC03LCAwLCAyMywgMzYsIDMsIDAsIDksIDQ0LCA4KSwgY3JlYXRlU2hhZG93KDAsIDExLCAxNSwgLTcsIDAsIDI0LCAzOCwgMywgMCwgOSwgNDYsIDgpXTtcbmV4cG9ydCBkZWZhdWx0IHNoYWRvd3M7IiwidmFyIHNoYXBlID0ge1xuICBib3JkZXJSYWRpdXM6IDRcbn07XG5leHBvcnQgZGVmYXVsdCBzaGFwZTsiLCJpbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX3R5cGVvZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IG1lcmdlIGZyb20gJy4vbWVyZ2UnOyAvLyBUaGUgYnJlYWtwb2ludCAqKnN0YXJ0KiogYXQgdGhpcyB2YWx1ZS5cbi8vIEZvciBpbnN0YW5jZSB3aXRoIHRoZSBmaXJzdCBicmVha3BvaW50IHhzOiBbeHMsIHNtWy5cblxudmFyIHZhbHVlcyA9IHtcbiAgeHM6IDAsXG4gIHNtOiA2MDAsXG4gIG1kOiA5NjAsXG4gIGxnOiAxMjgwLFxuICB4bDogMTkyMFxufTtcbnZhciBkZWZhdWx0QnJlYWtwb2ludHMgPSB7XG4gIC8vIFNvcnRlZCBBU0MgYnkgc2l6ZS4gVGhhdCdzIGltcG9ydGFudC5cbiAgLy8gSXQgY2FuJ3QgYmUgY29uZmlndXJlZCBhcyBpdCdzIHVzZWQgc3RhdGljYWxseSBmb3IgcHJvcFR5cGVzLlxuICBrZXlzOiBbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ10sXG4gIHVwOiBmdW5jdGlvbiB1cChrZXkpIHtcbiAgICByZXR1cm4gXCJAbWVkaWEgKG1pbi13aWR0aDpcIi5jb25jYXQodmFsdWVzW2tleV0sIFwicHgpXCIpO1xuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICghcHJvcHMudGhlbWUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01hdGVyaWFsLVVJOiBZb3UgYXJlIGNhbGxpbmcgYSBzdHlsZSBmdW5jdGlvbiB3aXRob3V0IGEgdGhlbWUgdmFsdWUuJyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkocHJvcFZhbHVlKSkge1xuICAgIHZhciB0aGVtZUJyZWFrcG9pbnRzID0gcHJvcHMudGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuICAgIHJldHVybiBwcm9wVmFsdWUucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGl0ZW0sIGluZGV4KSB7XG4gICAgICBhY2NbdGhlbWVCcmVha3BvaW50cy51cCh0aGVtZUJyZWFrcG9pbnRzLmtleXNbaW5kZXhdKV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2luZGV4XSk7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbiAgfVxuXG4gIGlmIChfdHlwZW9mKHByb3BWYWx1ZSkgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIF90aGVtZUJyZWFrcG9pbnRzID0gcHJvcHMudGhlbWUuYnJlYWtwb2ludHMgfHwgZGVmYXVsdEJyZWFrcG9pbnRzO1xuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BWYWx1ZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGJyZWFrcG9pbnQpIHtcbiAgICAgIGFjY1tfdGhlbWVCcmVha3BvaW50cy51cChicmVha3BvaW50KV0gPSBzdHlsZUZyb21Qcm9wVmFsdWUocHJvcFZhbHVlW2JyZWFrcG9pbnRdKTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9XG5cbiAgdmFyIG91dHB1dCA9IHN0eWxlRnJvbVByb3BWYWx1ZShwcm9wVmFsdWUpO1xuICByZXR1cm4gb3V0cHV0O1xufVxuXG5mdW5jdGlvbiBicmVha3BvaW50cyhzdHlsZUZ1bmN0aW9uKSB7XG4gIHZhciBuZXdTdHlsZUZ1bmN0aW9uID0gZnVuY3Rpb24gbmV3U3R5bGVGdW5jdGlvbihwcm9wcykge1xuICAgIHZhciBiYXNlID0gc3R5bGVGdW5jdGlvbihwcm9wcyk7XG4gICAgdmFyIHRoZW1lQnJlYWtwb2ludHMgPSBwcm9wcy50aGVtZS5icmVha3BvaW50cyB8fCBkZWZhdWx0QnJlYWtwb2ludHM7XG4gICAgdmFyIGV4dGVuZGVkID0gdGhlbWVCcmVha3BvaW50cy5rZXlzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgIGlmIChwcm9wc1trZXldKSB7XG4gICAgICAgIGFjYyA9IGFjYyB8fCB7fTtcbiAgICAgICAgYWNjW3RoZW1lQnJlYWtwb2ludHMudXAoa2V5KV0gPSBzdHlsZUZ1bmN0aW9uKF9leHRlbmRzKHtcbiAgICAgICAgICB0aGVtZTogcHJvcHMudGhlbWVcbiAgICAgICAgfSwgcHJvcHNba2V5XSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIG51bGwpO1xuICAgIHJldHVybiBtZXJnZShiYXNlLCBleHRlbmRlZCk7XG4gIH07XG5cbiAgbmV3U3R5bGVGdW5jdGlvbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX2V4dGVuZHMoe30sIHN0eWxlRnVuY3Rpb24ucHJvcFR5cGVzLCB7XG4gICAgeHM6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgc206IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbWQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbGc6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgeGw6IFByb3BUeXBlcy5vYmplY3RcbiAgfSkgOiB7fTtcbiAgbmV3U3R5bGVGdW5jdGlvbi5maWx0ZXJQcm9wcyA9IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHN0eWxlRnVuY3Rpb24uZmlsdGVyUHJvcHMpKTtcbiAgcmV0dXJuIG5ld1N0eWxlRnVuY3Rpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJyZWFrcG9pbnRzOyIsImltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5cbmZ1bmN0aW9uIG1lcmdlKGFjYywgaXRlbSkge1xuICBpZiAoIWl0ZW0pIHtcbiAgICByZXR1cm4gYWNjO1xuICB9XG5cbiAgcmV0dXJuIGRlZXBtZXJnZShhY2MsIGl0ZW0sIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwLCBpdCdzIHdheSBmYXN0ZXIuXG5cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lcmdlOyIsImltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheVwiO1xuaW1wb3J0IHJlc3BvbnNpdmVQcm9wVHlwZSBmcm9tICcuL3Jlc3BvbnNpdmVQcm9wVHlwZSc7XG5pbXBvcnQgeyBoYW5kbGVCcmVha3BvaW50cyB9IGZyb20gJy4vYnJlYWtwb2ludHMnO1xuaW1wb3J0IG1lcmdlIGZyb20gJy4vbWVyZ2UnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnLi9tZW1vaXplJztcbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtOiAnbWFyZ2luJyxcbiAgcDogJ3BhZGRpbmcnXG59O1xudmFyIGRpcmVjdGlvbnMgPSB7XG4gIHQ6ICdUb3AnLFxuICByOiAnUmlnaHQnLFxuICBiOiAnQm90dG9tJyxcbiAgbDogJ0xlZnQnLFxuICB4OiBbJ0xlZnQnLCAnUmlnaHQnXSxcbiAgeTogWydUb3AnLCAnQm90dG9tJ11cbn07XG52YXIgYWxpYXNlcyA9IHtcbiAgbWFyZ2luWDogJ214JyxcbiAgbWFyZ2luWTogJ215JyxcbiAgcGFkZGluZ1g6ICdweCcsXG4gIHBhZGRpbmdZOiAncHknXG59OyAvLyBtZW1vaXplKCkgaW1wYWN0OlxuLy8gRnJvbSAzMDAsMDAwIG9wcy9zZWNcbi8vIFRvIDM1MCwwMDAgb3BzL3NlY1xuXG52YXIgZ2V0Q3NzUHJvcGVydGllcyA9IG1lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgLy8gSXQncyBub3QgYSBzaG9ydGhhbmQgbm90YXRpb24uXG4gIGlmIChwcm9wLmxlbmd0aCA+IDIpIHtcbiAgICBpZiAoYWxpYXNlc1twcm9wXSkge1xuICAgICAgcHJvcCA9IGFsaWFzZXNbcHJvcF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBbcHJvcF07XG4gICAgfVxuICB9XG5cbiAgdmFyIF9wcm9wJHNwbGl0ID0gcHJvcC5zcGxpdCgnJyksXG4gICAgICBfcHJvcCRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfcHJvcCRzcGxpdCwgMiksXG4gICAgICBhID0gX3Byb3Akc3BsaXQyWzBdLFxuICAgICAgYiA9IF9wcm9wJHNwbGl0MlsxXTtcblxuICB2YXIgcHJvcGVydHkgPSBwcm9wZXJ0aWVzW2FdO1xuICB2YXIgZGlyZWN0aW9uID0gZGlyZWN0aW9uc1tiXSB8fCAnJztcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoZGlyZWN0aW9uKSA/IGRpcmVjdGlvbi5tYXAoZnVuY3Rpb24gKGRpcikge1xuICAgIHJldHVybiBwcm9wZXJ0eSArIGRpcjtcbiAgfSkgOiBbcHJvcGVydHkgKyBkaXJlY3Rpb25dO1xufSk7XG52YXIgc3BhY2luZ0tleXMgPSBbJ20nLCAnbXQnLCAnbXInLCAnbWInLCAnbWwnLCAnbXgnLCAnbXknLCAncCcsICdwdCcsICdwcicsICdwYicsICdwbCcsICdweCcsICdweScsICdtYXJnaW4nLCAnbWFyZ2luVG9wJywgJ21hcmdpblJpZ2h0JywgJ21hcmdpbkJvdHRvbScsICdtYXJnaW5MZWZ0JywgJ21hcmdpblgnLCAnbWFyZ2luWScsICdwYWRkaW5nJywgJ3BhZGRpbmdUb3AnLCAncGFkZGluZ1JpZ2h0JywgJ3BhZGRpbmdCb3R0b20nLCAncGFkZGluZ0xlZnQnLCAncGFkZGluZ1gnLCAncGFkZGluZ1knXTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVVbmFyeVNwYWNpbmcodGhlbWUpIHtcbiAgdmFyIHRoZW1lU3BhY2luZyA9IHRoZW1lLnNwYWNpbmcgfHwgODtcblxuICBpZiAodHlwZW9mIHRoZW1lU3BhY2luZyA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFicykge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhYnMgIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIk1hdGVyaWFsLVVJOiBFeHBlY3RlZCBzcGFjaW5nIGFyZ3VtZW50IHRvIGJlIGEgbnVtYmVyLCBnb3QgXCIuY29uY2F0KGFicywgXCIuXCIpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhlbWVTcGFjaW5nICogYWJzO1xuICAgIH07XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheSh0aGVtZVNwYWNpbmcpKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhYnMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmIChhYnMgPiB0aGVtZVNwYWNpbmcubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoW1wiTWF0ZXJpYWwtVUk6IFRoZSB2YWx1ZSBwcm92aWRlZCAoXCIuY29uY2F0KGFicywgXCIpIG92ZXJmbG93cy5cIiksIFwiVGhlIHN1cHBvcnRlZCB2YWx1ZXMgYXJlOiBcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkodGhlbWVTcGFjaW5nKSwgXCIuXCIpLCBcIlwiLmNvbmNhdChhYnMsIFwiID4gXCIpLmNvbmNhdCh0aGVtZVNwYWNpbmcubGVuZ3RoIC0gMSwgXCIsIHlvdSBuZWVkIHRvIGFkZCB0aGUgbWlzc2luZyB2YWx1ZXMuXCIpXS5qb2luKCdcXG4nKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoZW1lU3BhY2luZ1thYnNdO1xuICAgIH07XG4gIH1cblxuICBpZiAodHlwZW9mIHRoZW1lU3BhY2luZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0aGVtZVNwYWNpbmc7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IoW1wiTWF0ZXJpYWwtVUk6IFRoZSBgdGhlbWUuc3BhY2luZ2AgdmFsdWUgKFwiLmNvbmNhdCh0aGVtZVNwYWNpbmcsIFwiKSBpcyBpbnZhbGlkLlwiKSwgJ0l0IHNob3VsZCBiZSBhIG51bWJlciwgYW4gYXJyYXkgb3IgYSBmdW5jdGlvbi4nXS5qb2luKCdcXG4nKSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFZhbHVlKHRyYW5zZm9ybWVyLCBwcm9wVmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBwcm9wVmFsdWUgPT09ICdzdHJpbmcnIHx8IHByb3BWYWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHByb3BWYWx1ZTtcbiAgfVxuXG4gIHZhciBhYnMgPSBNYXRoLmFicyhwcm9wVmFsdWUpO1xuICB2YXIgdHJhbnNmb3JtZWQgPSB0cmFuc2Zvcm1lcihhYnMpO1xuXG4gIGlmIChwcm9wVmFsdWUgPj0gMCkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHJhbnNmb3JtZWQgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIC10cmFuc2Zvcm1lZDtcbiAgfVxuXG4gIHJldHVybiBcIi1cIi5jb25jYXQodHJhbnNmb3JtZWQpO1xufVxuXG5mdW5jdGlvbiBnZXRTdHlsZUZyb21Qcm9wVmFsdWUoY3NzUHJvcGVydGllcywgdHJhbnNmb3JtZXIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wVmFsdWUpIHtcbiAgICByZXR1cm4gY3NzUHJvcGVydGllcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgY3NzUHJvcGVydHkpIHtcbiAgICAgIGFjY1tjc3NQcm9wZXJ0eV0gPSBnZXRWYWx1ZSh0cmFuc2Zvcm1lciwgcHJvcFZhbHVlKTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzcGFjaW5nKHByb3BzKSB7XG4gIHZhciB0aGVtZSA9IHByb3BzLnRoZW1lO1xuICB2YXIgdHJhbnNmb3JtZXIgPSBjcmVhdGVVbmFyeVNwYWNpbmcodGhlbWUpO1xuICByZXR1cm4gT2JqZWN0LmtleXMocHJvcHMpLm1hcChmdW5jdGlvbiAocHJvcCkge1xuICAgIC8vIFVzaW5nIGEgaGFzaCBjb21wdXRhdGlvbiBvdmVyIGFuIGFycmF5IGl0ZXJhdGlvbiBjb3VsZCBiZSBmYXN0ZXIsIGJ1dCB3aXRoIG9ubHkgMjggaXRlbXMsXG4gICAgLy8gaXQncyBkb2Vzbid0IHdvcnRoIHRoZSBidW5kbGUgc2l6ZS5cbiAgICBpZiAoc3BhY2luZ0tleXMuaW5kZXhPZihwcm9wKSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBjc3NQcm9wZXJ0aWVzID0gZ2V0Q3NzUHJvcGVydGllcyhwcm9wKTtcbiAgICB2YXIgc3R5bGVGcm9tUHJvcFZhbHVlID0gZ2V0U3R5bGVGcm9tUHJvcFZhbHVlKGNzc1Byb3BlcnRpZXMsIHRyYW5zZm9ybWVyKTtcbiAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcF07XG4gICAgcmV0dXJuIGhhbmRsZUJyZWFrcG9pbnRzKHByb3BzLCBwcm9wVmFsdWUsIHN0eWxlRnJvbVByb3BWYWx1ZSk7XG4gIH0pLnJlZHVjZShtZXJnZSwge30pO1xufVxuXG5zcGFjaW5nLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBzcGFjaW5nS2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG4gIG9ialtrZXldID0gcmVzcG9uc2l2ZVByb3BUeXBlO1xuICByZXR1cm4gb2JqO1xufSwge30pIDoge307XG5zcGFjaW5nLmZpbHRlclByb3BzID0gc3BhY2luZ0tleXM7XG5leHBvcnQgZGVmYXVsdCBzcGFjaW5nOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59IiwiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhIb2xlc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pdGVyYWJsZVRvQXJyYXlMaW1pdFwiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcbiAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iLCJpbXBvcnQgeyBjcmVhdGVVbmFyeVNwYWNpbmcgfSBmcm9tICdAbWF0ZXJpYWwtdWkvc3lzdGVtJztcbnZhciB3YXJuT25jZTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNwYWNpbmcoKSB7XG4gIHZhciBzcGFjaW5nSW5wdXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDg7XG5cbiAgLy8gQWxyZWFkeSB0cmFuc2Zvcm1lZC5cbiAgaWYgKHNwYWNpbmdJbnB1dC5tdWkpIHtcbiAgICByZXR1cm4gc3BhY2luZ0lucHV0O1xuICB9IC8vIE1hdGVyaWFsIERlc2lnbiBsYXlvdXRzIGFyZSB2aXN1YWxseSBiYWxhbmNlZC4gTW9zdCBtZWFzdXJlbWVudHMgYWxpZ24gdG8gYW4gOGRwIGdyaWQgYXBwbGllZCwgd2hpY2ggYWxpZ25zIGJvdGggc3BhY2luZyBhbmQgdGhlIG92ZXJhbGwgbGF5b3V0LlxuICAvLyBTbWFsbGVyIGNvbXBvbmVudHMsIHN1Y2ggYXMgaWNvbnMgYW5kIHR5cGUsIGNhbiBhbGlnbiB0byBhIDRkcCBncmlkLlxuICAvLyBodHRwczovL21hdGVyaWFsLmlvL2Rlc2lnbi9sYXlvdXQvdW5kZXJzdGFuZGluZy1sYXlvdXQuaHRtbCN1c2FnZVxuXG5cbiAgdmFyIHRyYW5zZm9ybSA9IGNyZWF0ZVVuYXJ5U3BhY2luZyh7XG4gICAgc3BhY2luZzogc3BhY2luZ0lucHV0XG4gIH0pO1xuXG4gIHZhciBzcGFjaW5nID0gZnVuY3Rpb24gc3BhY2luZygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghKGFyZ3MubGVuZ3RoIDw9IDQpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNYXRlcmlhbC1VSTogVG9vIG1hbnkgYXJndW1lbnRzIHByb3ZpZGVkLCBleHBlY3RlZCBiZXR3ZWVuIDAgYW5kIDQsIGdvdCBcIi5jb25jYXQoYXJncy5sZW5ndGgpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYXJncy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiB0cmFuc2Zvcm0oMSk7XG4gICAgfVxuXG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAxKSB7XG4gICAgICByZXR1cm4gdHJhbnNmb3JtKGFyZ3NbMF0pO1xuICAgIH1cblxuICAgIHJldHVybiBhcmdzLm1hcChmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgICAgIGlmICh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhcmd1bWVudDtcbiAgICAgIH1cblxuICAgICAgdmFyIG91dHB1dCA9IHRyYW5zZm9ybShhcmd1bWVudCk7XG4gICAgICByZXR1cm4gdHlwZW9mIG91dHB1dCA9PT0gJ251bWJlcicgPyBcIlwiLmNvbmNhdChvdXRwdXQsIFwicHhcIikgOiBvdXRwdXQ7XG4gICAgfSkuam9pbignICcpO1xuICB9OyAvLyBCYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0byByZW1vdmUgaW4gdjUuXG5cblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc3BhY2luZywgJ3VuaXQnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoIXdhcm5PbmNlIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFsnTWF0ZXJpYWwtVUk6IHRoZW1lLnNwYWNpbmcudW5pdCB1c2FnZSBoYXMgYmVlbiBkZXByZWNhdGVkLicsICdJdCB3aWxsIGJlIHJlbW92ZWQgaW4gdjUuJywgJ1lvdSBjYW4gcmVwbGFjZSBgdGhlbWUuc3BhY2luZy51bml0ICogeWAgd2l0aCBgdGhlbWUuc3BhY2luZyh5KWAuJywgJycsICdZb3UgY2FuIHVzZSB0aGUgYGh0dHBzOi8vZ2l0aHViLmNvbS9tdWktb3JnL21hdGVyaWFsLXVpL3RyZWUvbWFzdGVyL3BhY2thZ2VzL21hdGVyaWFsLXVpLWNvZGVtb2QvUkVBRE1FLm1kI3RoZW1lLXNwYWNpbmctYXBpYCBtaWdyYXRpb24gaGVscGVyIHRvIG1ha2UgdGhlIHByb2Nlc3Mgc21vb3RoZXIuJ10uam9pbignXFxuJykpO1xuICAgICAgICB9XG5cbiAgICAgICAgd2Fybk9uY2UgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3BhY2luZ0lucHV0O1xuICAgIH1cbiAgfSk7XG4gIHNwYWNpbmcubXVpID0gdHJ1ZTtcbiAgcmV0dXJuIHNwYWNpbmc7XG59IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbi8vIEZvbGxvdyBodHRwczovL21hdGVyaWFsLmdvb2dsZS5jb20vbW90aW9uL2R1cmF0aW9uLWVhc2luZy5odG1sI2R1cmF0aW9uLWVhc2luZy1uYXR1cmFsLWVhc2luZy1jdXJ2ZXNcbi8vIHRvIGxlYXJuIHRoZSBjb250ZXh0IGluIHdoaWNoIGVhY2ggZWFzaW5nIHNob3VsZCBiZSB1c2VkLlxuZXhwb3J0IHZhciBlYXNpbmcgPSB7XG4gIC8vIFRoaXMgaXMgdGhlIG1vc3QgY29tbW9uIGVhc2luZyBjdXJ2ZS5cbiAgZWFzZUluT3V0OiAnY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKScsXG4gIC8vIE9iamVjdHMgZW50ZXIgdGhlIHNjcmVlbiBhdCBmdWxsIHZlbG9jaXR5IGZyb20gb2ZmLXNjcmVlbiBhbmRcbiAgLy8gc2xvd2x5IGRlY2VsZXJhdGUgdG8gYSByZXN0aW5nIHBvaW50LlxuICBlYXNlT3V0OiAnY3ViaWMtYmV6aWVyKDAuMCwgMCwgMC4yLCAxKScsXG4gIC8vIE9iamVjdHMgbGVhdmUgdGhlIHNjcmVlbiBhdCBmdWxsIHZlbG9jaXR5LiBUaGV5IGRvIG5vdCBkZWNlbGVyYXRlIHdoZW4gb2ZmLXNjcmVlbi5cbiAgZWFzZUluOiAnY3ViaWMtYmV6aWVyKDAuNCwgMCwgMSwgMSknLFxuICAvLyBUaGUgc2hhcnAgY3VydmUgaXMgdXNlZCBieSBvYmplY3RzIHRoYXQgbWF5IHJldHVybiB0byB0aGUgc2NyZWVuIGF0IGFueSB0aW1lLlxuICBzaGFycDogJ2N1YmljLWJlemllcigwLjQsIDAsIDAuNiwgMSknXG59OyAvLyBGb2xsb3cgaHR0cHM6Ly9tYXRlcmlhbC5pby9ndWlkZWxpbmVzL21vdGlvbi9kdXJhdGlvbi1lYXNpbmcuaHRtbCNkdXJhdGlvbi1lYXNpbmctY29tbW9uLWR1cmF0aW9uc1xuLy8gdG8gbGVhcm4gd2hlbiB1c2Ugd2hhdCB0aW1pbmdcblxuZXhwb3J0IHZhciBkdXJhdGlvbiA9IHtcbiAgc2hvcnRlc3Q6IDE1MCxcbiAgc2hvcnRlcjogMjAwLFxuICBzaG9ydDogMjUwLFxuICAvLyBtb3N0IGJhc2ljIHJlY29tbWVuZGVkIHRpbWluZ1xuICBzdGFuZGFyZDogMzAwLFxuICAvLyB0aGlzIGlzIHRvIGJlIHVzZWQgaW4gY29tcGxleCBhbmltYXRpb25zXG4gIGNvbXBsZXg6IDM3NSxcbiAgLy8gcmVjb21tZW5kZWQgd2hlbiBzb21ldGhpbmcgaXMgZW50ZXJpbmcgc2NyZWVuXG4gIGVudGVyaW5nU2NyZWVuOiAyMjUsXG4gIC8vIHJlY29tbWVuZGVkIHdoZW4gc29tZXRoaW5nIGlzIGxlYXZpbmcgc2NyZWVuXG4gIGxlYXZpbmdTY3JlZW46IDE5NVxufTtcblxuZnVuY3Rpb24gZm9ybWF0TXMobWlsbGlzZWNvbmRzKSB7XG4gIHJldHVybiBcIlwiLmNvbmNhdChNYXRoLnJvdW5kKG1pbGxpc2Vjb25kcyksIFwibXNcIik7XG59XG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBwcm9wc1xuICogQHBhcmFtIHtvYmplY3R9IHBhcmFtXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW0ucHJvcFxuICogQHBhcmFtIHtudW1iZXJ9IHBhcmFtLmR1cmF0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW0uZWFzaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gcGFyYW0uZGVsYXlcbiAqL1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZWFzaW5nOiBlYXNpbmcsXG4gIGR1cmF0aW9uOiBkdXJhdGlvbixcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbJ2FsbCddO1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIHZhciBfb3B0aW9ucyRkdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24sXG4gICAgICAgIGR1cmF0aW9uT3B0aW9uID0gX29wdGlvbnMkZHVyYXRpb24gPT09IHZvaWQgMCA/IGR1cmF0aW9uLnN0YW5kYXJkIDogX29wdGlvbnMkZHVyYXRpb24sXG4gICAgICAgIF9vcHRpb25zJGVhc2luZyA9IG9wdGlvbnMuZWFzaW5nLFxuICAgICAgICBlYXNpbmdPcHRpb24gPSBfb3B0aW9ucyRlYXNpbmcgPT09IHZvaWQgMCA/IGVhc2luZy5lYXNlSW5PdXQgOiBfb3B0aW9ucyRlYXNpbmcsXG4gICAgICAgIF9vcHRpb25zJGRlbGF5ID0gb3B0aW9ucy5kZWxheSxcbiAgICAgICAgZGVsYXkgPSBfb3B0aW9ucyRkZWxheSA9PT0gdm9pZCAwID8gMCA6IF9vcHRpb25zJGRlbGF5LFxuICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBbXCJkdXJhdGlvblwiLCBcImVhc2luZ1wiLCBcImRlbGF5XCJdKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgaXNTdHJpbmcgPSBmdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJztcbiAgICAgIH07XG5cbiAgICAgIHZhciBpc051bWJlciA9IGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiAhaXNOYU4ocGFyc2VGbG9hdCh2YWx1ZSkpO1xuICAgICAgfTtcblxuICAgICAgaWYgKCFpc1N0cmluZyhwcm9wcykgJiYgIUFycmF5LmlzQXJyYXkocHJvcHMpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01hdGVyaWFsLVVJOiBBcmd1bWVudCBcInByb3BzXCIgbXVzdCBiZSBhIHN0cmluZyBvciBBcnJheS4nKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc051bWJlcihkdXJhdGlvbk9wdGlvbikgJiYgIWlzU3RyaW5nKGR1cmF0aW9uT3B0aW9uKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiTWF0ZXJpYWwtVUk6IEFyZ3VtZW50IFxcXCJkdXJhdGlvblxcXCIgbXVzdCBiZSBhIG51bWJlciBvciBhIHN0cmluZyBidXQgZm91bmQgXCIuY29uY2F0KGR1cmF0aW9uT3B0aW9uLCBcIi5cIikpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzU3RyaW5nKGVhc2luZ09wdGlvbikpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignTWF0ZXJpYWwtVUk6IEFyZ3VtZW50IFwiZWFzaW5nXCIgbXVzdCBiZSBhIHN0cmluZy4nKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc051bWJlcihkZWxheSkgJiYgIWlzU3RyaW5nKGRlbGF5KSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdNYXRlcmlhbC1VSTogQXJndW1lbnQgXCJkZWxheVwiIG11c3QgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3Qua2V5cyhvdGhlcikubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNYXRlcmlhbC1VSTogVW5yZWNvZ25pemVkIGFyZ3VtZW50KHMpIFtcIi5jb25jYXQoT2JqZWN0LmtleXMob3RoZXIpLmpvaW4oJywnKSwgXCJdLlwiKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChBcnJheS5pc0FycmF5KHByb3BzKSA/IHByb3BzIDogW3Byb3BzXSkubWFwKGZ1bmN0aW9uIChhbmltYXRlZFByb3ApIHtcbiAgICAgIHJldHVybiBcIlwiLmNvbmNhdChhbmltYXRlZFByb3AsIFwiIFwiKS5jb25jYXQodHlwZW9mIGR1cmF0aW9uT3B0aW9uID09PSAnc3RyaW5nJyA/IGR1cmF0aW9uT3B0aW9uIDogZm9ybWF0TXMoZHVyYXRpb25PcHRpb24pLCBcIiBcIikuY29uY2F0KGVhc2luZ09wdGlvbiwgXCIgXCIpLmNvbmNhdCh0eXBlb2YgZGVsYXkgPT09ICdzdHJpbmcnID8gZGVsYXkgOiBmb3JtYXRNcyhkZWxheSkpO1xuICAgIH0pLmpvaW4oJywnKTtcbiAgfSxcbiAgZ2V0QXV0b0hlaWdodER1cmF0aW9uOiBmdW5jdGlvbiBnZXRBdXRvSGVpZ2h0RHVyYXRpb24oaGVpZ2h0KSB7XG4gICAgaWYgKCFoZWlnaHQpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIHZhciBjb25zdGFudCA9IGhlaWdodCAvIDM2OyAvLyBodHRwczovL3d3dy53b2xmcmFtYWxwaGEuY29tL2lucHV0Lz9pPSg0KyUyQisxNSsqKyh4KyUyRiszNispKyoqKzAuMjUrJTJCKyh4KyUyRiszNikrJTJGKzUpKyorMTBcblxuICAgIHJldHVybiBNYXRoLnJvdW5kKCg0ICsgMTUgKiBNYXRoLnBvdyhjb25zdGFudCwgMC4yNSkgKyBjb25zdGFudCAvIDUpICogMTApO1xuICB9XG59OyIsIi8vIFdlIG5lZWQgdG8gY2VudHJhbGl6ZSB0aGUgekluZGV4IGRlZmluaXRpb25zIGFzIHRoZXkgd29ya1xuLy8gbGlrZSBnbG9iYWwgdmFsdWVzIGluIHRoZSBicm93c2VyLlxudmFyIHpJbmRleCA9IHtcbiAgbW9iaWxlU3RlcHBlcjogMTAwMCxcbiAgc3BlZWREaWFsOiAxMDUwLFxuICBhcHBCYXI6IDExMDAsXG4gIGRyYXdlcjogMTIwMCxcbiAgbW9kYWw6IDEzMDAsXG4gIHNuYWNrYmFyOiAxNDAwLFxuICB0b29sdGlwOiAxNTAwXG59O1xuZXhwb3J0IGRlZmF1bHQgekluZGV4OyIsImltcG9ydCBjcmVhdGVNdWlUaGVtZSBmcm9tICcuL2NyZWF0ZU11aVRoZW1lJztcbnZhciBkZWZhdWx0VGhlbWUgPSBjcmVhdGVNdWlUaGVtZSgpO1xuZXhwb3J0IGRlZmF1bHQgZGVmYXVsdFRoZW1lOyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc1wiO1xuaW1wb3J0IHsgZGVlcG1lcmdlIH0gZnJvbSAnQG1hdGVyaWFsLXVpL3V0aWxzJztcbmltcG9ydCBjcmVhdGVCcmVha3BvaW50cyBmcm9tICcuL2NyZWF0ZUJyZWFrcG9pbnRzJztcbmltcG9ydCBjcmVhdGVNaXhpbnMgZnJvbSAnLi9jcmVhdGVNaXhpbnMnO1xuaW1wb3J0IGNyZWF0ZVBhbGV0dGUgZnJvbSAnLi9jcmVhdGVQYWxldHRlJztcbmltcG9ydCBjcmVhdGVUeXBvZ3JhcGh5IGZyb20gJy4vY3JlYXRlVHlwb2dyYXBoeSc7XG5pbXBvcnQgc2hhZG93cyBmcm9tICcuL3NoYWRvd3MnO1xuaW1wb3J0IHNoYXBlIGZyb20gJy4vc2hhcGUnO1xuaW1wb3J0IGNyZWF0ZVNwYWNpbmcgZnJvbSAnLi9jcmVhdGVTcGFjaW5nJztcbmltcG9ydCB0cmFuc2l0aW9ucyBmcm9tICcuL3RyYW5zaXRpb25zJztcbmltcG9ydCB6SW5kZXggZnJvbSAnLi96SW5kZXgnO1xuXG5mdW5jdGlvbiBjcmVhdGVNdWlUaGVtZSgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIHZhciBfb3B0aW9ucyRicmVha3BvaW50cyA9IG9wdGlvbnMuYnJlYWtwb2ludHMsXG4gICAgICBicmVha3BvaW50c0lucHV0ID0gX29wdGlvbnMkYnJlYWtwb2ludHMgPT09IHZvaWQgMCA/IHt9IDogX29wdGlvbnMkYnJlYWtwb2ludHMsXG4gICAgICBfb3B0aW9ucyRtaXhpbnMgPSBvcHRpb25zLm1peGlucyxcbiAgICAgIG1peGluc0lucHV0ID0gX29wdGlvbnMkbWl4aW5zID09PSB2b2lkIDAgPyB7fSA6IF9vcHRpb25zJG1peGlucyxcbiAgICAgIF9vcHRpb25zJHBhbGV0dGUgPSBvcHRpb25zLnBhbGV0dGUsXG4gICAgICBwYWxldHRlSW5wdXQgPSBfb3B0aW9ucyRwYWxldHRlID09PSB2b2lkIDAgPyB7fSA6IF9vcHRpb25zJHBhbGV0dGUsXG4gICAgICBzcGFjaW5nSW5wdXQgPSBvcHRpb25zLnNwYWNpbmcsXG4gICAgICBfb3B0aW9ucyR0eXBvZ3JhcGh5ID0gb3B0aW9ucy50eXBvZ3JhcGh5LFxuICAgICAgdHlwb2dyYXBoeUlucHV0ID0gX29wdGlvbnMkdHlwb2dyYXBoeSA9PT0gdm9pZCAwID8ge30gOiBfb3B0aW9ucyR0eXBvZ3JhcGh5LFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob3B0aW9ucywgW1wiYnJlYWtwb2ludHNcIiwgXCJtaXhpbnNcIiwgXCJwYWxldHRlXCIsIFwic3BhY2luZ1wiLCBcInR5cG9ncmFwaHlcIl0pO1xuXG4gIHZhciBwYWxldHRlID0gY3JlYXRlUGFsZXR0ZShwYWxldHRlSW5wdXQpO1xuICB2YXIgYnJlYWtwb2ludHMgPSBjcmVhdGVCcmVha3BvaW50cyhicmVha3BvaW50c0lucHV0KTtcbiAgdmFyIHNwYWNpbmcgPSBjcmVhdGVTcGFjaW5nKHNwYWNpbmdJbnB1dCk7XG4gIHZhciBtdWlUaGVtZSA9IGRlZXBtZXJnZSh7XG4gICAgYnJlYWtwb2ludHM6IGJyZWFrcG9pbnRzLFxuICAgIGRpcmVjdGlvbjogJ2x0cicsXG4gICAgbWl4aW5zOiBjcmVhdGVNaXhpbnMoYnJlYWtwb2ludHMsIHNwYWNpbmcsIG1peGluc0lucHV0KSxcbiAgICBvdmVycmlkZXM6IHt9LFxuICAgIC8vIEluamVjdCBjdXN0b20gc3R5bGVzXG4gICAgcGFsZXR0ZTogcGFsZXR0ZSxcbiAgICBwcm9wczoge30sXG4gICAgLy8gUHJvdmlkZSBkZWZhdWx0IHByb3BzXG4gICAgc2hhZG93czogc2hhZG93cyxcbiAgICB0eXBvZ3JhcGh5OiBjcmVhdGVUeXBvZ3JhcGh5KHBhbGV0dGUsIHR5cG9ncmFwaHlJbnB1dCksXG4gICAgc3BhY2luZzogc3BhY2luZyxcbiAgICBzaGFwZTogc2hhcGUsXG4gICAgdHJhbnNpdGlvbnM6IHRyYW5zaXRpb25zLFxuICAgIHpJbmRleDogekluZGV4XG4gIH0sIG90aGVyKTtcblxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBtdWlUaGVtZSA9IGFyZ3MucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGFyZ3VtZW50KSB7XG4gICAgcmV0dXJuIGRlZXBtZXJnZShhY2MsIGFyZ3VtZW50KTtcbiAgfSwgbXVpVGhlbWUpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmFyIHBzZXVkb0NsYXNzZXMgPSBbJ2NoZWNrZWQnLCAnZGlzYWJsZWQnLCAnZXJyb3InLCAnZm9jdXNlZCcsICdmb2N1c1Zpc2libGUnLCAncmVxdWlyZWQnLCAnZXhwYW5kZWQnLCAnc2VsZWN0ZWQnXTtcblxuICAgIHZhciB0cmF2ZXJzZSA9IGZ1bmN0aW9uIHRyYXZlcnNlKG5vZGUsIHBhcmVudEtleSkge1xuICAgICAgdmFyIGRlcHRoID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAxO1xuICAgICAgdmFyIGtleTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pbiwgbm8tcmVzdHJpY3RlZC1zeW50YXhcblxuICAgICAgZm9yIChrZXkgaW4gbm9kZSkge1xuICAgICAgICB2YXIgY2hpbGQgPSBub2RlW2tleV07XG5cbiAgICAgICAgaWYgKGRlcHRoID09PSAxKSB7XG4gICAgICAgICAgaWYgKGtleS5pbmRleE9mKCdNdWknKSA9PT0gMCAmJiBjaGlsZCkge1xuICAgICAgICAgICAgdHJhdmVyc2UoY2hpbGQsIGtleSwgZGVwdGggKyAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAocHNldWRvQ2xhc3Nlcy5pbmRleE9mKGtleSkgIT09IC0xICYmIE9iamVjdC5rZXlzKGNoaWxkKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoW1wiTWF0ZXJpYWwtVUk6IFRoZSBgXCIuY29uY2F0KHBhcmVudEtleSwgXCJgIGNvbXBvbmVudCBpbmNyZWFzZXMgXCIpICsgXCJ0aGUgQ1NTIHNwZWNpZmljaXR5IG9mIHRoZSBgXCIuY29uY2F0KGtleSwgXCJgIGludGVybmFsIHN0YXRlLlwiKSwgJ1lvdSBjYW4gbm90IG92ZXJyaWRlIGl0IGxpa2UgdGhpczogJywgSlNPTi5zdHJpbmdpZnkobm9kZSwgbnVsbCwgMiksICcnLCAnSW5zdGVhZCwgeW91IG5lZWQgdG8gdXNlIHRoZSAkcnVsZU5hbWUgc3ludGF4OicsIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgcm9vdDogX2RlZmluZVByb3BlcnR5KHt9LCBcIiYkXCIuY29uY2F0KGtleSksIGNoaWxkKVxuICAgICAgICAgICAgfSwgbnVsbCwgMiksICcnLCAnaHR0cHM6Ly9tYXRlcmlhbC11aS5jb20vci9wc2V1ZG8tY2xhc3Nlcy1ndWlkZSddLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgICB9IC8vIFJlbW92ZSB0aGUgc3R5bGUgdG8gcHJldmVudCBnbG9iYWwgY29uZmxpY3RzLlxuXG5cbiAgICAgICAgICBub2RlW2tleV0gPSB7fTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICB0cmF2ZXJzZShtdWlUaGVtZS5vdmVycmlkZXMpO1xuICB9XG5cbiAgcmV0dXJuIG11aVRoZW1lO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVNdWlUaGVtZTsiLCJmdW5jdGlvbiB0b1ZhbChtaXgpIHtcblx0dmFyIGssIHksIHN0cj0nJztcblxuXHRpZiAodHlwZW9mIG1peCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG1peCA9PT0gJ251bWJlcicpIHtcblx0XHRzdHIgKz0gbWl4O1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBtaXggPT09ICdvYmplY3QnKSB7XG5cdFx0aWYgKEFycmF5LmlzQXJyYXkobWl4KSkge1xuXHRcdFx0Zm9yIChrPTA7IGsgPCBtaXgubGVuZ3RoOyBrKyspIHtcblx0XHRcdFx0aWYgKG1peFtrXSkge1xuXHRcdFx0XHRcdGlmICh5ID0gdG9WYWwobWl4W2tdKSkge1xuXHRcdFx0XHRcdFx0c3RyICYmIChzdHIgKz0gJyAnKTtcblx0XHRcdFx0XHRcdHN0ciArPSB5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKGsgaW4gbWl4KSB7XG5cdFx0XHRcdGlmIChtaXhba10pIHtcblx0XHRcdFx0XHRzdHIgJiYgKHN0ciArPSAnICcpO1xuXHRcdFx0XHRcdHN0ciArPSBrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHN0cjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xuXHR2YXIgaT0wLCB0bXAsIHgsIHN0cj0nJztcblx0d2hpbGUgKGkgPCBhcmd1bWVudHMubGVuZ3RoKSB7XG5cdFx0aWYgKHRtcCA9IGFyZ3VtZW50c1tpKytdKSB7XG5cdFx0XHRpZiAoeCA9IHRvVmFsKHRtcCkpIHtcblx0XHRcdFx0c3RyICYmIChzdHIgKz0gJyAnKTtcblx0XHRcdFx0c3RyICs9IHhcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHN0cjtcbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXJlc3RyaWN0ZWQtc3ludGF4ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUaGVtZVByb3BzKHBhcmFtcykge1xuICB2YXIgdGhlbWUgPSBwYXJhbXMudGhlbWUsXG4gICAgICBuYW1lID0gcGFyYW1zLm5hbWUsXG4gICAgICBwcm9wcyA9IHBhcmFtcy5wcm9wcztcblxuICBpZiAoIXRoZW1lIHx8ICF0aGVtZS5wcm9wcyB8fCAhdGhlbWUucHJvcHNbbmFtZV0pIHtcbiAgICByZXR1cm4gcHJvcHM7XG4gIH0gLy8gUmVzb2x2ZSBkZWZhdWx0IHByb3BzLCBjb2RlIGJvcnJvdyBmcm9tIFJlYWN0IHNvdXJjZS5cbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvMTVhOGYwMzE4MzhhNTUzZTQxYzBiNjZlYjFiY2YxZGE4NDQ4MTA0ZC9wYWNrYWdlcy9yZWFjdC9zcmMvUmVhY3RFbGVtZW50LmpzI0wyMjFcblxuXG4gIHZhciBkZWZhdWx0UHJvcHMgPSB0aGVtZS5wcm9wc1tuYW1lXTtcbiAgdmFyIHByb3BOYW1lO1xuXG4gIGZvciAocHJvcE5hbWUgaW4gZGVmYXVsdFByb3BzKSB7XG4gICAgaWYgKHByb3BzW3Byb3BOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBwcm9wc1twcm9wTmFtZV0gPSBkZWZhdWx0UHJvcHNbcHJvcE5hbWVdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcm9wcztcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBob2lzdE5vblJlYWN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgeyBjaGFpblByb3BUeXBlcywgZ2V0RGlzcGxheU5hbWUgfSBmcm9tICdAbWF0ZXJpYWwtdWkvdXRpbHMnO1xuaW1wb3J0IG1ha2VTdHlsZXMgZnJvbSAnLi4vbWFrZVN0eWxlcyc7XG5pbXBvcnQgZ2V0VGhlbWVQcm9wcyBmcm9tICcuLi9nZXRUaGVtZVByb3BzJztcbmltcG9ydCB1c2VUaGVtZSBmcm9tICcuLi91c2VUaGVtZSc7IC8vIExpbmsgYSBzdHlsZSBzaGVldCB3aXRoIGEgY29tcG9uZW50LlxuLy8gSXQgZG9lcyBub3QgbW9kaWZ5IHRoZSBjb21wb25lbnQgcGFzc2VkIHRvIGl0O1xuLy8gaW5zdGVhZCwgaXQgcmV0dXJucyBhIG5ldyBjb21wb25lbnQsIHdpdGggYSBgY2xhc3Nlc2AgcHJvcGVydHkuXG5cbnZhciB3aXRoU3R5bGVzID0gZnVuY3Rpb24gd2l0aFN0eWxlcyhzdHlsZXNPckNyZWF0b3IpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKENvbXBvbmVudCkge1xuICAgIHZhciBkZWZhdWx0VGhlbWUgPSBvcHRpb25zLmRlZmF1bHRUaGVtZSxcbiAgICAgICAgX29wdGlvbnMkd2l0aFRoZW1lID0gb3B0aW9ucy53aXRoVGhlbWUsXG4gICAgICAgIHdpdGhUaGVtZSA9IF9vcHRpb25zJHdpdGhUaGVtZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyR3aXRoVGhlbWUsXG4gICAgICAgIG5hbWUgPSBvcHRpb25zLm5hbWUsXG4gICAgICAgIHN0eWxlc09wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob3B0aW9ucywgW1wiZGVmYXVsdFRoZW1lXCIsIFwid2l0aFRoZW1lXCIsIFwibmFtZVwiXSk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKENvbXBvbmVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihbJ1lvdSBhcmUgY2FsbGluZyB3aXRoU3R5bGVzKHN0eWxlcykoQ29tcG9uZW50KSB3aXRoIGFuIHVuZGVmaW5lZCBjb21wb25lbnQuJywgJ1lvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gaW1wb3J0IGl0LiddLmpvaW4oJ1xcbicpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY2xhc3NOYW1lUHJlZml4ID0gbmFtZTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgLy8gUHJvdmlkZSBhIGJldHRlciBEWCBvdXRzaWRlIHByb2R1Y3Rpb24uXG4gICAgICAgIHZhciBkaXNwbGF5TmFtZSA9IGdldERpc3BsYXlOYW1lKENvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGRpc3BsYXlOYW1lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjbGFzc05hbWVQcmVmaXggPSBkaXNwbGF5TmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHZhciB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHN0eWxlc09yQ3JlYXRvciwgX2V4dGVuZHMoe1xuICAgICAgZGVmYXVsdFRoZW1lOiBkZWZhdWx0VGhlbWUsXG4gICAgICBDb21wb25lbnQ6IENvbXBvbmVudCxcbiAgICAgIG5hbWU6IG5hbWUgfHwgQ29tcG9uZW50LmRpc3BsYXlOYW1lLFxuICAgICAgY2xhc3NOYW1lUHJlZml4OiBjbGFzc05hbWVQcmVmaXhcbiAgICB9LCBzdHlsZXNPcHRpb25zKSk7XG4gICAgdmFyIFdpdGhTdHlsZXMgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBXaXRoU3R5bGVzKHByb3BzLCByZWYpIHtcbiAgICAgIHZhciBjbGFzc2VzUHJvcCA9IHByb3BzLmNsYXNzZXMsXG4gICAgICAgICAgaW5uZXJSZWYgPSBwcm9wcy5pbm5lclJlZixcbiAgICAgICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImlubmVyUmVmXCJdKTsgLy8gVGhlIHdyYXBwZXIgcmVjZWl2ZXMgb25seSB1c2VyIHN1cHBsaWVkIHByb3BzLCB3aGljaCBjb3VsZCBiZSBhIHN1YnNldCBvZlxuICAgICAgLy8gdGhlIGFjdHVhbCBwcm9wcyBDb21wb25lbnQgbWlnaHQgcmVjZWl2ZSBkdWUgdG8gbWVyZ2luZyB3aXRoIGRlZmF1bHRQcm9wcy5cbiAgICAgIC8vIFNvIGNvcHlpbmcgaXQgaGVyZSB3b3VsZCBnaXZlIHVzIHRoZSBzYW1lIHJlc3VsdCBpbiB0aGUgd3JhcHBlciBhcyB3ZWxsLlxuXG5cbiAgICAgIHZhciBjbGFzc2VzID0gdXNlU3R5bGVzKF9leHRlbmRzKHt9LCBDb21wb25lbnQuZGVmYXVsdFByb3BzLCBwcm9wcykpO1xuICAgICAgdmFyIHRoZW1lO1xuICAgICAgdmFyIG1vcmUgPSBvdGhlcjtcblxuICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJyB8fCB3aXRoVGhlbWUpIHtcbiAgICAgICAgLy8gbmFtZSBhbmQgd2l0aFRoZW1lIGFyZSBpbnZhcmlhbnQgaW4gdGhlIG91dGVyIHNjb3BlXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgICAgICB0aGVtZSA9IHVzZVRoZW1lKCkgfHwgZGVmYXVsdFRoZW1lO1xuXG4gICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgbW9yZSA9IGdldFRoZW1lUHJvcHMoe1xuICAgICAgICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIHByb3BzOiBvdGhlclxuICAgICAgICAgIH0pO1xuICAgICAgICB9IC8vIFByb3ZpZGUgdGhlIHRoZW1lIHRvIHRoZSB3cmFwcGVkIGNvbXBvbmVudC5cbiAgICAgICAgLy8gU28gd2UgZG9uJ3QgaGF2ZSB0byB1c2UgdGhlIGB3aXRoVGhlbWUoKWAgSGlnaGVyLW9yZGVyIENvbXBvbmVudC5cblxuXG4gICAgICAgIGlmICh3aXRoVGhlbWUgJiYgIW1vcmUudGhlbWUpIHtcbiAgICAgICAgICBtb3JlLnRoZW1lID0gdGhlbWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgICAgICByZWY6IGlubmVyUmVmIHx8IHJlZixcbiAgICAgICAgY2xhc3NlczogY2xhc3Nlc1xuICAgICAgfSwgbW9yZSkpO1xuICAgIH0pO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFdpdGhTdHlsZXMucHJvcFR5cGVzID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAgICAgKi9cbiAgICAgIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgICAgIC8qKlxuICAgICAgICogVXNlIHRoYXQgcHJvcCB0byBwYXNzIGEgcmVmIHRvIHRoZSBkZWNvcmF0ZWQgY29tcG9uZW50LlxuICAgICAgICogQGRlcHJlY2F0ZWRcbiAgICAgICAqL1xuICAgICAgaW5uZXJSZWY6IGNoYWluUHJvcFR5cGVzKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksIGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgICBpZiAocHJvcHMuaW5uZXJSZWYgPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG51bGw7IC8vIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAgIC8vICAgJ01hdGVyaWFsLVVJOiBUaGUgYGlubmVyUmVmYCBwcm9wIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB2NS4gJyArXG4gICAgICAgIC8vICAgICAnUmVmcyBhcmUgbm93IGF1dG9tYXRpY2FsbHkgZm9yd2FyZGVkIHRvIHRoZSBpbm5lciBjb21wb25lbnQuJyxcbiAgICAgICAgLy8gKTtcbiAgICAgIH0pXG4gICAgfSA6IHZvaWQgMDtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBXaXRoU3R5bGVzLmRpc3BsYXlOYW1lID0gXCJXaXRoU3R5bGVzKFwiLmNvbmNhdChnZXREaXNwbGF5TmFtZShDb21wb25lbnQpLCBcIilcIik7XG4gICAgfVxuXG4gICAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV2l0aFN0eWxlcywgQ29tcG9uZW50KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvLyBFeHBvc2VkIGZvciB0ZXN0IHB1cnBvc2VzLlxuICAgICAgV2l0aFN0eWxlcy5OYWtlZCA9IENvbXBvbmVudDtcbiAgICAgIFdpdGhTdHlsZXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICBXaXRoU3R5bGVzLnVzZVN0eWxlcyA9IHVzZVN0eWxlcztcbiAgICB9XG5cbiAgICByZXR1cm4gV2l0aFN0eWxlcztcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXM7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgeyB3aXRoU3R5bGVzIGFzIHdpdGhTdHlsZXNXaXRob3V0RGVmYXVsdCB9IGZyb20gJ0BtYXRlcmlhbC11aS9zdHlsZXMnO1xuaW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tICcuL2RlZmF1bHRUaGVtZSc7XG5cbmZ1bmN0aW9uIHdpdGhTdHlsZXMoc3R5bGVzT3JDcmVhdG9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB3aXRoU3R5bGVzV2l0aG91dERlZmF1bHQoc3R5bGVzT3JDcmVhdG9yLCBfZXh0ZW5kcyh7XG4gICAgZGVmYXVsdFRoZW1lOiBkZWZhdWx0VGhlbWVcbiAgfSwgb3B0aW9ucykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGVzOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB3aXRoU3R5bGVzIGZyb20gJy4uL3N0eWxlcy93aXRoU3R5bGVzJztcbmV4cG9ydCB2YXIgc3R5bGVzID0ge1xuICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICByb290OiB7XG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBvdmVyZmxvd1g6ICdhdXRvJ1xuICB9XG59O1xudmFyIFRhYmxlQ29udGFpbmVyID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gVGFibGVDb250YWluZXIocHJvcHMsIHJlZikge1xuICB2YXIgY2xhc3NlcyA9IHByb3BzLmNsYXNzZXMsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBfcHJvcHMkY29tcG9uZW50ID0gcHJvcHMuY29tcG9uZW50LFxuICAgICAgQ29tcG9uZW50ID0gX3Byb3BzJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gJ2RpdicgOiBfcHJvcHMkY29tcG9uZW50LFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcImNsYXNzZXNcIiwgXCJjbGFzc05hbWVcIiwgXCJjb21wb25lbnRcIl0pO1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICByZWY6IHJlZixcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpXG4gIH0sIG90aGVyKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRhYmxlQ29udGFpbmVyLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSB0YWJsZSBpdHNlbGYsIG5vcm1hbGx5IGA8VGFibGUgLz5gXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLmVsZW1lbnRUeXBlXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlcyhzdHlsZXMsIHtcbiAgbmFtZTogJ011aVRhYmxlQ29udGFpbmVyJ1xufSkoVGFibGVDb250YWluZXIpOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IGNoYWluUHJvcFR5cGVzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL3V0aWxzJztcbmltcG9ydCB3aXRoU3R5bGVzIGZyb20gJy4uL3N0eWxlcy93aXRoU3R5bGVzJztcbmV4cG9ydCB2YXIgc3R5bGVzID0gZnVuY3Rpb24gc3R5bGVzKHRoZW1lKSB7XG4gIHZhciBlbGV2YXRpb25zID0ge307XG4gIHRoZW1lLnNoYWRvd3MuZm9yRWFjaChmdW5jdGlvbiAoc2hhZG93LCBpbmRleCkge1xuICAgIGVsZXZhdGlvbnNbXCJlbGV2YXRpb25cIi5jb25jYXQoaW5kZXgpXSA9IHtcbiAgICAgIGJveFNoYWRvdzogc2hhZG93XG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudC4gKi9cbiAgICByb290OiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuYmFja2dyb3VuZC5wYXBlcixcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQucHJpbWFyeSxcbiAgICAgIHRyYW5zaXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmNyZWF0ZSgnYm94LXNoYWRvdycpXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNxdWFyZT17ZmFsc2V9YC4gKi9cbiAgICByb3VuZGVkOiB7XG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnNoYXBlLmJvcmRlclJhZGl1c1xuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGB2YXJpYW50PVwib3V0bGluZWRcImAuICovXG4gICAgb3V0bGluZWQ6IHtcbiAgICAgIGJvcmRlcjogXCIxcHggc29saWQgXCIuY29uY2F0KHRoZW1lLnBhbGV0dGUuZGl2aWRlcilcbiAgICB9XG4gIH0sIGVsZXZhdGlvbnMpO1xufTtcbnZhciBQYXBlciA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFBhcGVyKHByb3BzLCByZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgX3Byb3BzJGNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudCxcbiAgICAgIENvbXBvbmVudCA9IF9wcm9wcyRjb21wb25lbnQgPT09IHZvaWQgMCA/ICdkaXYnIDogX3Byb3BzJGNvbXBvbmVudCxcbiAgICAgIF9wcm9wcyRzcXVhcmUgPSBwcm9wcy5zcXVhcmUsXG4gICAgICBzcXVhcmUgPSBfcHJvcHMkc3F1YXJlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRzcXVhcmUsXG4gICAgICBfcHJvcHMkZWxldmF0aW9uID0gcHJvcHMuZWxldmF0aW9uLFxuICAgICAgZWxldmF0aW9uID0gX3Byb3BzJGVsZXZhdGlvbiA9PT0gdm9pZCAwID8gMSA6IF9wcm9wcyRlbGV2YXRpb24sXG4gICAgICBfcHJvcHMkdmFyaWFudCA9IHByb3BzLnZhcmlhbnQsXG4gICAgICB2YXJpYW50ID0gX3Byb3BzJHZhcmlhbnQgPT09IHZvaWQgMCA/ICdlbGV2YXRpb24nIDogX3Byb3BzJHZhcmlhbnQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiLCBcInNxdWFyZVwiLCBcImVsZXZhdGlvblwiLCBcInZhcmlhbnRcIl0pO1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUsIHZhcmlhbnQgPT09ICdvdXRsaW5lZCcgPyBjbGFzc2VzLm91dGxpbmVkIDogY2xhc3Nlc1tcImVsZXZhdGlvblwiLmNvbmNhdChlbGV2YXRpb24pXSwgIXNxdWFyZSAmJiBjbGFzc2VzLnJvdW5kZWQpLFxuICAgIHJlZjogcmVmXG4gIH0sIG90aGVyKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFBhcGVyLnByb3BUeXBlcyA9IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogU2hhZG93IGRlcHRoLCBjb3JyZXNwb25kcyB0byBgZHBgIGluIHRoZSBzcGVjLlxuICAgKiBJdCBhY2NlcHRzIHZhbHVlcyBiZXR3ZWVuIDAgYW5kIDI0IGluY2x1c2l2ZS5cbiAgICovXG4gIGVsZXZhdGlvbjogY2hhaW5Qcm9wVHlwZXMoUHJvcFR5cGVzLm51bWJlciwgZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgICBlbGV2YXRpb24gPSBwcm9wcy5lbGV2YXRpb247IC8vIGluIGNhc2UgYHdpdGhTdHlsZXNgIGZhaWxzIHRvIGluamVjdCB3ZSBkb24ndCBuZWVkIHRoaXMgd2FybmluZ1xuXG4gICAgaWYgKGNsYXNzZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKGVsZXZhdGlvbiAhPSBudWxsICYmIGNsYXNzZXNbXCJlbGV2YXRpb25cIi5jb25jYXQoZWxldmF0aW9uKV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIk1hdGVyaWFsLVVJOiBUaGlzIGVsZXZhdGlvbiBgXCIuY29uY2F0KGVsZXZhdGlvbiwgXCJgIGlzIG5vdCBpbXBsZW1lbnRlZC5cIikpO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9KSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCByb3VuZGVkIGNvcm5lcnMgYXJlIGRpc2FibGVkLlxuICAgKi9cbiAgc3F1YXJlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIHZhcmlhbnQgdG8gdXNlLlxuICAgKi9cbiAgdmFyaWFudDogUHJvcFR5cGVzLm9uZU9mKFsnZWxldmF0aW9uJywgJ291dGxpbmVkJ10pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlcyhzdHlsZXMsIHtcbiAgbmFtZTogJ011aVBhcGVyJ1xufSkoUGFwZXIpOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG52YXIgVGFibGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBUYWJsZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnVGFibGVDb250ZXh0Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVDb250ZXh0OyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB3aXRoU3R5bGVzIGZyb20gJy4uL3N0eWxlcy93aXRoU3R5bGVzJztcbmltcG9ydCBUYWJsZUNvbnRleHQgZnJvbSAnLi9UYWJsZUNvbnRleHQnO1xuZXhwb3J0IHZhciBzdHlsZXMgPSBmdW5jdGlvbiBzdHlsZXModGhlbWUpIHtcbiAgcmV0dXJuIHtcbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICAgIHJvb3Q6IHtcbiAgICAgIGRpc3BsYXk6ICd0YWJsZScsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgYm9yZGVyQ29sbGFwc2U6ICdjb2xsYXBzZScsXG4gICAgICBib3JkZXJTcGFjaW5nOiAwLFxuICAgICAgJyYgY2FwdGlvbic6IF9leHRlbmRzKHt9LCB0aGVtZS50eXBvZ3JhcGh5LmJvZHkyLCB7XG4gICAgICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnRleHQuc2Vjb25kYXJ5LFxuICAgICAgICB0ZXh0QWxpZ246ICdsZWZ0JyxcbiAgICAgICAgY2FwdGlvblNpZGU6ICdib3R0b20nXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBzdGlja3lIZWFkZXI9e3RydWV9YC4gKi9cbiAgICBzdGlja3lIZWFkZXI6IHtcbiAgICAgIGJvcmRlckNvbGxhcHNlOiAnc2VwYXJhdGUnXG4gICAgfVxuICB9O1xufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50ID0gJ3RhYmxlJztcbnZhciBUYWJsZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlKHByb3BzLCByZWYpIHtcbiAgdmFyIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgX3Byb3BzJGNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudCxcbiAgICAgIENvbXBvbmVudCA9IF9wcm9wcyRjb21wb25lbnQgPT09IHZvaWQgMCA/IGRlZmF1bHRDb21wb25lbnQgOiBfcHJvcHMkY29tcG9uZW50LFxuICAgICAgX3Byb3BzJHBhZGRpbmcgPSBwcm9wcy5wYWRkaW5nLFxuICAgICAgcGFkZGluZyA9IF9wcm9wcyRwYWRkaW5nID09PSB2b2lkIDAgPyAnZGVmYXVsdCcgOiBfcHJvcHMkcGFkZGluZyxcbiAgICAgIF9wcm9wcyRzaXplID0gcHJvcHMuc2l6ZSxcbiAgICAgIHNpemUgPSBfcHJvcHMkc2l6ZSA9PT0gdm9pZCAwID8gJ21lZGl1bScgOiBfcHJvcHMkc2l6ZSxcbiAgICAgIF9wcm9wcyRzdGlja3lIZWFkZXIgPSBwcm9wcy5zdGlja3lIZWFkZXIsXG4gICAgICBzdGlja3lIZWFkZXIgPSBfcHJvcHMkc3RpY2t5SGVhZGVyID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRzdGlja3lIZWFkZXIsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiLCBcInBhZGRpbmdcIiwgXCJzaXplXCIsIFwic3RpY2t5SGVhZGVyXCJdKTtcblxuICB2YXIgdGFibGUgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGFkZGluZzogcGFkZGluZyxcbiAgICAgIHNpemU6IHNpemUsXG4gICAgICBzdGlja3lIZWFkZXI6IHN0aWNreUhlYWRlclxuICAgIH07XG4gIH0sIFtwYWRkaW5nLCBzaXplLCBzdGlja3lIZWFkZXJdKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0YWJsZVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICByb2xlOiBDb21wb25lbnQgPT09IGRlZmF1bHRDb21wb25lbnQgPyBudWxsIDogJ3RhYmxlJyxcbiAgICByZWY6IHJlZixcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUsIHN0aWNreUhlYWRlciAmJiBjbGFzc2VzLnN0aWNreUhlYWRlcilcbiAgfSwgb3RoZXIpKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRhYmxlLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSB0YWJsZSwgbm9ybWFsbHkgYFRhYmxlSGVhZGAgYW5kIGBUYWJsZUJvZHlgLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBBbGxvd3MgVGFibGVDZWxscyB0byBpbmhlcml0IHBhZGRpbmcgb2YgdGhlIFRhYmxlLlxuICAgKi9cbiAgcGFkZGluZzogUHJvcFR5cGVzLm9uZU9mKFsnZGVmYXVsdCcsICdjaGVja2JveCcsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBBbGxvd3MgVGFibGVDZWxscyB0byBpbmhlcml0IHNpemUgb2YgdGhlIFRhYmxlLlxuICAgKi9cbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFsnc21hbGwnLCAnbWVkaXVtJ10pLFxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGhlYWRlciBzdGlja3kuXG4gICAqXG4gICAqIOKaoO+4jyBJdCBkb2Vzbid0IHdvcmsgd2l0aCBJRSAxMS5cbiAgICovXG4gIHN0aWNreUhlYWRlcjogUHJvcFR5cGVzLmJvb2xcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGVzKHN0eWxlcywge1xuICBuYW1lOiAnTXVpVGFibGUnXG59KShUYWJsZSk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBAaWdub3JlIC0gaW50ZXJuYWwgY29tcG9uZW50LlxuICovXG5cbnZhciBUYWJsZWx2bDJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBUYWJsZWx2bDJDb250ZXh0LmRpc3BsYXlOYW1lID0gJ1RhYmxlbHZsMkNvbnRleHQnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUYWJsZWx2bDJDb250ZXh0OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB3aXRoU3R5bGVzIGZyb20gJy4uL3N0eWxlcy93aXRoU3R5bGVzJztcbmltcG9ydCBUYWJsZWx2bDJDb250ZXh0IGZyb20gJy4uL1RhYmxlL1RhYmxlbHZsMkNvbnRleHQnO1xuZXhwb3J0IHZhciBzdHlsZXMgPSB7XG4gIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQuICovXG4gIHJvb3Q6IHtcbiAgICBkaXNwbGF5OiAndGFibGUtaGVhZGVyLWdyb3VwJ1xuICB9XG59O1xudmFyIHRhYmxlbHZsMiA9IHtcbiAgdmFyaWFudDogJ2hlYWQnXG59O1xudmFyIGRlZmF1bHRDb21wb25lbnQgPSAndGhlYWQnO1xudmFyIFRhYmxlSGVhZCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlSGVhZChwcm9wcywgcmVmKSB7XG4gIHZhciBjbGFzc2VzID0gcHJvcHMuY2xhc3NlcyxcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIF9wcm9wcyRjb21wb25lbnQgPSBwcm9wcy5jb21wb25lbnQsXG4gICAgICBDb21wb25lbnQgPSBfcHJvcHMkY29tcG9uZW50ID09PSB2b2lkIDAgPyBkZWZhdWx0Q29tcG9uZW50IDogX3Byb3BzJGNvbXBvbmVudCxcbiAgICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCJdKTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFibGVsdmwyQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0YWJsZWx2bDJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKSxcbiAgICByZWY6IHJlZixcbiAgICByb2xlOiBDb21wb25lbnQgPT09IGRlZmF1bHRDb21wb25lbnQgPyBudWxsIDogJ3Jvd2dyb3VwJ1xuICB9LCBvdGhlcikpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGVIZWFkLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQsIG5vcm1hbGx5IGBUYWJsZVJvd2AuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLmVsZW1lbnRUeXBlXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlcyhzdHlsZXMsIHtcbiAgbmFtZTogJ011aVRhYmxlSGVhZCdcbn0pKFRhYmxlSGVhZCk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHdpdGhTdHlsZXMgZnJvbSAnLi4vc3R5bGVzL3dpdGhTdHlsZXMnO1xuaW1wb3J0IFRhYmxlbHZsMkNvbnRleHQgZnJvbSAnLi4vVGFibGUvVGFibGVsdmwyQ29udGV4dCc7XG5pbXBvcnQgeyBmYWRlIH0gZnJvbSAnLi4vc3R5bGVzL2NvbG9yTWFuaXB1bGF0b3InO1xuZXhwb3J0IHZhciBzdHlsZXMgPSBmdW5jdGlvbiBzdHlsZXModGhlbWUpIHtcbiAgcmV0dXJuIHtcbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICAgIHJvb3Q6IHtcbiAgICAgIGNvbG9yOiAnaW5oZXJpdCcsXG4gICAgICBkaXNwbGF5OiAndGFibGUtcm93JyxcbiAgICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAgICAgLy8gV2UgZGlzYWJsZSB0aGUgZm9jdXMgcmluZyBmb3IgbW91c2UsIHRvdWNoIGFuZCBrZXlib2FyZCB1c2Vycy5cbiAgICAgIG91dGxpbmU6IDAsXG4gICAgICAnJiRob3Zlcjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLmFjdGlvbi5ob3ZlclxuICAgICAgfSxcbiAgICAgICcmJHNlbGVjdGVkLCAmJHNlbGVjdGVkOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGZhZGUodGhlbWUucGFsZXR0ZS5zZWNvbmRhcnkubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uc2VsZWN0ZWRPcGFjaXR5KVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBQc2V1ZG8tY2xhc3MgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBzZWxlY3RlZD17dHJ1ZX1gLiAqL1xuICAgIHNlbGVjdGVkOiB7fSxcblxuICAgIC8qIFBzZXVkby1jbGFzcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYGhvdmVyPXt0cnVlfWAuICovXG4gICAgaG92ZXI6IHt9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiB0YWJsZSB2YXJpYW50PVwiaGVhZFwiLiAqL1xuICAgIGhlYWQ6IHt9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiB0YWJsZSB2YXJpYW50PVwiZm9vdGVyXCIuICovXG4gICAgZm9vdGVyOiB7fVxuICB9O1xufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50ID0gJ3RyJztcbi8qKlxuICogV2lsbCBhdXRvbWF0aWNhbGx5IHNldCBkeW5hbWljIHJvdyBoZWlnaHRcbiAqIGJhc2VkIG9uIHRoZSBtYXRlcmlhbCB0YWJsZSBlbGVtZW50IHBhcmVudCAoaGVhZCwgYm9keSwgZXRjKS5cbiAqL1xuXG52YXIgVGFibGVSb3cgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZVJvdyhwcm9wcywgcmVmKSB7XG4gIHZhciBjbGFzc2VzID0gcHJvcHMuY2xhc3NlcyxcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIF9wcm9wcyRjb21wb25lbnQgPSBwcm9wcy5jb21wb25lbnQsXG4gICAgICBDb21wb25lbnQgPSBfcHJvcHMkY29tcG9uZW50ID09PSB2b2lkIDAgPyBkZWZhdWx0Q29tcG9uZW50IDogX3Byb3BzJGNvbXBvbmVudCxcbiAgICAgIF9wcm9wcyRob3ZlciA9IHByb3BzLmhvdmVyLFxuICAgICAgaG92ZXIgPSBfcHJvcHMkaG92ZXIgPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGhvdmVyLFxuICAgICAgX3Byb3BzJHNlbGVjdGVkID0gcHJvcHMuc2VsZWN0ZWQsXG4gICAgICBzZWxlY3RlZCA9IF9wcm9wcyRzZWxlY3RlZCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkc2VsZWN0ZWQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiLCBcImhvdmVyXCIsIFwic2VsZWN0ZWRcIl0pO1xuXG4gIHZhciB0YWJsZWx2bDIgPSBSZWFjdC51c2VDb250ZXh0KFRhYmxlbHZsMkNvbnRleHQpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgcmVmOiByZWYsXG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lLCB0YWJsZWx2bDIgJiYge1xuICAgICAgJ2hlYWQnOiBjbGFzc2VzLmhlYWQsXG4gICAgICAnZm9vdGVyJzogY2xhc3Nlcy5mb290ZXJcbiAgICB9W3RhYmxlbHZsMi52YXJpYW50XSwgaG92ZXIgJiYgY2xhc3Nlcy5ob3Zlciwgc2VsZWN0ZWQgJiYgY2xhc3Nlcy5zZWxlY3RlZCksXG4gICAgcm9sZTogQ29tcG9uZW50ID09PSBkZWZhdWx0Q29tcG9uZW50ID8gbnVsbCA6ICdyb3cnXG4gIH0sIG90aGVyKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRhYmxlUm93LnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFNob3VsZCBiZSB2YWxpZCA8dHI+IGNoaWxkcmVuIHN1Y2ggYXMgYFRhYmxlQ2VsbGAuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzXG4gIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi9cbiAgLmVsZW1lbnRUeXBlLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoZSB0YWJsZSByb3cgd2lsbCBzaGFkZSBvbiBob3Zlci5cbiAgICovXG4gIGhvdmVyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgdGFibGUgcm93IHdpbGwgaGF2ZSB0aGUgc2VsZWN0ZWQgc2hhZGluZy5cbiAgICovXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbFxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlUYWJsZVJvdydcbn0pKFRhYmxlUm93KTsiLCJpbXBvcnQgeyBmb3JtYXRNdWlFcnJvck1lc3NhZ2UgYXMgX2Zvcm1hdE11aUVycm9yTWVzc2FnZSB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvdXRpbHNcIjtcbi8vIEl0IHNob3VsZCB0byBiZSBub3RlZCB0aGF0IHRoaXMgZnVuY3Rpb24gaXNuJ3QgZXF1aXZhbGVudCB0byBgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemVgLlxuLy9cbi8vIEEgc3RyaWN0IGNhcGl0YWxpemF0aW9uIHNob3VsZCB1cHBlcmNhc2UgdGhlIGZpcnN0IGxldHRlciBvZiBlYWNoIHdvcmQgYSB0aGUgc2VudGVuY2UuXG4vLyBXZSBvbmx5IGhhbmRsZSB0aGUgZmlyc3Qgd29yZC5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyaW5nKSB7XG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBcIk1hdGVyaWFsLVVJOiBjYXBpdGFsaXplKHN0cmluZykgZXhwZWN0cyBhIHN0cmluZyBhcmd1bWVudC5cIiA6IF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UoNykpO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn0iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc1wiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5pbXBvcnQgY2FwaXRhbGl6ZSBmcm9tICcuLi91dGlscy9jYXBpdGFsaXplJztcbmltcG9ydCB7IGRhcmtlbiwgZmFkZSwgbGlnaHRlbiB9IGZyb20gJy4uL3N0eWxlcy9jb2xvck1hbmlwdWxhdG9yJztcbmltcG9ydCBUYWJsZUNvbnRleHQgZnJvbSAnLi4vVGFibGUvVGFibGVDb250ZXh0JztcbmltcG9ydCBUYWJsZWx2bDJDb250ZXh0IGZyb20gJy4uL1RhYmxlL1RhYmxlbHZsMkNvbnRleHQnO1xuZXhwb3J0IHZhciBzdHlsZXMgPSBmdW5jdGlvbiBzdHlsZXModGhlbWUpIHtcbiAgcmV0dXJuIHtcbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICAgIHJvb3Q6IF9leHRlbmRzKHt9LCB0aGVtZS50eXBvZ3JhcGh5LmJvZHkyLCB7XG4gICAgICBkaXNwbGF5OiAndGFibGUtY2VsbCcsXG4gICAgICB2ZXJ0aWNhbEFsaWduOiAnaW5oZXJpdCcsXG4gICAgICAvLyBXb3JrYXJvdW5kIGZvciBhIHJlbmRlcmluZyBidWcgd2l0aCBzcGFubmVkIGNvbHVtbnMgaW4gQ2hyb21lIDYyLjAuXG4gICAgICAvLyBSZW1vdmVzIHRoZSBhbHBoYSAoc2V0cyBpdCB0byAxKSwgYW5kIGxpZ2h0ZW5zIG9yIGRhcmtlbnMgdGhlIHRoZW1lIGNvbG9yLlxuICAgICAgYm9yZGVyQm90dG9tOiBcIjFweCBzb2xpZFxcbiAgICBcIi5jb25jYXQodGhlbWUucGFsZXR0ZS50eXBlID09PSAnbGlnaHQnID8gbGlnaHRlbihmYWRlKHRoZW1lLnBhbGV0dGUuZGl2aWRlciwgMSksIDAuODgpIDogZGFya2VuKGZhZGUodGhlbWUucGFsZXR0ZS5kaXZpZGVyLCAxKSwgMC42OCkpLFxuICAgICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgICBwYWRkaW5nOiAxNlxuICAgIH0pLFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cImhlYWRcImAgb3IgYGNvbnRleHQudGFibGUuaGVhZGAuICovXG4gICAgaGVhZDoge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5LFxuICAgICAgbGluZUhlaWdodDogdGhlbWUudHlwb2dyYXBoeS5weFRvUmVtKDI0KSxcbiAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkuZm9udFdlaWdodE1lZGl1bVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGB2YXJpYW50PVwiYm9keVwiYCBvciBgY29udGV4dC50YWJsZS5ib2R5YC4gKi9cbiAgICBib2R5OiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnlcbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cImZvb3RlclwiYCBvciBgY29udGV4dC50YWJsZS5mb290ZXJgLiAqL1xuICAgIGZvb3Rlcjoge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUudGV4dC5zZWNvbmRhcnksXG4gICAgICBsaW5lSGVpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMjEpLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxMilcbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgc2l6ZT1cInNtYWxsXCJgLiAqL1xuICAgIHNpemVTbWFsbDoge1xuICAgICAgcGFkZGluZzogJzZweCAyNHB4IDZweCAxNnB4JyxcbiAgICAgICcmOmxhc3QtY2hpbGQnOiB7XG4gICAgICAgIHBhZGRpbmdSaWdodDogMTZcbiAgICAgIH0sXG4gICAgICAnJiRwYWRkaW5nQ2hlY2tib3gnOiB7XG4gICAgICAgIHdpZHRoOiAyNCxcbiAgICAgICAgLy8gcHJldmVudCB0aGUgY2hlY2tib3ggY29sdW1uIGZyb20gZ3Jvd2luZ1xuICAgICAgICBwYWRkaW5nOiAnMCAxMnB4IDAgMTZweCcsXG4gICAgICAgICcmOmxhc3QtY2hpbGQnOiB7XG4gICAgICAgICAgcGFkZGluZ0xlZnQ6IDEyLFxuICAgICAgICAgIHBhZGRpbmdSaWdodDogMTZcbiAgICAgICAgfSxcbiAgICAgICAgJyYgPiAqJzoge1xuICAgICAgICAgIHBhZGRpbmc6IDBcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBwYWRkaW5nPVwiY2hlY2tib3hcImAuICovXG4gICAgcGFkZGluZ0NoZWNrYm94OiB7XG4gICAgICB3aWR0aDogNDgsXG4gICAgICAvLyBwcmV2ZW50IHRoZSBjaGVja2JveCBjb2x1bW4gZnJvbSBncm93aW5nXG4gICAgICBwYWRkaW5nOiAnMCAwIDAgNHB4JyxcbiAgICAgICcmOmxhc3QtY2hpbGQnOiB7XG4gICAgICAgIHBhZGRpbmdMZWZ0OiAwLFxuICAgICAgICBwYWRkaW5nUmlnaHQ6IDRcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgcGFkZGluZz1cIm5vbmVcImAuICovXG4gICAgcGFkZGluZ05vbmU6IHtcbiAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAnJjpsYXN0LWNoaWxkJzoge1xuICAgICAgICBwYWRkaW5nOiAwXG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYGFsaWduPVwibGVmdFwiYC4gKi9cbiAgICBhbGlnbkxlZnQ6IHtcbiAgICAgIHRleHRBbGlnbjogJ2xlZnQnXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYGFsaWduPVwiY2VudGVyXCJgLiAqL1xuICAgIGFsaWduQ2VudGVyOiB7XG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYGFsaWduPVwicmlnaHRcImAuICovXG4gICAgYWxpZ25SaWdodDoge1xuICAgICAgdGV4dEFsaWduOiAncmlnaHQnLFxuICAgICAgZmxleERpcmVjdGlvbjogJ3Jvdy1yZXZlcnNlJ1xuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBhbGlnbj1cImp1c3RpZnlcImAuICovXG4gICAgYWxpZ25KdXN0aWZ5OiB7XG4gICAgICB0ZXh0QWxpZ246ICdqdXN0aWZ5J1xuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBjb250ZXh0LnRhYmxlLnN0aWNreUhlYWRlcj17dHJ1ZX1gLiAqL1xuICAgIHN0aWNreUhlYWRlcjoge1xuICAgICAgcG9zaXRpb246ICdzdGlja3knLFxuICAgICAgdG9wOiAwLFxuICAgICAgbGVmdDogMCxcbiAgICAgIHpJbmRleDogMixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5iYWNrZ3JvdW5kLmRlZmF1bHRcbiAgICB9XG4gIH07XG59O1xuLyoqXG4gKiBUaGUgY29tcG9uZW50IHJlbmRlcnMgYSBgPHRoPmAgZWxlbWVudCB3aGVuIHRoZSBwYXJlbnQgY29udGV4dCBpcyBhIGhlYWRlclxuICogb3Igb3RoZXJ3aXNlIGEgYDx0ZD5gIGVsZW1lbnQuXG4gKi9cblxudmFyIFRhYmxlQ2VsbCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFRhYmxlQ2VsbChwcm9wcywgcmVmKSB7XG4gIHZhciBfcHJvcHMkYWxpZ24gPSBwcm9wcy5hbGlnbixcbiAgICAgIGFsaWduID0gX3Byb3BzJGFsaWduID09PSB2b2lkIDAgPyAnaW5oZXJpdCcgOiBfcHJvcHMkYWxpZ24sXG4gICAgICBjbGFzc2VzID0gcHJvcHMuY2xhc3NlcyxcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNvbXBvbmVudCA9IHByb3BzLmNvbXBvbmVudCxcbiAgICAgIHBhZGRpbmdQcm9wID0gcHJvcHMucGFkZGluZyxcbiAgICAgIHNjb3BlUHJvcCA9IHByb3BzLnNjb3BlLFxuICAgICAgc2l6ZVByb3AgPSBwcm9wcy5zaXplLFxuICAgICAgc29ydERpcmVjdGlvbiA9IHByb3BzLnNvcnREaXJlY3Rpb24sXG4gICAgICB2YXJpYW50UHJvcCA9IHByb3BzLnZhcmlhbnQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiYWxpZ25cIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCIsIFwicGFkZGluZ1wiLCBcInNjb3BlXCIsIFwic2l6ZVwiLCBcInNvcnREaXJlY3Rpb25cIiwgXCJ2YXJpYW50XCJdKTtcblxuICB2YXIgdGFibGUgPSBSZWFjdC51c2VDb250ZXh0KFRhYmxlQ29udGV4dCk7XG4gIHZhciB0YWJsZWx2bDIgPSBSZWFjdC51c2VDb250ZXh0KFRhYmxlbHZsMkNvbnRleHQpO1xuICB2YXIgaXNIZWFkQ2VsbCA9IHRhYmxlbHZsMiAmJiB0YWJsZWx2bDIudmFyaWFudCA9PT0gJ2hlYWQnO1xuICB2YXIgcm9sZTtcbiAgdmFyIENvbXBvbmVudDtcblxuICBpZiAoY29tcG9uZW50KSB7XG4gICAgQ29tcG9uZW50ID0gY29tcG9uZW50O1xuICAgIHJvbGUgPSBpc0hlYWRDZWxsID8gJ2NvbHVtbmhlYWRlcicgOiAnY2VsbCc7XG4gIH0gZWxzZSB7XG4gICAgQ29tcG9uZW50ID0gaXNIZWFkQ2VsbCA/ICd0aCcgOiAndGQnO1xuICB9XG5cbiAgdmFyIHNjb3BlID0gc2NvcGVQcm9wO1xuXG4gIGlmICghc2NvcGUgJiYgaXNIZWFkQ2VsbCkge1xuICAgIHNjb3BlID0gJ2NvbCc7XG4gIH1cblxuICB2YXIgcGFkZGluZyA9IHBhZGRpbmdQcm9wIHx8ICh0YWJsZSAmJiB0YWJsZS5wYWRkaW5nID8gdGFibGUucGFkZGluZyA6ICdkZWZhdWx0Jyk7XG4gIHZhciBzaXplID0gc2l6ZVByb3AgfHwgKHRhYmxlICYmIHRhYmxlLnNpemUgPyB0YWJsZS5zaXplIDogJ21lZGl1bScpO1xuICB2YXIgdmFyaWFudCA9IHZhcmlhbnRQcm9wIHx8IHRhYmxlbHZsMiAmJiB0YWJsZWx2bDIudmFyaWFudDtcbiAgdmFyIGFyaWFTb3J0ID0gbnVsbDtcblxuICBpZiAoc29ydERpcmVjdGlvbikge1xuICAgIGFyaWFTb3J0ID0gc29ydERpcmVjdGlvbiA9PT0gJ2FzYycgPyAnYXNjZW5kaW5nJyA6ICdkZXNjZW5kaW5nJztcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICByZWY6IHJlZixcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc2VzW3ZhcmlhbnRdLCBjbGFzc05hbWUsIGFsaWduICE9PSAnaW5oZXJpdCcgJiYgY2xhc3Nlc1tcImFsaWduXCIuY29uY2F0KGNhcGl0YWxpemUoYWxpZ24pKV0sIHBhZGRpbmcgIT09ICdkZWZhdWx0JyAmJiBjbGFzc2VzW1wicGFkZGluZ1wiLmNvbmNhdChjYXBpdGFsaXplKHBhZGRpbmcpKV0sIHNpemUgIT09ICdtZWRpdW0nICYmIGNsYXNzZXNbXCJzaXplXCIuY29uY2F0KGNhcGl0YWxpemUoc2l6ZSkpXSwgdmFyaWFudCA9PT0gJ2hlYWQnICYmIHRhYmxlICYmIHRhYmxlLnN0aWNreUhlYWRlciAmJiBjbGFzc2VzLnN0aWNreUhlYWRlciksXG4gICAgXCJhcmlhLXNvcnRcIjogYXJpYVNvcnQsXG4gICAgcm9sZTogcm9sZSxcbiAgICBzY29wZTogc2NvcGVcbiAgfSwgb3RoZXIpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gVGFibGVDZWxsLnByb3BUeXBlcyA9IHtcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gV2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyB8IFRoZXNlIFByb3BUeXBlcyBhcmUgZ2VuZXJhdGVkIGZyb20gdGhlIFR5cGVTY3JpcHQgdHlwZSBkZWZpbml0aW9ucyB8XG4gIC8vIHwgICAgIFRvIHVwZGF0ZSB0aGVtIGVkaXQgdGhlIGQudHMgZmlsZSBhbmQgcnVuIFwieWFybiBwcm9wdHlwZXNcIiAgICAgfFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIFNldCB0aGUgdGV4dC1hbGlnbiBvbiB0aGUgdGFibGUgY2VsbCBjb250ZW50LlxuICAgKlxuICAgKiBNb25ldGFyeSBvciBnZW5lcmFsbHkgbnVtYmVyIGZpZWxkcyAqKnNob3VsZCBiZSByaWdodCBhbGlnbmVkKiogYXMgdGhhdCBhbGxvd3NcbiAgICogeW91IHRvIGFkZCB0aGVtIHVwIHF1aWNrbHkgaW4geW91ciBoZWFkIHdpdGhvdXQgaGF2aW5nIHRvIHdvcnJ5IGFib3V0IGRlY2ltYWxzLlxuICAgKi9cbiAgYWxpZ246IFByb3BUeXBlcy5vbmVPZihbJ2NlbnRlcicsICdpbmhlcml0JywgJ2p1c3RpZnknLCAnbGVmdCcsICdyaWdodCddKSxcblxuICAvKipcbiAgICogVGhlIHRhYmxlIGNlbGwgY29udGVudHMuXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5lbGVtZW50VHlwZSxcblxuICAvKipcbiAgICogU2V0cyB0aGUgcGFkZGluZyBhcHBsaWVkIHRvIHRoZSBjZWxsLlxuICAgKiBCeSBkZWZhdWx0LCB0aGUgVGFibGUgcGFyZW50IGNvbXBvbmVudCBzZXQgdGhlIHZhbHVlIChgZGVmYXVsdGApLlxuICAgKi9cbiAgcGFkZGluZzogUHJvcFR5cGVzLm9uZU9mKFsnY2hlY2tib3gnLCAnZGVmYXVsdCcsICdub25lJ10pLFxuXG4gIC8qKlxuICAgKiBTZXQgc2NvcGUgYXR0cmlidXRlLlxuICAgKi9cbiAgc2NvcGU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgdGhlIHNpemUgb2YgdGhlIGNlbGwuXG4gICAqIEJ5IGRlZmF1bHQsIHRoZSBUYWJsZSBwYXJlbnQgY29tcG9uZW50IHNldCB0aGUgdmFsdWUgKGBtZWRpdW1gKS5cbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihbJ21lZGl1bScsICdzbWFsbCddKSxcblxuICAvKipcbiAgICogU2V0IGFyaWEtc29ydCBkaXJlY3Rpb24uXG4gICAqL1xuICBzb3J0RGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoWydhc2MnLCAnZGVzYycsIGZhbHNlXSksXG5cbiAgLyoqXG4gICAqIFNwZWNpZnkgdGhlIGNlbGwgdHlwZS5cbiAgICogQnkgZGVmYXVsdCwgdGhlIFRhYmxlSGVhZCwgVGFibGVCb2R5IG9yIFRhYmxlRm9vdGVyIHBhcmVudCBjb21wb25lbnQgc2V0IHRoZSB2YWx1ZS5cbiAgICovXG4gIHZhcmlhbnQ6IFByb3BUeXBlcy5vbmVPZihbJ2JvZHknLCAnZm9vdGVyJywgJ2hlYWQnXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGVzKHN0eWxlcywge1xuICBuYW1lOiAnTXVpVGFibGVDZWxsJ1xufSkoVGFibGVDZWxsKTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5pbXBvcnQgVGFibGVsdmwyQ29udGV4dCBmcm9tICcuLi9UYWJsZS9UYWJsZWx2bDJDb250ZXh0JztcbmV4cG9ydCB2YXIgc3R5bGVzID0ge1xuICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICByb290OiB7XG4gICAgZGlzcGxheTogJ3RhYmxlLXJvdy1ncm91cCdcbiAgfVxufTtcbnZhciB0YWJsZWx2bDIgPSB7XG4gIHZhcmlhbnQ6ICdib2R5J1xufTtcbnZhciBkZWZhdWx0Q29tcG9uZW50ID0gJ3Rib2R5JztcbnZhciBUYWJsZUJvZHkgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBUYWJsZUJvZHkocHJvcHMsIHJlZikge1xuICB2YXIgY2xhc3NlcyA9IHByb3BzLmNsYXNzZXMsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBfcHJvcHMkY29tcG9uZW50ID0gcHJvcHMuY29tcG9uZW50LFxuICAgICAgQ29tcG9uZW50ID0gX3Byb3BzJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gZGVmYXVsdENvbXBvbmVudCA6IF9wcm9wcyRjb21wb25lbnQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImNvbXBvbmVudFwiXSk7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlbHZsMkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdGFibGVsdmwyXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe1xuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNsYXNzTmFtZSksXG4gICAgcmVmOiByZWYsXG4gICAgcm9sZTogQ29tcG9uZW50ID09PSBkZWZhdWx0Q29tcG9uZW50ID8gbnVsbCA6ICdyb3dncm91cCdcbiAgfSwgb3RoZXIpKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFRhYmxlQm9keS5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LCBub3JtYWxseSBgVGFibGVSb3dgLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSByb290IG5vZGUuXG4gICAqIEVpdGhlciBhIHN0cmluZyB0byB1c2UgYSBIVE1MIGVsZW1lbnQgb3IgYSBjb21wb25lbnQuXG4gICAqL1xuICBjb21wb25lbnQ6IFByb3BUeXBlc1xuICAvKiBAdHlwZXNjcmlwdC10by1wcm9wdHlwZXMtaWdub3JlICovXG4gIC5lbGVtZW50VHlwZVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlUYWJsZUJvZHknXG59KShUYWJsZUJvZHkpOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcbmltcG9ydCB7XG4gIFRhYmxlLFxuICBUYWJsZUJvZHksXG4gIFRhYmxlSGVhZCxcbiAgVGFibGVDZWxsLFxuICBUYWJsZVJvdyxcbiAgVGFibGVDb250YWluZXIsXG4gIFRhYmxlRm9vdGVyLFxuICBQYXBlcixcbn0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUnO1xuXG5cbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoe1xuICB0YWJsZToge1xuICAgIG92ZXJmbG93WDogJ2F1dG8nLFxuICAgIG1pbldpZHRoOiAnNDgwcHgnXG4gIH0sXG4gIHRhYmxlSGVhZGVyOiB7XG4gICAgZm9udFNpemU6ICcyMnB4JyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInXG4gIH0sXG4gIHRhYmxlSGVhZGVyTm90ZToge1xuICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgdGV4dEFsaWduOiAncmlnaHQnLFxuICAgIGNvbG9yOiAnIzAwMCdcbiAgfSxcbiAgdGFibGVIZWFkZXJDb2x1bW46IHtcbiAgICBmb250U2l6ZTogJzE2cHgnXG4gIH0sXG4gIHRhYmxlQ29sdW1uOiB7XG4gICAgZm9udFNpemU6ICcxOHB4J1xuICB9LFxuICB0YWJsZUZvb3Rlcjoge1xuICAgIHRleHRBbGlnbjogJ3JpZ2h0JyxcbiAgICBwYWRkaW5nOiAnMCcsXG4gICAgaGVpZ2h0OiAnaW5oZXJpdCdcbiAgfSxcbiAgbm90ZToge1xuICAgIGZvbnRTaXplOiAnMTRweCdcbiAgfVxufSk7XG5cbmNvbnN0IHJvd3MgPSBbXG4gIHtcbiAgICBuYW1lOiAn5Y6f5ZGz6aWF6aCtJyxcbiAgICBzaW5nbGVQcmljZTogJzEyIOWFgy/lgIsnLFxuICAgIHByaWNlOiAnNzIg5YWDL+WMhSdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICfljZfnk5zppYXpoK0nLFxuICAgIHNpbmdsZVByaWNlOiAnMTUg5YWDL+WAiycsXG4gICAgcHJpY2U6ICc5MCDlhYMv5YyFJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ+m7keiKnem6u+WNt+mlhemgrScsXG4gICAgc2luZ2xlUHJpY2U6ICcxNSDlhYMv5YCLJyxcbiAgICBwcmljZTogJzkwIOWFgy/ljIUnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn6JSl6Iqx5Y236aWF6aCtJyxcbiAgICBzaW5nbGVQcmljZTogJzE1IOWFgy/lgIsnLFxuICAgIHByaWNlOiAnOTAg5YWDL+WMhSdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICflhajpuqXppYXpoK0nLFxuICAgIHNpbmdsZVByaWNlOiAnMTUg5YWDL+WAiycsXG4gICAgcHJpY2U6ICc5MCDlhYMv5YyFJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ+m7keezlumlhemgrScsXG4gICAgc2luZ2xlUHJpY2U6ICcxMiDlhYMv5YCLJyxcbiAgICBwcmljZTogJzcyIOWFgy/ljIUnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn5aCF5p6c5YWo6bql6aWF6aCtJyxcbiAgICBzaW5nbGVQcmljZTogJzIwIOWFgy/lgIsnLFxuICAgIHByaWNlOiAnMTIwIOWFgy/ljIUnXG4gIH1cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByaWNlVGFibGUoKSB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcblxuICAvLyBzdGF0ZSA9IHtcbiAgLy8gICBzaG93Um93SG92ZXI6IGZhbHNlLFxuICAvLyAgIHN0cmlwZWRSb3dzOiB0cnVlLFxuICAvLyAgIHNob3dDaGVja2JveGVzOiBmYWxzZVxuICAvLyB9O1xuXG4gIC8vIGdldFN0cmlwZWRTdHlsZShpbmRleCkge1xuICAvLyAgIHJldHVybiB7IGJhY2tncm91bmQ6IGluZGV4ICUgMiA/ICcjZmFmYWZhJyA6ICd3aGl0ZScgfTtcbiAgLy8gfVxuXG4gIHJldHVybiAoXG4gICAgPFRhYmxlQ29udGFpbmVyIGNvbXBvbmVudD17UGFwZXJ9PlxuICAgICAgPFRhYmxlIGNsYXNzTmFtZT17Y2xhc3Nlcy50YWJsZX0gYXJpYS1sYWJlbD1cInByaWNlIHRhYmxlXCI+XG4gICAgICAgIDxUYWJsZUhlYWQ+XG4gICAgICAgICAgPFRhYmxlUm93PlxuICAgICAgICAgICAgPFRhYmxlQ2VsbCBjbGFzc05hbWU9e2NsYXNzZXMudGFibGVIZWFkZXJDb2x1bW59PuWPo+WRszwvVGFibGVDZWxsPlxuICAgICAgICAgICAgPFRhYmxlQ2VsbCBjbGFzc05hbWU9e2NsYXNzZXMudGFibGVIZWFkZXJDb2x1bW59IGFsaWduPVwicmlnaHRcIj7llK7lg7k8L1RhYmxlQ2VsbD5cbiAgICAgICAgICA8L1RhYmxlUm93PlxuICAgICAgICA8L1RhYmxlSGVhZD5cbiAgICAgICAgPFRhYmxlQm9keT5cbiAgICAgICAgICB7cm93cy5tYXAoKHJvdykgPT4gKFxuICAgICAgICAgICAgPFRhYmxlUm93IGtleT17cm93Lm5hbWV9PlxuICAgICAgICAgICAgICA8VGFibGVDZWxsIGNvbXBvbmVudD1cInRoXCIgc2NvcGU9XCJyb3dcIiBjbGFzc05hbWU9e2NsYXNzZXMudGFibGVDb2x1bW59Pntyb3cubmFtZX08c3BhbiBjbGFzc05hbWU9e2NsYXNzZXMubm90ZX0+PGJyLz57cm93LnNpbmdsZVByaWNlfTwvc3Bhbj48L1RhYmxlQ2VsbD5cbiAgICAgICAgICAgICAgPFRhYmxlQ2VsbCBjbGFzc05hbWU9e2NsYXNzZXMudGFibGVDb2x1bW59Pntyb3cucHJpY2V9PC9UYWJsZUNlbGw+XG4gICAgICAgICAgICA8L1RhYmxlUm93PlxuICAgICAgICAgICkpfVxuICAgICAgICA8L1RhYmxlQm9keT5cbiAgICAgIDwvVGFibGU+XG4gICAgPC9UYWJsZUNvbnRhaW5lcj5cbiAgKTtcbn1cbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHsgbWFrZVN0eWxlcyBhcyBtYWtlU3R5bGVzV2l0aG91dERlZmF1bHQgfSBmcm9tICdAbWF0ZXJpYWwtdWkvc3R5bGVzJztcbmltcG9ydCBkZWZhdWx0VGhlbWUgZnJvbSAnLi9kZWZhdWx0VGhlbWUnO1xuXG5mdW5jdGlvbiBtYWtlU3R5bGVzKHN0eWxlc09yQ3JlYXRvcikge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHJldHVybiBtYWtlU3R5bGVzV2l0aG91dERlZmF1bHQoc3R5bGVzT3JDcmVhdG9yLCBfZXh0ZW5kcyh7XG4gICAgZGVmYXVsdFRoZW1lOiBkZWZhdWx0VGhlbWVcbiAgfSwgb3B0aW9ucykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYWtlU3R5bGVzOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbi8vIGltcG9ydCBNdWlUaGVtZVByb3ZpZGVyIGZyb20gJ21hdGVyaWFsLXVpL3N0eWxlcy9NdWlUaGVtZVByb3ZpZGVyJztcbmltcG9ydCBQcmljZVRhYmxlIGZyb20gJy4vY29tcG9uZW50L1ByaWNlVGFibGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb290IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8UHJpY2VUYWJsZSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPFJvb3QgLz4sIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53cmFwcGVyJykpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==